import{r as ge,a as ox,g as ax}from"./react-vendor-DsceW-4w.js";var D0={exports:{}},Kc={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var lx=ge,cx=Symbol.for("react.element"),ux=Symbol.for("react.fragment"),hx=Object.prototype.hasOwnProperty,fx=lx.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,dx={key:!0,ref:!0,__self:!0,__source:!0};function N0(r,e,t){var n,i={},s=null,l=null;t!==void 0&&(s=""+t),e.key!==void 0&&(s=""+e.key),e.ref!==void 0&&(l=e.ref);for(n in e)hx.call(e,n)&&!dx.hasOwnProperty(n)&&(i[n]=e[n]);if(r&&r.defaultProps)for(n in e=r.defaultProps,e)i[n]===void 0&&(i[n]=e[n]);return{$$typeof:cx,type:r,key:s,ref:l,props:i,_owner:fx.current}}Kc.Fragment=ux;Kc.jsx=N0;Kc.jsxs=N0;D0.exports=Kc;var Ti=D0.exports,Bm={},U0,km=ox;U0=Bm.createRoot=km.createRoot,Bm.hydrateRoot=km.hydrateRoot;const px="modulepreload",mx=function(r){return"/"+r},Hm={},uR=function(e,t,n){let i=Promise.resolve();if(t&&t.length>0){document.getElementsByTagName("link");const l=document.querySelector("meta[property=csp-nonce]"),c=l?.nonce||l?.getAttribute("nonce");i=Promise.allSettled(t.map(u=>{if(u=mx(u),u in Hm)return;Hm[u]=!0;const h=u.endsWith(".css"),f=h?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${u}"]${f}`))return;const p=document.createElement("link");if(p.rel=h?"stylesheet":px,h||(p.as="script"),p.crossOrigin="",p.href=u,c&&p.setAttribute("nonce",c),document.head.appendChild(p),h)return new Promise((m,v)=>{p.addEventListener("load",m),p.addEventListener("error",()=>v(new Error(`Unable to preload CSS for ${u}`)))})}))}function s(l){const c=new Event("vite:preloadError",{cancelable:!0});if(c.payload=l,window.dispatchEvent(c),!c.defaultPrevented)throw l}return i.then(l=>{for(const c of l||[])c.status==="rejected"&&s(c.reason);return e().catch(s)})};/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const $c="158",os={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},as={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},O0=0,Ef=1,F0=2,gx=3,z0=0,eu=1,da=2,Ei=3,dr=0,Bn=1,ni=2,vx=2,fr=0,ms=1,Tf=2,bf=3,Af=4,B0=5,Ir=100,k0=101,H0=102,Rf=103,Pf=104,V0=200,G0=201,W0=202,X0=203,Xc=204,Yc=205,Y0=206,q0=207,Z0=208,j0=209,Q0=210,J0=211,K0=212,$0=213,ev=214,tv=0,nv=1,iv=2,ya=3,rv=4,sv=5,ov=6,av=7,Ha=0,lv=1,cv=2,Vi=0,uv=1,hv=2,fv=3,_d=4,dv=5,Cf="attached",pv="detached",tu=300,pr=301,Fr=302,xa=303,Sa=304,Ao=306,Ma=1e3,In=1001,wa=1002,nn=1003,qc=1004,_x=1004,pa=1005,yx=1005,rn=1006,yd=1007,xx=1007,zr=1008,Sx=1008,Gi=1009,mv=1010,gv=1011,nu=1012,xd=1013,hr=1014,ki=1015,So=1016,Sd=1017,Md=1018,Nr=1020,vv=1021,Yn=1023,_v=1024,yv=1025,Ur=1026,ys=1027,xv=1028,wd=1029,Sv=1030,Ed=1031,Td=1033,Fc=33776,zc=33777,Bc=33778,kc=33779,Lf=35840,If=35841,Df=35842,Nf=35843,Mv=36196,Uf=37492,Of=37496,Ff=37808,zf=37809,Bf=37810,kf=37811,Hf=37812,Vf=37813,Gf=37814,Wf=37815,Xf=37816,Yf=37817,qf=37818,Zf=37819,jf=37820,Qf=37821,Hc=36492,Jf=36494,Kf=36495,wv=36283,$f=36284,ed=36285,td=36286,Ev=2200,Tv=2201,bv=2202,Ea=2300,Ta=2301,Vc=2302,hs=2400,fs=2401,ba=2402,iu=2500,bd=2501,Mx=0,wx=1,Ex=2,Ad=3e3,Or=3001,Av=3200,Rv=3201,Br=0,Pv=1,ii="",hn="srgb",Yi="srgb-linear",ru="display-p3",Va="display-p3-linear",Aa="linear",Ht="srgb",Ra="rec709",Pa="p3",Tx=0,ls=7680,bx=7681,Ax=7682,Rx=7683,Px=34055,Cx=34056,Lx=5386,Ix=512,Dx=513,Nx=514,Ux=515,Ox=516,Fx=517,zx=518,nd=519,Cv=512,Lv=513,Iv=514,Dv=515,Nv=516,Uv=517,Ov=518,Fv=519,Ca=35044,Bx=35048,kx=35040,Hx=35045,Vx=35049,Gx=35041,Wx=35046,Xx=35050,Yx=35042,qx="100",id="300 es",Zc=1035,Hi=2e3,La=2001;let gr=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,l=i.length;s<l;s++)i[s].call(this,e);e.target=null}}};const Pn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Vm=1234567;const gs=Math.PI/180,Mo=180/Math.PI;function ri(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Pn[r&255]+Pn[r>>8&255]+Pn[r>>16&255]+Pn[r>>24&255]+"-"+Pn[e&255]+Pn[e>>8&255]+"-"+Pn[e>>16&15|64]+Pn[e>>24&255]+"-"+Pn[t&63|128]+Pn[t>>8&255]+"-"+Pn[t>>16&255]+Pn[t>>24&255]+Pn[n&255]+Pn[n>>8&255]+Pn[n>>16&255]+Pn[n>>24&255]).toLowerCase()}function Kt(r,e,t){return Math.max(e,Math.min(t,r))}function Rd(r,e){return(r%e+e)%e}function Zx(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function jx(r,e,t){return r!==e?(t-r)/(e-r):0}function ma(r,e,t){return(1-t)*r+t*e}function Qx(r,e,t,n){return ma(r,e,1-Math.exp(-t*n))}function Jx(r,e=1){return e-Math.abs(Rd(r,e*2)-e)}function Kx(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function $x(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function eS(r,e){return r+Math.floor(Math.random()*(e-r+1))}function tS(r,e){return r+Math.random()*(e-r)}function nS(r){return r*(.5-Math.random())}function iS(r){r!==void 0&&(Vm=r);let e=Vm+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function rS(r){return r*gs}function sS(r){return r*Mo}function rd(r){return(r&r-1)===0&&r!==0}function zv(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function jc(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function oS(r,e,t,n,i){const s=Math.cos,l=Math.sin,c=s(t/2),u=l(t/2),h=s((e+n)/2),f=l((e+n)/2),p=s((e-n)/2),m=l((e-n)/2),v=s((n-e)/2),y=l((n-e)/2);switch(i){case"XYX":r.set(c*f,u*p,u*m,c*h);break;case"YZY":r.set(u*m,c*f,u*p,c*h);break;case"ZXZ":r.set(u*p,u*m,c*f,c*h);break;case"XZX":r.set(c*f,u*y,u*v,c*h);break;case"YXY":r.set(u*v,c*f,u*y,c*h);break;case"ZYZ":r.set(u*y,u*v,c*f,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function qn(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function yt(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const aS={DEG2RAD:gs,RAD2DEG:Mo,generateUUID:ri,clamp:Kt,euclideanModulo:Rd,mapLinear:Zx,inverseLerp:jx,lerp:ma,damp:Qx,pingpong:Jx,smoothstep:Kx,smootherstep:$x,randInt:eS,randFloat:tS,randFloatSpread:nS,seededRandom:iS,degToRad:rS,radToDeg:sS,isPowerOfTwo:rd,ceilPowerOfTwo:zv,floorPowerOfTwo:jc,setQuaternionFromProperEuler:oS,normalize:yt,denormalize:qn};class me{constructor(e=0,t=0){me.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Kt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,l=this.y-e.y;return this.x=s*n-l*i+e.x,this.y=s*i+l*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Mt{constructor(e,t,n,i,s,l,c,u,h){Mt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h)}set(e,t,n,i,s,l,c,u,h){const f=this.elements;return f[0]=e,f[1]=i,f[2]=c,f[3]=t,f[4]=s,f[5]=u,f[6]=n,f[7]=l,f[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[3],u=n[6],h=n[1],f=n[4],p=n[7],m=n[2],v=n[5],y=n[8],w=i[0],x=i[3],_=i[6],E=i[1],M=i[4],b=i[7],R=i[2],P=i[5],I=i[8];return s[0]=l*w+c*E+u*R,s[3]=l*x+c*M+u*P,s[6]=l*_+c*b+u*I,s[1]=h*w+f*E+p*R,s[4]=h*x+f*M+p*P,s[7]=h*_+f*b+p*I,s[2]=m*w+v*E+y*R,s[5]=m*x+v*M+y*P,s[8]=m*_+v*b+y*I,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],f=e[8];return t*l*f-t*c*h-n*s*f+n*c*u+i*s*h-i*l*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=f*l-c*h,m=c*u-f*s,v=h*s-l*u,y=t*p+n*m+i*v;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const w=1/y;return e[0]=p*w,e[1]=(i*h-f*n)*w,e[2]=(c*n-i*l)*w,e[3]=m*w,e[4]=(f*t-i*u)*w,e[5]=(i*s-c*t)*w,e[6]=v*w,e[7]=(n*u-h*t)*w,e[8]=(l*t-n*s)*w,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,l,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*l+h*c)+l+e,-i*h,i*u,-i*(-h*l+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(Nh.makeScale(e,t)),this}rotate(e){return this.premultiply(Nh.makeRotation(-e)),this}translate(e,t){return this.premultiply(Nh.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Nh=new Mt;function Bv(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const lS={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function po(r,e){return new lS[r](e)}function Ia(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function kv(){const r=Ia("canvas");return r.style.display="block",r}const Gm={};function ga(r){r in Gm||(Gm[r]=!0,console.warn(r))}const Wm=new Mt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),Xm=new Mt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Wl={[Yi]:{transfer:Aa,primaries:Ra,toReference:r=>r,fromReference:r=>r},[hn]:{transfer:Ht,primaries:Ra,toReference:r=>r.convertSRGBToLinear(),fromReference:r=>r.convertLinearToSRGB()},[Va]:{transfer:Aa,primaries:Pa,toReference:r=>r.applyMatrix3(Xm),fromReference:r=>r.applyMatrix3(Wm)},[ru]:{transfer:Ht,primaries:Pa,toReference:r=>r.convertSRGBToLinear().applyMatrix3(Xm),fromReference:r=>r.applyMatrix3(Wm).convertLinearToSRGB()}},cS=new Set([Yi,Va]),Ft={enabled:!0,_workingColorSpace:Yi,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(r){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!r},get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(r){if(!cS.has(r))throw new Error(`Unsupported working color space, "${r}".`);this._workingColorSpace=r},convert:function(r,e,t){if(this.enabled===!1||e===t||!e||!t)return r;const n=Wl[e].toReference,i=Wl[t].fromReference;return i(n(r))},fromWorkingColorSpace:function(r,e){return this.convert(r,this._workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this._workingColorSpace)},getPrimaries:function(r){return Wl[r].primaries},getTransfer:function(r){return r===ii?Aa:Wl[r].transfer}};function yo(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Uh(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let Gs;class Pd{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Gs===void 0&&(Gs=Ia("canvas")),Gs.width=e.width,Gs.height=e.height;const n=Gs.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Gs}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Ia("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let l=0;l<s.length;l++)s[l]=yo(s[l]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(yo(t[n]/255)*255):t[n]=yo(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let uS=0;class ds{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:uS++}),this.uuid=ri(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?s.push(Oh(i[l].image)):s.push(Oh(i[l]))}else s=Oh(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function Oh(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?Pd.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let hS=0;class sn extends gr{constructor(e=sn.DEFAULT_IMAGE,t=sn.DEFAULT_MAPPING,n=In,i=In,s=rn,l=zr,c=Yn,u=Gi,h=sn.DEFAULT_ANISOTROPY,f=ii){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:hS++}),this.uuid=ri(),this.name="",this.source=new ds(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=l,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new me(0,0),this.repeat=new me(1,1),this.center=new me(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Mt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof f=="string"?this.colorSpace=f:(ga("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=f===Or?hn:ii),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==tu)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Ma:e.x=e.x-Math.floor(e.x);break;case In:e.x=e.x<0?0:1;break;case wa:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Ma:e.y=e.y-Math.floor(e.y);break;case In:e.y=e.y<0?0:1;break;case wa:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return ga("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===hn?Or:Ad}set encoding(e){ga("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===Or?hn:ii}}sn.DEFAULT_IMAGE=null;sn.DEFAULT_MAPPING=tu;sn.DEFAULT_ANISOTROPY=1;class zt{constructor(e=0,t=0,n=0,i=1){zt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,l=e.elements;return this.x=l[0]*t+l[4]*n+l[8]*i+l[12]*s,this.y=l[1]*t+l[5]*n+l[9]*i+l[13]*s,this.z=l[2]*t+l[6]*n+l[10]*i+l[14]*s,this.w=l[3]*t+l[7]*n+l[11]*i+l[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const u=e.elements,h=u[0],f=u[4],p=u[8],m=u[1],v=u[5],y=u[9],w=u[2],x=u[6],_=u[10];if(Math.abs(f-m)<.01&&Math.abs(p-w)<.01&&Math.abs(y-x)<.01){if(Math.abs(f+m)<.1&&Math.abs(p+w)<.1&&Math.abs(y+x)<.1&&Math.abs(h+v+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const M=(h+1)/2,b=(v+1)/2,R=(_+1)/2,P=(f+m)/4,I=(p+w)/4,z=(y+x)/4;return M>b&&M>R?M<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(M),i=P/n,s=I/n):b>R?b<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(b),n=P/i,s=z/i):R<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(R),n=I/s,i=z/s),this.set(n,i,s,t),this}let E=Math.sqrt((x-y)*(x-y)+(p-w)*(p-w)+(m-f)*(m-f));return Math.abs(E)<.001&&(E=1),this.x=(x-y)/E,this.y=(p-w)/E,this.z=(m-f)/E,this.w=Math.acos((h+v+_-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Hv extends gr{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new zt(0,0,e,t),this.scissorTest=!1,this.viewport=new zt(0,0,e,t);const i={width:e,height:t,depth:1};n.encoding!==void 0&&(ga("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===Or?hn:ii),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:rn,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},n),this.texture=new sn(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps,this.texture.internalFormat=n.internalFormat,this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new ds(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Ai extends Hv{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class su extends sn{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=nn,this.minFilter=nn,this.wrapR=In,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class fS extends Ai{constructor(e=1,t=1,n=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new su(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Cd extends sn{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=nn,this.minFilter=nn,this.wrapR=In,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class dS extends Ai{constructor(e=1,t=1,n=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Cd(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class pS extends Ai{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let l=0;l<n;l++)this.texture[l]=s.clone(),this.texture[l].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class Nt{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,l,c){let u=n[i+0],h=n[i+1],f=n[i+2],p=n[i+3];const m=s[l+0],v=s[l+1],y=s[l+2],w=s[l+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=v,e[t+2]=y,e[t+3]=w;return}if(p!==w||u!==m||h!==v||f!==y){let x=1-c;const _=u*m+h*v+f*y+p*w,E=_>=0?1:-1,M=1-_*_;if(M>Number.EPSILON){const R=Math.sqrt(M),P=Math.atan2(R,_*E);x=Math.sin(x*P)/R,c=Math.sin(c*P)/R}const b=c*E;if(u=u*x+m*b,h=h*x+v*b,f=f*x+y*b,p=p*x+w*b,x===1-c){const R=1/Math.sqrt(u*u+h*h+f*f+p*p);u*=R,h*=R,f*=R,p*=R}}e[t]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,s,l){const c=n[i],u=n[i+1],h=n[i+2],f=n[i+3],p=s[l],m=s[l+1],v=s[l+2],y=s[l+3];return e[t]=c*y+f*p+u*v-h*m,e[t+1]=u*y+f*m+h*p-c*v,e[t+2]=h*y+f*v+c*m-u*p,e[t+3]=f*y-c*p-u*m-h*v,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,s=e._z,l=e._order,c=Math.cos,u=Math.sin,h=c(n/2),f=c(i/2),p=c(s/2),m=u(n/2),v=u(i/2),y=u(s/2);switch(l){case"XYZ":this._x=m*f*p+h*v*y,this._y=h*v*p-m*f*y,this._z=h*f*y+m*v*p,this._w=h*f*p-m*v*y;break;case"YXZ":this._x=m*f*p+h*v*y,this._y=h*v*p-m*f*y,this._z=h*f*y-m*v*p,this._w=h*f*p+m*v*y;break;case"ZXY":this._x=m*f*p-h*v*y,this._y=h*v*p+m*f*y,this._z=h*f*y+m*v*p,this._w=h*f*p-m*v*y;break;case"ZYX":this._x=m*f*p-h*v*y,this._y=h*v*p+m*f*y,this._z=h*f*y-m*v*p,this._w=h*f*p+m*v*y;break;case"YZX":this._x=m*f*p+h*v*y,this._y=h*v*p+m*f*y,this._z=h*f*y-m*v*p,this._w=h*f*p-m*v*y;break;case"XZY":this._x=m*f*p-h*v*y,this._y=h*v*p-m*f*y,this._z=h*f*y+m*v*p,this._w=h*f*p+m*v*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],l=t[1],c=t[5],u=t[9],h=t[2],f=t[6],p=t[10],m=n+c+p;if(m>0){const v=.5/Math.sqrt(m+1);this._w=.25/v,this._x=(f-u)*v,this._y=(s-h)*v,this._z=(l-i)*v}else if(n>c&&n>p){const v=2*Math.sqrt(1+n-c-p);this._w=(f-u)/v,this._x=.25*v,this._y=(i+l)/v,this._z=(s+h)/v}else if(c>p){const v=2*Math.sqrt(1+c-n-p);this._w=(s-h)/v,this._x=(i+l)/v,this._y=.25*v,this._z=(u+f)/v}else{const v=2*Math.sqrt(1+p-n-c);this._w=(l-i)/v,this._x=(s+h)/v,this._y=(u+f)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Kt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,l=e._w,c=t._x,u=t._y,h=t._z,f=t._w;return this._x=n*f+l*c+i*h-s*u,this._y=i*f+l*u+s*c-n*h,this._z=s*f+l*h+n*u-i*c,this._w=l*f-n*c-i*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,l=this._w;let c=l*e._w+n*e._x+i*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=l,this._x=n,this._y=i,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const v=1-t;return this._w=v*l+t*this._w,this._x=v*n+t*this._x,this._y=v*i+t*this._y,this._z=v*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(u),f=Math.atan2(h,c),p=Math.sin((1-t)*f)/h,m=Math.sin(t*f)/h;return this._w=l*p+this._w*m,this._x=n*p+this._x*m,this._y=i*p+this._y*m,this._z=s*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class D{constructor(e=0,t=0,n=0){D.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Ym.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Ym.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,l=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*l,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*l,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*l,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,l=e.y,c=e.z,u=e.w,h=2*(l*i-c*n),f=2*(c*t-s*i),p=2*(s*n-l*t);return this.x=t+u*h+l*p-c*f,this.y=n+u*f+c*h-s*p,this.z=i+u*p+s*f-l*h,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,l=t.x,c=t.y,u=t.z;return this.x=i*u-s*c,this.y=s*l-n*u,this.z=n*c-i*l,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Fh.copy(this).projectOnVector(e),this.sub(Fh)}reflect(e){return this.sub(Fh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Kt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Fh=new D,Ym=new Nt;class Zi{constructor(e=new D(1/0,1/0,1/0),t=new D(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Si.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Si.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Si.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let l=0,c=s.count;l<c;l++)e.isMesh===!0?e.getVertexPosition(l,Si):Si.fromBufferAttribute(s,l),Si.applyMatrix4(e.matrixWorld),this.expandByPoint(Si);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Xl.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Xl.copy(n.boundingBox)),Xl.applyMatrix4(e.matrixWorld),this.union(Xl)}const i=e.children;for(let s=0,l=i.length;s<l;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Si),Si.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter($o),Yl.subVectors(this.max,$o),Ws.subVectors(e.a,$o),Xs.subVectors(e.b,$o),Ys.subVectors(e.c,$o),br.subVectors(Xs,Ws),Ar.subVectors(Ys,Xs),Jr.subVectors(Ws,Ys);let t=[0,-br.z,br.y,0,-Ar.z,Ar.y,0,-Jr.z,Jr.y,br.z,0,-br.x,Ar.z,0,-Ar.x,Jr.z,0,-Jr.x,-br.y,br.x,0,-Ar.y,Ar.x,0,-Jr.y,Jr.x,0];return!zh(t,Ws,Xs,Ys,Yl)||(t=[1,0,0,0,1,0,0,0,1],!zh(t,Ws,Xs,Ys,Yl))?!1:(ql.crossVectors(br,Ar),t=[ql.x,ql.y,ql.z],zh(t,Ws,Xs,Ys,Yl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Si).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Si).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(ir[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),ir[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),ir[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),ir[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),ir[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),ir[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),ir[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),ir[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(ir),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const ir=[new D,new D,new D,new D,new D,new D,new D,new D],Si=new D,Xl=new Zi,Ws=new D,Xs=new D,Ys=new D,br=new D,Ar=new D,Jr=new D,$o=new D,Yl=new D,ql=new D,Kr=new D;function zh(r,e,t,n,i){for(let s=0,l=r.length-3;s<=l;s+=3){Kr.fromArray(r,s);const c=i.x*Math.abs(Kr.x)+i.y*Math.abs(Kr.y)+i.z*Math.abs(Kr.z),u=e.dot(Kr),h=t.dot(Kr),f=n.dot(Kr);if(Math.max(-Math.max(u,h,f),Math.min(u,h,f))>c)return!1}return!0}const mS=new Zi,ea=new D,Bh=new D;let Ri=class{constructor(e=new D,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):mS.setFromPoints(e).getCenter(n);let i=0;for(let s=0,l=e.length;s<l;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ea.subVectors(e,this.center);const t=ea.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(ea,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Bh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ea.copy(e.center).add(Bh)),this.expandByPoint(ea.copy(e.center).sub(Bh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}};const rr=new D,kh=new D,Zl=new D,Rr=new D,Hh=new D,jl=new D,Vh=new D;class ws{constructor(e=new D,t=new D(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,rr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=rr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(rr.copy(this.origin).addScaledVector(this.direction,t),rr.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){kh.copy(e).add(t).multiplyScalar(.5),Zl.copy(t).sub(e).normalize(),Rr.copy(this.origin).sub(kh);const s=e.distanceTo(t)*.5,l=-this.direction.dot(Zl),c=Rr.dot(this.direction),u=-Rr.dot(Zl),h=Rr.lengthSq(),f=Math.abs(1-l*l);let p,m,v,y;if(f>0)if(p=l*u-c,m=l*c-u,y=s*f,p>=0)if(m>=-y)if(m<=y){const w=1/f;p*=w,m*=w,v=p*(p+l*m+2*c)+m*(l*p+m+2*u)+h}else m=s,p=Math.max(0,-(l*m+c)),v=-p*p+m*(m+2*u)+h;else m=-s,p=Math.max(0,-(l*m+c)),v=-p*p+m*(m+2*u)+h;else m<=-y?(p=Math.max(0,-(-l*s+c)),m=p>0?-s:Math.min(Math.max(-s,-u),s),v=-p*p+m*(m+2*u)+h):m<=y?(p=0,m=Math.min(Math.max(-s,-u),s),v=m*(m+2*u)+h):(p=Math.max(0,-(l*s+c)),m=p>0?s:Math.min(Math.max(-s,-u),s),v=-p*p+m*(m+2*u)+h);else m=l>0?-s:s,p=Math.max(0,-(l*m+c)),v=-p*p+m*(m+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy(kh).addScaledVector(Zl,m),v}intersectSphere(e,t){rr.subVectors(e.center,this.origin);const n=rr.dot(this.direction),i=rr.dot(rr)-n*n,s=e.radius*e.radius;if(i>s)return null;const l=Math.sqrt(s-i),c=n-l,u=n+l;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,l,c,u;const h=1/this.direction.x,f=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,i=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,i=(e.min.x-m.x)*h),f>=0?(s=(e.min.y-m.y)*f,l=(e.max.y-m.y)*f):(s=(e.max.y-m.y)*f,l=(e.min.y-m.y)*f),n>l||s>i||((s>n||isNaN(n))&&(n=s),(l<i||isNaN(i))&&(i=l),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,rr)!==null}intersectTriangle(e,t,n,i,s){Hh.subVectors(t,e),jl.subVectors(n,e),Vh.crossVectors(Hh,jl);let l=this.direction.dot(Vh),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;Rr.subVectors(this.origin,e);const u=c*this.direction.dot(jl.crossVectors(Rr,jl));if(u<0)return null;const h=c*this.direction.dot(Hh.cross(Rr));if(h<0||u+h>l)return null;const f=-c*Rr.dot(Vh);return f<0?null:this.at(f/l,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class dt{constructor(e,t,n,i,s,l,c,u,h,f,p,m,v,y,w,x){dt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h,f,p,m,v,y,w,x)}set(e,t,n,i,s,l,c,u,h,f,p,m,v,y,w,x){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=i,_[1]=s,_[5]=l,_[9]=c,_[13]=u,_[2]=h,_[6]=f,_[10]=p,_[14]=m,_[3]=v,_[7]=y,_[11]=w,_[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new dt().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/qs.setFromMatrixColumn(e,0).length(),s=1/qs.setFromMatrixColumn(e,1).length(),l=1/qs.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*l,t[9]=n[9]*l,t[10]=n[10]*l,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,l=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),f=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const m=l*f,v=l*p,y=c*f,w=c*p;t[0]=u*f,t[4]=-u*p,t[8]=h,t[1]=v+y*h,t[5]=m-w*h,t[9]=-c*u,t[2]=w-m*h,t[6]=y+v*h,t[10]=l*u}else if(e.order==="YXZ"){const m=u*f,v=u*p,y=h*f,w=h*p;t[0]=m+w*c,t[4]=y*c-v,t[8]=l*h,t[1]=l*p,t[5]=l*f,t[9]=-c,t[2]=v*c-y,t[6]=w+m*c,t[10]=l*u}else if(e.order==="ZXY"){const m=u*f,v=u*p,y=h*f,w=h*p;t[0]=m-w*c,t[4]=-l*p,t[8]=y+v*c,t[1]=v+y*c,t[5]=l*f,t[9]=w-m*c,t[2]=-l*h,t[6]=c,t[10]=l*u}else if(e.order==="ZYX"){const m=l*f,v=l*p,y=c*f,w=c*p;t[0]=u*f,t[4]=y*h-v,t[8]=m*h+w,t[1]=u*p,t[5]=w*h+m,t[9]=v*h-y,t[2]=-h,t[6]=c*u,t[10]=l*u}else if(e.order==="YZX"){const m=l*u,v=l*h,y=c*u,w=c*h;t[0]=u*f,t[4]=w-m*p,t[8]=y*p+v,t[1]=p,t[5]=l*f,t[9]=-c*f,t[2]=-h*f,t[6]=v*p+y,t[10]=m-w*p}else if(e.order==="XZY"){const m=l*u,v=l*h,y=c*u,w=c*h;t[0]=u*f,t[4]=-p,t[8]=h*f,t[1]=m*p+w,t[5]=l*f,t[9]=v*p-y,t[2]=y*p-v,t[6]=c*f,t[10]=w*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(gS,e,vS)}lookAt(e,t,n){const i=this.elements;return ei.subVectors(e,t),ei.lengthSq()===0&&(ei.z=1),ei.normalize(),Pr.crossVectors(n,ei),Pr.lengthSq()===0&&(Math.abs(n.z)===1?ei.x+=1e-4:ei.z+=1e-4,ei.normalize(),Pr.crossVectors(n,ei)),Pr.normalize(),Ql.crossVectors(ei,Pr),i[0]=Pr.x,i[4]=Ql.x,i[8]=ei.x,i[1]=Pr.y,i[5]=Ql.y,i[9]=ei.y,i[2]=Pr.z,i[6]=Ql.z,i[10]=ei.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[4],u=n[8],h=n[12],f=n[1],p=n[5],m=n[9],v=n[13],y=n[2],w=n[6],x=n[10],_=n[14],E=n[3],M=n[7],b=n[11],R=n[15],P=i[0],I=i[4],z=i[8],A=i[12],C=i[1],B=i[5],$=i[9],oe=i[13],G=i[2],q=i[6],ie=i[10],te=i[14],Q=i[3],j=i[7],X=i[11],U=i[15];return s[0]=l*P+c*C+u*G+h*Q,s[4]=l*I+c*B+u*q+h*j,s[8]=l*z+c*$+u*ie+h*X,s[12]=l*A+c*oe+u*te+h*U,s[1]=f*P+p*C+m*G+v*Q,s[5]=f*I+p*B+m*q+v*j,s[9]=f*z+p*$+m*ie+v*X,s[13]=f*A+p*oe+m*te+v*U,s[2]=y*P+w*C+x*G+_*Q,s[6]=y*I+w*B+x*q+_*j,s[10]=y*z+w*$+x*ie+_*X,s[14]=y*A+w*oe+x*te+_*U,s[3]=E*P+M*C+b*G+R*Q,s[7]=E*I+M*B+b*q+R*j,s[11]=E*z+M*$+b*ie+R*X,s[15]=E*A+M*oe+b*te+R*U,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],l=e[1],c=e[5],u=e[9],h=e[13],f=e[2],p=e[6],m=e[10],v=e[14],y=e[3],w=e[7],x=e[11],_=e[15];return y*(+s*u*p-i*h*p-s*c*m+n*h*m+i*c*v-n*u*v)+w*(+t*u*v-t*h*m+s*l*m-i*l*v+i*h*f-s*u*f)+x*(+t*h*p-t*c*v-s*l*p+n*l*v+s*c*f-n*h*f)+_*(-i*c*f-t*u*p+t*c*m+i*l*p-n*l*m+n*u*f)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=e[9],m=e[10],v=e[11],y=e[12],w=e[13],x=e[14],_=e[15],E=p*x*h-w*m*h+w*u*v-c*x*v-p*u*_+c*m*_,M=y*m*h-f*x*h-y*u*v+l*x*v+f*u*_-l*m*_,b=f*w*h-y*p*h+y*c*v-l*w*v-f*c*_+l*p*_,R=y*p*u-f*w*u-y*c*m+l*w*m+f*c*x-l*p*x,P=t*E+n*M+i*b+s*R;if(P===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const I=1/P;return e[0]=E*I,e[1]=(w*m*s-p*x*s-w*i*v+n*x*v+p*i*_-n*m*_)*I,e[2]=(c*x*s-w*u*s+w*i*h-n*x*h-c*i*_+n*u*_)*I,e[3]=(p*u*s-c*m*s-p*i*h+n*m*h+c*i*v-n*u*v)*I,e[4]=M*I,e[5]=(f*x*s-y*m*s+y*i*v-t*x*v-f*i*_+t*m*_)*I,e[6]=(y*u*s-l*x*s-y*i*h+t*x*h+l*i*_-t*u*_)*I,e[7]=(l*m*s-f*u*s+f*i*h-t*m*h-l*i*v+t*u*v)*I,e[8]=b*I,e[9]=(y*p*s-f*w*s-y*n*v+t*w*v+f*n*_-t*p*_)*I,e[10]=(l*w*s-y*c*s+y*n*h-t*w*h-l*n*_+t*c*_)*I,e[11]=(f*c*s-l*p*s-f*n*h+t*p*h+l*n*v-t*c*v)*I,e[12]=R*I,e[13]=(f*w*i-y*p*i+y*n*m-t*w*m-f*n*x+t*p*x)*I,e[14]=(y*c*i-l*w*i-y*n*u+t*w*u+l*n*x-t*c*x)*I,e[15]=(l*p*i-f*c*i+f*n*u-t*p*u-l*n*m+t*c*m)*I,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,l=e.x,c=e.y,u=e.z,h=s*l,f=s*c;return this.set(h*l+n,h*c-i*u,h*u+i*c,0,h*c+i*u,f*c+n,f*u-i*l,0,h*u-i*c,f*u+i*l,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,l){return this.set(1,n,s,0,e,1,l,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,l=t._y,c=t._z,u=t._w,h=s+s,f=l+l,p=c+c,m=s*h,v=s*f,y=s*p,w=l*f,x=l*p,_=c*p,E=u*h,M=u*f,b=u*p,R=n.x,P=n.y,I=n.z;return i[0]=(1-(w+_))*R,i[1]=(v+b)*R,i[2]=(y-M)*R,i[3]=0,i[4]=(v-b)*P,i[5]=(1-(m+_))*P,i[6]=(x+E)*P,i[7]=0,i[8]=(y+M)*I,i[9]=(x-E)*I,i[10]=(1-(m+w))*I,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=qs.set(i[0],i[1],i[2]).length();const l=qs.set(i[4],i[5],i[6]).length(),c=qs.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],Mi.copy(this);const h=1/s,f=1/l,p=1/c;return Mi.elements[0]*=h,Mi.elements[1]*=h,Mi.elements[2]*=h,Mi.elements[4]*=f,Mi.elements[5]*=f,Mi.elements[6]*=f,Mi.elements[8]*=p,Mi.elements[9]*=p,Mi.elements[10]*=p,t.setFromRotationMatrix(Mi),n.x=s,n.y=l,n.z=c,this}makePerspective(e,t,n,i,s,l,c=Hi){const u=this.elements,h=2*s/(t-e),f=2*s/(n-i),p=(t+e)/(t-e),m=(n+i)/(n-i);let v,y;if(c===Hi)v=-(l+s)/(l-s),y=-2*l*s/(l-s);else if(c===La)v=-l/(l-s),y=-l*s/(l-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=h,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=f,u[9]=m,u[13]=0,u[2]=0,u[6]=0,u[10]=v,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,s,l,c=Hi){const u=this.elements,h=1/(t-e),f=1/(n-i),p=1/(l-s),m=(t+e)*h,v=(n+i)*f;let y,w;if(c===Hi)y=(l+s)*p,w=-2*p;else if(c===La)y=s*p,w=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-m,u[1]=0,u[5]=2*f,u[9]=0,u[13]=-v,u[2]=0,u[6]=0,u[10]=w,u[14]=-y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const qs=new D,Mi=new dt,gS=new D(0,0,0),vS=new D(1,1,1),Pr=new D,Ql=new D,ei=new D,qm=new dt,Zm=new Nt;class Ro{constructor(e=0,t=0,n=0,i=Ro.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],l=i[4],c=i[8],u=i[1],h=i[5],f=i[9],p=i[2],m=i[6],v=i[10];switch(t){case"XYZ":this._y=Math.asin(Kt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-f,v),this._z=Math.atan2(-l,s)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-Kt(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(c,v),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(Kt(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,v),this._z=Math.atan2(-l,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-Kt(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,v),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-l,h));break;case"YZX":this._z=Math.asin(Kt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-f,h),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(c,v));break;case"XZY":this._z=Math.asin(-Kt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-f,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return qm.makeRotationFromQuaternion(e),this.setFromRotationMatrix(qm,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Zm.setFromEuler(this),this.setFromQuaternion(Zm,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ro.DEFAULT_ORDER="XYZ";class vs{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let _S=0;const jm=new D,Zs=new Nt,sr=new dt,Jl=new D,ta=new D,yS=new D,xS=new Nt,Qm=new D(1,0,0),Jm=new D(0,1,0),Km=new D(0,0,1),SS={type:"added"},MS={type:"removed"};class bt extends gr{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:_S++}),this.uuid=ri(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=bt.DEFAULT_UP.clone();const e=new D,t=new Ro,n=new Nt,i=new D(1,1,1);function s(){n.setFromEuler(t,!1)}function l(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new dt},normalMatrix:{value:new Mt}}),this.matrix=new dt,this.matrixWorld=new dt,this.matrixAutoUpdate=bt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=bt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new vs,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Zs.setFromAxisAngle(e,t),this.quaternion.multiply(Zs),this}rotateOnWorldAxis(e,t){return Zs.setFromAxisAngle(e,t),this.quaternion.premultiply(Zs),this}rotateX(e){return this.rotateOnAxis(Qm,e)}rotateY(e){return this.rotateOnAxis(Jm,e)}rotateZ(e){return this.rotateOnAxis(Km,e)}translateOnAxis(e,t){return jm.copy(e).applyQuaternion(this.quaternion),this.position.add(jm.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Qm,e)}translateY(e){return this.translateOnAxis(Jm,e)}translateZ(e){return this.translateOnAxis(Km,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(sr.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Jl.copy(e):Jl.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ta.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?sr.lookAt(ta,Jl,this.up):sr.lookAt(Jl,ta,this.up),this.quaternion.setFromRotationMatrix(sr),i&&(sr.extractRotation(i.matrixWorld),Zs.setFromRotationMatrix(sr),this.quaternion.premultiply(Zs.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(SS)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(MS)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),sr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),sr.multiply(e.parent.matrixWorld)),e.applyMatrix4(sr),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(e,t);if(l!==void 0)return l}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let i=0,s=this.children.length;i<s;i++){const l=this.children[i].getObjectsByProperty(e,t);l.length>0&&(n=n.concat(l))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ta,e,yS),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ta,xS,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,l=i.length;s<l;s++){const c=i[s];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,f=u.length;h<f;h++){const p=u[h];s(e.shapes,p)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));i.material=c}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(s(e.animations,u))}}if(t){const c=l(e.geometries),u=l(e.materials),h=l(e.textures),f=l(e.images),p=l(e.shapes),m=l(e.skeletons),v=l(e.animations),y=l(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),f.length>0&&(n.images=f),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),v.length>0&&(n.animations=v),y.length>0&&(n.nodes=y)}return n.object=i,n;function l(c){const u=[];for(const h in c){const f=c[h];delete f.metadata,u.push(f)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}bt.DEFAULT_UP=new D(0,1,0);bt.DEFAULT_MATRIX_AUTO_UPDATE=!0;bt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const wi=new D,or=new D,Gh=new D,ar=new D,js=new D,Qs=new D,$m=new D,Wh=new D,Xh=new D,Yh=new D;let Kl=!1;class Xn{constructor(e=new D,t=new D,n=new D){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),wi.subVectors(e,t),i.cross(wi);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){wi.subVectors(i,t),or.subVectors(n,t),Gh.subVectors(e,t);const l=wi.dot(wi),c=wi.dot(or),u=wi.dot(Gh),h=or.dot(or),f=or.dot(Gh),p=l*h-c*c;if(p===0)return s.set(-2,-1,-1);const m=1/p,v=(h*u-c*f)*m,y=(l*f-c*u)*m;return s.set(1-v-y,y,v)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,ar),ar.x>=0&&ar.y>=0&&ar.x+ar.y<=1}static getUV(e,t,n,i,s,l,c,u){return Kl===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Kl=!0),this.getInterpolation(e,t,n,i,s,l,c,u)}static getInterpolation(e,t,n,i,s,l,c,u){return this.getBarycoord(e,t,n,i,ar),u.setScalar(0),u.addScaledVector(s,ar.x),u.addScaledVector(l,ar.y),u.addScaledVector(c,ar.z),u}static isFrontFacing(e,t,n,i){return wi.subVectors(n,t),or.subVectors(e,t),wi.cross(or).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return wi.subVectors(this.c,this.b),or.subVectors(this.a,this.b),wi.cross(or).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Xn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Xn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return Kl===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Kl=!0),Xn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}getInterpolation(e,t,n,i,s){return Xn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return Xn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Xn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let l,c;js.subVectors(i,n),Qs.subVectors(s,n),Wh.subVectors(e,n);const u=js.dot(Wh),h=Qs.dot(Wh);if(u<=0&&h<=0)return t.copy(n);Xh.subVectors(e,i);const f=js.dot(Xh),p=Qs.dot(Xh);if(f>=0&&p<=f)return t.copy(i);const m=u*p-f*h;if(m<=0&&u>=0&&f<=0)return l=u/(u-f),t.copy(n).addScaledVector(js,l);Yh.subVectors(e,s);const v=js.dot(Yh),y=Qs.dot(Yh);if(y>=0&&v<=y)return t.copy(s);const w=v*h-u*y;if(w<=0&&h>=0&&y<=0)return c=h/(h-y),t.copy(n).addScaledVector(Qs,c);const x=f*y-v*p;if(x<=0&&p-f>=0&&v-y>=0)return $m.subVectors(s,i),c=(p-f)/(p-f+(v-y)),t.copy(i).addScaledVector($m,c);const _=1/(x+w+m);return l=w*_,c=m*_,t.copy(n).addScaledVector(js,l).addScaledVector(Qs,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Vv={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Cr={h:0,s:0,l:0},$l={h:0,s:0,l:0};function qh(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class Be{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=hn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Ft.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Ft.workingColorSpace){return this.r=e,this.g=t,this.b=n,Ft.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Ft.workingColorSpace){if(e=Rd(e,1),t=Kt(t,0,1),n=Kt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,l=2*n-s;this.r=qh(l,s,e+1/3),this.g=qh(l,s,e),this.b=qh(l,s,e-1/3)}return Ft.toWorkingColorSpace(this,i),this}setStyle(e,t=hn){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],l=s.length;if(l===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(l===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=hn){const n=Vv[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=yo(e.r),this.g=yo(e.g),this.b=yo(e.b),this}copyLinearToSRGB(e){return this.r=Uh(e.r),this.g=Uh(e.g),this.b=Uh(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=hn){return Ft.fromWorkingColorSpace(Cn.copy(this),e),Math.round(Kt(Cn.r*255,0,255))*65536+Math.round(Kt(Cn.g*255,0,255))*256+Math.round(Kt(Cn.b*255,0,255))}getHexString(e=hn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Ft.workingColorSpace){Ft.fromWorkingColorSpace(Cn.copy(this),t);const n=Cn.r,i=Cn.g,s=Cn.b,l=Math.max(n,i,s),c=Math.min(n,i,s);let u,h;const f=(c+l)/2;if(c===l)u=0,h=0;else{const p=l-c;switch(h=f<=.5?p/(l+c):p/(2-l-c),l){case n:u=(i-s)/p+(i<s?6:0);break;case i:u=(s-n)/p+2;break;case s:u=(n-i)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=f,e}getRGB(e,t=Ft.workingColorSpace){return Ft.fromWorkingColorSpace(Cn.copy(this),t),e.r=Cn.r,e.g=Cn.g,e.b=Cn.b,e}getStyle(e=hn){Ft.fromWorkingColorSpace(Cn.copy(this),e);const t=Cn.r,n=Cn.g,i=Cn.b;return e!==hn?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Cr),this.setHSL(Cr.h+e,Cr.s+t,Cr.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Cr),e.getHSL($l);const n=ma(Cr.h,$l.h,t),i=ma(Cr.s,$l.s,t),s=ma(Cr.l,$l.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Cn=new Be;Be.NAMES=Vv;let wS=0;class Dn extends gr{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:wS++}),this.uuid=ri(),this.name="",this.type="Material",this.blending=ms,this.side=dr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Xc,this.blendDst=Yc,this.blendEquation=Ir,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Be(0,0,0),this.blendAlpha=0,this.depthFunc=ya,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=nd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ls,this.stencilZFail=ls,this.stencilZPass=ls,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==ms&&(n.blending=this.blending),this.side!==dr&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Xc&&(n.blendSrc=this.blendSrc),this.blendDst!==Yc&&(n.blendDst=this.blendDst),this.blendEquation!==Ir&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==ya&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==nd&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==ls&&(n.stencilFail=this.stencilFail),this.stencilZFail!==ls&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==ls&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const l=[];for(const c in s){const u=s[c];delete u.metadata,l.push(u)}return l}if(t){const s=i(e.textures),l=i(e.images);s.length>0&&(n.textures=s),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class ji extends Dn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Be(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ha,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const ur=ES();function ES(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const s=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,f=0;for(;!(h&8388608);)h<<=1,f-=8388608;h&=-8388609,f+=947912704,s[u]=h|f}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)l[u]=u<<23;l[31]=1199570944,l[32]=2147483648;for(let u=33;u<63;++u)l[u]=2147483648+(u-32<<23);l[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:l,offsetTable:c}}function Gn(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=Kt(r,-65504,65504),ur.floatView[0]=r;const e=ur.uint32View[0],t=e>>23&511;return ur.baseTable[t]+((e&8388607)>>ur.shiftTable[t])}function ha(r){const e=r>>10;return ur.uint32View[0]=ur.mantissaTable[ur.offsetTable[e]+(r&1023)]+ur.exponentTable[e],ur.floatView[0]}const TS={toHalfFloat:Gn,fromHalfFloat:ha},cn=new D,ec=new me;class kt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Ca,this.updateRange={offset:0,count:-1},this.gpuType=ki,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)ec.fromBufferAttribute(this,t),ec.applyMatrix3(e),this.setXY(t,ec.x,ec.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)cn.fromBufferAttribute(this,t),cn.applyMatrix3(e),this.setXYZ(t,cn.x,cn.y,cn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)cn.fromBufferAttribute(this,t),cn.applyMatrix4(e),this.setXYZ(t,cn.x,cn.y,cn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)cn.fromBufferAttribute(this,t),cn.applyNormalMatrix(e),this.setXYZ(t,cn.x,cn.y,cn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)cn.fromBufferAttribute(this,t),cn.transformDirection(e),this.setXYZ(t,cn.x,cn.y,cn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=qn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=yt(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=qn(t,this.array)),t}setX(e,t){return this.normalized&&(t=yt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=qn(t,this.array)),t}setY(e,t){return this.normalized&&(t=yt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=qn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=yt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=qn(t,this.array)),t}setW(e,t){return this.normalized&&(t=yt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=yt(t,this.array),n=yt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=yt(t,this.array),n=yt(n,this.array),i=yt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=yt(t,this.array),n=yt(n,this.array),i=yt(i,this.array),s=yt(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Ca&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}class bS extends kt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class AS extends kt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class RS extends kt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class PS extends kt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Ld extends kt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class CS extends kt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Id extends kt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class LS extends kt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=ha(this.array[e*this.itemSize]);return this.normalized&&(t=qn(t,this.array)),t}setX(e,t){return this.normalized&&(t=yt(t,this.array)),this.array[e*this.itemSize]=Gn(t),this}getY(e){let t=ha(this.array[e*this.itemSize+1]);return this.normalized&&(t=qn(t,this.array)),t}setY(e,t){return this.normalized&&(t=yt(t,this.array)),this.array[e*this.itemSize+1]=Gn(t),this}getZ(e){let t=ha(this.array[e*this.itemSize+2]);return this.normalized&&(t=qn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=yt(t,this.array)),this.array[e*this.itemSize+2]=Gn(t),this}getW(e){let t=ha(this.array[e*this.itemSize+3]);return this.normalized&&(t=qn(t,this.array)),t}setW(e,t){return this.normalized&&(t=yt(t,this.array)),this.array[e*this.itemSize+3]=Gn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=yt(t,this.array),n=yt(n,this.array)),this.array[e+0]=Gn(t),this.array[e+1]=Gn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=yt(t,this.array),n=yt(n,this.array),i=yt(i,this.array)),this.array[e+0]=Gn(t),this.array[e+1]=Gn(n),this.array[e+2]=Gn(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=yt(t,this.array),n=yt(n,this.array),i=yt(i,this.array),s=yt(s,this.array)),this.array[e+0]=Gn(t),this.array[e+1]=Gn(n),this.array[e+2]=Gn(i),this.array[e+3]=Gn(s),this}}class Xe extends kt{constructor(e,t,n){super(new Float32Array(e),t,n)}}class IS extends kt{constructor(e,t,n){super(new Float64Array(e),t,n)}}let DS=0;const gi=new dt,Zh=new bt,Js=new D,ti=new Zi,na=new Zi,xn=new D;class vt extends gr{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:DS++}),this.uuid=ri(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Bv(e)?Id:Ld)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new Mt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return gi.makeRotationFromQuaternion(e),this.applyMatrix4(gi),this}rotateX(e){return gi.makeRotationX(e),this.applyMatrix4(gi),this}rotateY(e){return gi.makeRotationY(e),this.applyMatrix4(gi),this}rotateZ(e){return gi.makeRotationZ(e),this.applyMatrix4(gi),this}translate(e,t,n){return gi.makeTranslation(e,t,n),this.applyMatrix4(gi),this}scale(e,t,n){return gi.makeScale(e,t,n),this.applyMatrix4(gi),this}lookAt(e){return Zh.lookAt(e),Zh.updateMatrix(),this.applyMatrix4(Zh.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Js).negate(),this.translate(Js.x,Js.y,Js.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Xe(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Zi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new D(-1/0,-1/0,-1/0),new D(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];ti.setFromBufferAttribute(s),this.morphTargetsRelative?(xn.addVectors(this.boundingBox.min,ti.min),this.boundingBox.expandByPoint(xn),xn.addVectors(this.boundingBox.max,ti.max),this.boundingBox.expandByPoint(xn)):(this.boundingBox.expandByPoint(ti.min),this.boundingBox.expandByPoint(ti.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ri);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new D,1/0);return}if(e){const n=this.boundingSphere.center;if(ti.setFromBufferAttribute(e),t)for(let s=0,l=t.length;s<l;s++){const c=t[s];na.setFromBufferAttribute(c),this.morphTargetsRelative?(xn.addVectors(ti.min,na.min),ti.expandByPoint(xn),xn.addVectors(ti.max,na.max),ti.expandByPoint(xn)):(ti.expandByPoint(na.min),ti.expandByPoint(na.max))}ti.getCenter(n);let i=0;for(let s=0,l=e.count;s<l;s++)xn.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(xn));if(t)for(let s=0,l=t.length;s<l;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,f=c.count;h<f;h++)xn.fromBufferAttribute(c,h),u&&(Js.fromBufferAttribute(e,h),xn.add(Js)),i=Math.max(i,n.distanceToSquared(xn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,l=t.uv.array,c=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new kt(new Float32Array(4*c),4));const u=this.getAttribute("tangent").array,h=[],f=[];for(let C=0;C<c;C++)h[C]=new D,f[C]=new D;const p=new D,m=new D,v=new D,y=new me,w=new me,x=new me,_=new D,E=new D;function M(C,B,$){p.fromArray(i,C*3),m.fromArray(i,B*3),v.fromArray(i,$*3),y.fromArray(l,C*2),w.fromArray(l,B*2),x.fromArray(l,$*2),m.sub(p),v.sub(p),w.sub(y),x.sub(y);const oe=1/(w.x*x.y-x.x*w.y);isFinite(oe)&&(_.copy(m).multiplyScalar(x.y).addScaledVector(v,-w.y).multiplyScalar(oe),E.copy(v).multiplyScalar(w.x).addScaledVector(m,-x.x).multiplyScalar(oe),h[C].add(_),h[B].add(_),h[$].add(_),f[C].add(E),f[B].add(E),f[$].add(E))}let b=this.groups;b.length===0&&(b=[{start:0,count:n.length}]);for(let C=0,B=b.length;C<B;++C){const $=b[C],oe=$.start,G=$.count;for(let q=oe,ie=oe+G;q<ie;q+=3)M(n[q+0],n[q+1],n[q+2])}const R=new D,P=new D,I=new D,z=new D;function A(C){I.fromArray(s,C*3),z.copy(I);const B=h[C];R.copy(B),R.sub(I.multiplyScalar(I.dot(B))).normalize(),P.crossVectors(z,B);const oe=P.dot(f[C])<0?-1:1;u[C*4]=R.x,u[C*4+1]=R.y,u[C*4+2]=R.z,u[C*4+3]=oe}for(let C=0,B=b.length;C<B;++C){const $=b[C],oe=$.start,G=$.count;for(let q=oe,ie=oe+G;q<ie;q+=3)A(n[q+0]),A(n[q+1]),A(n[q+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new kt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,v=n.count;m<v;m++)n.setXYZ(m,0,0,0);const i=new D,s=new D,l=new D,c=new D,u=new D,h=new D,f=new D,p=new D;if(e)for(let m=0,v=e.count;m<v;m+=3){const y=e.getX(m+0),w=e.getX(m+1),x=e.getX(m+2);i.fromBufferAttribute(t,y),s.fromBufferAttribute(t,w),l.fromBufferAttribute(t,x),f.subVectors(l,s),p.subVectors(i,s),f.cross(p),c.fromBufferAttribute(n,y),u.fromBufferAttribute(n,w),h.fromBufferAttribute(n,x),c.add(f),u.add(f),h.add(f),n.setXYZ(y,c.x,c.y,c.z),n.setXYZ(w,u.x,u.y,u.z),n.setXYZ(x,h.x,h.y,h.z)}else for(let m=0,v=t.count;m<v;m+=3)i.fromBufferAttribute(t,m+0),s.fromBufferAttribute(t,m+1),l.fromBufferAttribute(t,m+2),f.subVectors(l,s),p.subVectors(i,s),f.cross(p),n.setXYZ(m+0,f.x,f.y,f.z),n.setXYZ(m+1,f.x,f.y,f.z),n.setXYZ(m+2,f.x,f.y,f.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)xn.fromBufferAttribute(e,t),xn.normalize(),e.setXYZ(t,xn.x,xn.y,xn.z)}toNonIndexed(){function e(c,u){const h=c.array,f=c.itemSize,p=c.normalized,m=new h.constructor(u.length*f);let v=0,y=0;for(let w=0,x=u.length;w<x;w++){c.isInterleavedBufferAttribute?v=u[w]*c.data.stride+c.offset:v=u[w]*f;for(let _=0;_<f;_++)m[y++]=h[v++]}return new kt(m,f,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new vt,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,p=h.length;f<p;f++){const m=h[f],v=e(m,n);u.push(v)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,u=l.length;c<u;c++){const h=l[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],f=[];for(let p=0,m=h.length;p<m;p++){const v=h[p];f.push(v.toJSON(e.data))}f.length>0&&(i[u]=f,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(e.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const f=i[h];this.setAttribute(h,f.clone(t))}const s=e.morphAttributes;for(const h in s){const f=[],p=s[h];for(let m=0,v=p.length;m<v;m++)f.push(p[m].clone(t));this.morphAttributes[h]=f}this.morphTargetsRelative=e.morphTargetsRelative;const l=e.groups;for(let h=0,f=l.length;h<f;h++){const p=l[h];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const eg=new dt,$r=new ws,tc=new Ri,tg=new D,Ks=new D,$s=new D,eo=new D,jh=new D,nc=new D,ic=new me,rc=new me,sc=new me,ng=new D,ig=new D,rg=new D,oc=new D,ac=new D;class Ve extends bt{constructor(e=new vt,t=new ji){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,l=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(s&&c){nc.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const f=c[u],p=s[u];f!==0&&(jh.fromBufferAttribute(p,e),l?nc.addScaledVector(jh,f):nc.addScaledVector(jh.sub(t),f))}t.add(nc)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),tc.copy(n.boundingSphere),tc.applyMatrix4(s),$r.copy(e.ray).recast(e.near),!(tc.containsPoint($r.origin)===!1&&($r.intersectSphere(tc,tg)===null||$r.origin.distanceToSquared(tg)>(e.far-e.near)**2))&&(eg.copy(s).invert(),$r.copy(e.ray).applyMatrix4(eg),!(n.boundingBox!==null&&$r.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,$r)))}_computeIntersections(e,t,n){let i;const s=this.geometry,l=this.material,c=s.index,u=s.attributes.position,h=s.attributes.uv,f=s.attributes.uv1,p=s.attributes.normal,m=s.groups,v=s.drawRange;if(c!==null)if(Array.isArray(l))for(let y=0,w=m.length;y<w;y++){const x=m[y],_=l[x.materialIndex],E=Math.max(x.start,v.start),M=Math.min(c.count,Math.min(x.start+x.count,v.start+v.count));for(let b=E,R=M;b<R;b+=3){const P=c.getX(b),I=c.getX(b+1),z=c.getX(b+2);i=lc(this,_,e,n,h,f,p,P,I,z),i&&(i.faceIndex=Math.floor(b/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,v.start),w=Math.min(c.count,v.start+v.count);for(let x=y,_=w;x<_;x+=3){const E=c.getX(x),M=c.getX(x+1),b=c.getX(x+2);i=lc(this,l,e,n,h,f,p,E,M,b),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(l))for(let y=0,w=m.length;y<w;y++){const x=m[y],_=l[x.materialIndex],E=Math.max(x.start,v.start),M=Math.min(u.count,Math.min(x.start+x.count,v.start+v.count));for(let b=E,R=M;b<R;b+=3){const P=b,I=b+1,z=b+2;i=lc(this,_,e,n,h,f,p,P,I,z),i&&(i.faceIndex=Math.floor(b/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,v.start),w=Math.min(u.count,v.start+v.count);for(let x=y,_=w;x<_;x+=3){const E=x,M=x+1,b=x+2;i=lc(this,l,e,n,h,f,p,E,M,b),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}}}function NS(r,e,t,n,i,s,l,c){let u;if(e.side===Bn?u=n.intersectTriangle(l,s,i,!0,c):u=n.intersectTriangle(i,s,l,e.side===dr,c),u===null)return null;ac.copy(c),ac.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(ac);return h<t.near||h>t.far?null:{distance:h,point:ac.clone(),object:r}}function lc(r,e,t,n,i,s,l,c,u,h){r.getVertexPosition(c,Ks),r.getVertexPosition(u,$s),r.getVertexPosition(h,eo);const f=NS(r,e,t,n,Ks,$s,eo,oc);if(f){i&&(ic.fromBufferAttribute(i,c),rc.fromBufferAttribute(i,u),sc.fromBufferAttribute(i,h),f.uv=Xn.getInterpolation(oc,Ks,$s,eo,ic,rc,sc,new me)),s&&(ic.fromBufferAttribute(s,c),rc.fromBufferAttribute(s,u),sc.fromBufferAttribute(s,h),f.uv1=Xn.getInterpolation(oc,Ks,$s,eo,ic,rc,sc,new me),f.uv2=f.uv1),l&&(ng.fromBufferAttribute(l,c),ig.fromBufferAttribute(l,u),rg.fromBufferAttribute(l,h),f.normal=Xn.getInterpolation(oc,Ks,$s,eo,ng,ig,rg,new D),f.normal.dot(n.direction)>0&&f.normal.multiplyScalar(-1));const p={a:c,b:u,c:h,normal:new D,materialIndex:0};Xn.getNormal(Ks,$s,eo,p.normal),f.face=p}return f}class Wn extends vt{constructor(e=1,t=1,n=1,i=1,s=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:l};const c=this;i=Math.floor(i),s=Math.floor(s),l=Math.floor(l);const u=[],h=[],f=[],p=[];let m=0,v=0;y("z","y","x",-1,-1,n,t,e,l,s,0),y("z","y","x",1,-1,n,t,-e,l,s,1),y("x","z","y",1,1,e,n,t,i,l,2),y("x","z","y",1,-1,e,n,-t,i,l,3),y("x","y","z",1,-1,e,t,n,i,s,4),y("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(u),this.setAttribute("position",new Xe(h,3)),this.setAttribute("normal",new Xe(f,3)),this.setAttribute("uv",new Xe(p,2));function y(w,x,_,E,M,b,R,P,I,z,A){const C=b/I,B=R/z,$=b/2,oe=R/2,G=P/2,q=I+1,ie=z+1;let te=0,Q=0;const j=new D;for(let X=0;X<ie;X++){const U=X*B-oe;for(let Z=0;Z<q;Z++){const ce=Z*C-$;j[w]=ce*E,j[x]=U*M,j[_]=G,h.push(j.x,j.y,j.z),j[w]=0,j[x]=0,j[_]=P>0?1:-1,f.push(j.x,j.y,j.z),p.push(Z/I),p.push(1-X/z),te+=1}}for(let X=0;X<z;X++)for(let U=0;U<I;U++){const Z=m+U+q*X,ce=m+U+q*(X+1),H=m+(U+1)+q*(X+1),xe=m+(U+1)+q*X;u.push(Z,ce,xe),u.push(ce,H,xe),Q+=6}c.addGroup(v,Q,A),v+=Q,m+=te}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Wn(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function wo(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function zn(r){const e={};for(let t=0;t<r.length;t++){const n=wo(r[t]);for(const i in n)e[i]=n[i]}return e}function US(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function Gv(r){return r.getRenderTarget()===null?r.outputColorSpace:Ft.workingColorSpace}const Wv={clone:wo,merge:zn};var OS=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,FS=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class qi extends Dn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=OS,this.fragmentShader=FS,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=wo(e.uniforms),this.uniformsGroups=US(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?t.uniforms[i]={type:"t",value:l.toJSON(e).uuid}:l&&l.isColor?t.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?t.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?t.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?t.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?t.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?t.uniforms[i]={type:"m4",value:l.toArray()}:t.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Ga extends bt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new dt,this.projectionMatrix=new dt,this.projectionMatrixInverse=new dt,this.coordinateSystem=Hi}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class qt extends Ga{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Mo*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(gs*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Mo*2*Math.atan(Math.tan(gs*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,l){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(gs*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const u=l.fullWidth,h=l.fullHeight;s+=l.offsetX*i/u,t-=l.offsetY*n/h,i*=l.width/u,n*=l.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const to=-90,no=1;class Xv extends bt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new qt(to,no,e,t);i.layers=this.layers,this.add(i);const s=new qt(to,no,e,t);s.layers=this.layers,this.add(s);const l=new qt(to,no,e,t);l.layers=this.layers,this.add(l);const c=new qt(to,no,e,t);c.layers=this.layers,this.add(c);const u=new qt(to,no,e,t);u.layers=this.layers,this.add(u);const h=new qt(to,no,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,l,c,u]=t;for(const h of t)this.remove(h);if(e===Hi)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===La)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,l,c,u,h,f]=this.children,p=e.getRenderTarget(),m=e.getActiveCubeFace(),v=e.getActiveMipmapLevel(),y=e.xr.enabled;e.xr.enabled=!1;const w=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,s),e.setRenderTarget(n,1,i),e.render(t,l),e.setRenderTarget(n,2,i),e.render(t,c),e.setRenderTarget(n,3,i),e.render(t,u),e.setRenderTarget(n,4,i),e.render(t,h),n.texture.generateMipmaps=w,e.setRenderTarget(n,5,i),e.render(t,f),e.setRenderTarget(p,m,v),e.xr.enabled=y,n.texture.needsPMREMUpdate=!0}}class Wa extends sn{constructor(e,t,n,i,s,l,c,u,h,f){e=e!==void 0?e:[],t=t!==void 0?t:pr,super(e,t,n,i,s,l,c,u,h,f),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Yv extends Ai{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];t.encoding!==void 0&&(ga("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===Or?hn:ii),this.texture=new Wa(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:rn}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Wn(5,5,5),s=new qi({name:"CubemapFromEquirect",uniforms:wo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Bn,blending:fr});s.uniforms.tEquirect.value=t;const l=new Ve(i,s),c=t.minFilter;return t.minFilter===zr&&(t.minFilter=rn),new Xv(1,10,this).update(e,l),t.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let l=0;l<6;l++)e.setRenderTarget(this,l),e.clear(t,n,i);e.setRenderTarget(s)}}const Qh=new D,zS=new D,BS=new Mt;class cr{constructor(e=new D(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Qh.subVectors(n,t).cross(zS.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Qh),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||BS.getNormalMatrix(e),i=this.coplanarPoint(Qh).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const es=new Ri,cc=new D;class ou{constructor(e=new cr,t=new cr,n=new cr,i=new cr,s=new cr,l=new cr){this.planes=[e,t,n,i,s,l]}set(e,t,n,i,s,l){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(s),c[5].copy(l),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Hi){const n=this.planes,i=e.elements,s=i[0],l=i[1],c=i[2],u=i[3],h=i[4],f=i[5],p=i[6],m=i[7],v=i[8],y=i[9],w=i[10],x=i[11],_=i[12],E=i[13],M=i[14],b=i[15];if(n[0].setComponents(u-s,m-h,x-v,b-_).normalize(),n[1].setComponents(u+s,m+h,x+v,b+_).normalize(),n[2].setComponents(u+l,m+f,x+y,b+E).normalize(),n[3].setComponents(u-l,m-f,x-y,b-E).normalize(),n[4].setComponents(u-c,m-p,x-w,b-M).normalize(),t===Hi)n[5].setComponents(u+c,m+p,x+w,b+M).normalize();else if(t===La)n[5].setComponents(c,p,w,M).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),es.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),es.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(es)}intersectsSprite(e){return es.center.set(0,0,0),es.radius=.7071067811865476,es.applyMatrix4(e.matrixWorld),this.intersectsSphere(es)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(cc.x=i.normal.x>0?e.max.x:e.min.x,cc.y=i.normal.y>0?e.max.y:e.min.y,cc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(cc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function qv(){let r=null,e=!1,t=null,n=null;function i(s,l){t(s,l),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function kS(r,e){const t=e.isWebGL2,n=new WeakMap;function i(h,f){const p=h.array,m=h.usage,v=r.createBuffer();r.bindBuffer(f,v),r.bufferData(f,p,m),h.onUploadCallback();let y;if(p instanceof Float32Array)y=r.FLOAT;else if(p instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)y=r.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else y=r.UNSIGNED_SHORT;else if(p instanceof Int16Array)y=r.SHORT;else if(p instanceof Uint32Array)y=r.UNSIGNED_INT;else if(p instanceof Int32Array)y=r.INT;else if(p instanceof Int8Array)y=r.BYTE;else if(p instanceof Uint8Array)y=r.UNSIGNED_BYTE;else if(p instanceof Uint8ClampedArray)y=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+p);return{buffer:v,type:y,bytesPerElement:p.BYTES_PER_ELEMENT,version:h.version}}function s(h,f,p){const m=f.array,v=f.updateRange;r.bindBuffer(p,h),v.count===-1?r.bufferSubData(p,0,m):(t?r.bufferSubData(p,v.offset*m.BYTES_PER_ELEMENT,m,v.offset,v.count):r.bufferSubData(p,v.offset*m.BYTES_PER_ELEMENT,m.subarray(v.offset,v.offset+v.count)),v.count=-1),f.onUploadCallback()}function l(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function c(h){h.isInterleavedBufferAttribute&&(h=h.data);const f=n.get(h);f&&(r.deleteBuffer(f.buffer),n.delete(h))}function u(h,f){if(h.isGLBufferAttribute){const m=n.get(h);(!m||m.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const p=n.get(h);p===void 0?n.set(h,i(h,f)):p.version<h.version&&(s(p.buffer,h,f),p.version=h.version)}return{get:l,remove:c,update:u}}class _i extends vt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,l=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,f=u+1,p=e/c,m=t/u,v=[],y=[],w=[],x=[];for(let _=0;_<f;_++){const E=_*m-l;for(let M=0;M<h;M++){const b=M*p-s;y.push(b,-E,0),w.push(0,0,1),x.push(M/c),x.push(1-_/u)}}for(let _=0;_<u;_++)for(let E=0;E<c;E++){const M=E+h*_,b=E+h*(_+1),R=E+1+h*(_+1),P=E+1+h*_;v.push(M,b,P),v.push(b,R,P)}this.setIndex(v),this.setAttribute("position",new Xe(y,3)),this.setAttribute("normal",new Xe(w,3)),this.setAttribute("uv",new Xe(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new _i(e.width,e.height,e.widthSegments,e.heightSegments)}}var HS=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,VS=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,GS=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,WS=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,XS=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,YS=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,qS=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,ZS=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,jS=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,QS=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,JS=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,KS=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,$S=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,eM=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,tM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,nM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,iM=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,rM=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,sM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,oM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,aM=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,lM=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,cM=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,uM=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,hM=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,fM=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,dM=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,pM=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,mM="gl_FragColor = linearToOutputTexel( gl_FragColor );",gM=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,vM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,_M=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,yM=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,xM=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,SM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,MM=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,wM=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,EM=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,TM=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,bM=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,AM=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,RM=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,PM=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,CM=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,LM=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,IM=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,DM=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,NM=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,UM=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,OM=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,FM=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,zM=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,BM=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,kM=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,HM=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,VM=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,GM=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,WM=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,XM=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,YM=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,qM=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,ZM=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,jM=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,QM=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,JM=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,KM=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,$M=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,ew=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,tw=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,nw=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,iw=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,rw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,sw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,ow=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,aw=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,lw=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,cw=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,uw=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,hw=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,fw=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,dw=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,pw=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,mw=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,gw=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,vw=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,_w=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,yw=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,xw=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Sw=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Mw=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,ww=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Ew=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Tw=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,bw=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Aw=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Rw=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Pw=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Cw=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Lw=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Iw=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,Dw=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,Nw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Uw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Ow=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,Fw=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const zw=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Bw=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,kw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Hw=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Vw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Gw=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Ww=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Xw=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Yw=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,qw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Zw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,jw=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Qw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Jw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Kw=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,$w=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,eE=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,tE=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,nE=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,iE=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,rE=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,sE=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,oE=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,aE=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,lE=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,cE=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,uE=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,hE=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,fE=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,dE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,pE=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,mE=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,gE=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,vE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,_t={alphahash_fragment:HS,alphahash_pars_fragment:VS,alphamap_fragment:GS,alphamap_pars_fragment:WS,alphatest_fragment:XS,alphatest_pars_fragment:YS,aomap_fragment:qS,aomap_pars_fragment:ZS,begin_vertex:jS,beginnormal_vertex:QS,bsdfs:JS,iridescence_fragment:KS,bumpmap_pars_fragment:$S,clipping_planes_fragment:eM,clipping_planes_pars_fragment:tM,clipping_planes_pars_vertex:nM,clipping_planes_vertex:iM,color_fragment:rM,color_pars_fragment:sM,color_pars_vertex:oM,color_vertex:aM,common:lM,cube_uv_reflection_fragment:cM,defaultnormal_vertex:uM,displacementmap_pars_vertex:hM,displacementmap_vertex:fM,emissivemap_fragment:dM,emissivemap_pars_fragment:pM,colorspace_fragment:mM,colorspace_pars_fragment:gM,envmap_fragment:vM,envmap_common_pars_fragment:_M,envmap_pars_fragment:yM,envmap_pars_vertex:xM,envmap_physical_pars_fragment:IM,envmap_vertex:SM,fog_vertex:MM,fog_pars_vertex:wM,fog_fragment:EM,fog_pars_fragment:TM,gradientmap_pars_fragment:bM,lightmap_fragment:AM,lightmap_pars_fragment:RM,lights_lambert_fragment:PM,lights_lambert_pars_fragment:CM,lights_pars_begin:LM,lights_toon_fragment:DM,lights_toon_pars_fragment:NM,lights_phong_fragment:UM,lights_phong_pars_fragment:OM,lights_physical_fragment:FM,lights_physical_pars_fragment:zM,lights_fragment_begin:BM,lights_fragment_maps:kM,lights_fragment_end:HM,logdepthbuf_fragment:VM,logdepthbuf_pars_fragment:GM,logdepthbuf_pars_vertex:WM,logdepthbuf_vertex:XM,map_fragment:YM,map_pars_fragment:qM,map_particle_fragment:ZM,map_particle_pars_fragment:jM,metalnessmap_fragment:QM,metalnessmap_pars_fragment:JM,morphcolor_vertex:KM,morphnormal_vertex:$M,morphtarget_pars_vertex:ew,morphtarget_vertex:tw,normal_fragment_begin:nw,normal_fragment_maps:iw,normal_pars_fragment:rw,normal_pars_vertex:sw,normal_vertex:ow,normalmap_pars_fragment:aw,clearcoat_normal_fragment_begin:lw,clearcoat_normal_fragment_maps:cw,clearcoat_pars_fragment:uw,iridescence_pars_fragment:hw,opaque_fragment:fw,packing:dw,premultiplied_alpha_fragment:pw,project_vertex:mw,dithering_fragment:gw,dithering_pars_fragment:vw,roughnessmap_fragment:_w,roughnessmap_pars_fragment:yw,shadowmap_pars_fragment:xw,shadowmap_pars_vertex:Sw,shadowmap_vertex:Mw,shadowmask_pars_fragment:ww,skinbase_vertex:Ew,skinning_pars_vertex:Tw,skinning_vertex:bw,skinnormal_vertex:Aw,specularmap_fragment:Rw,specularmap_pars_fragment:Pw,tonemapping_fragment:Cw,tonemapping_pars_fragment:Lw,transmission_fragment:Iw,transmission_pars_fragment:Dw,uv_pars_fragment:Nw,uv_pars_vertex:Uw,uv_vertex:Ow,worldpos_vertex:Fw,background_vert:zw,background_frag:Bw,backgroundCube_vert:kw,backgroundCube_frag:Hw,cube_vert:Vw,cube_frag:Gw,depth_vert:Ww,depth_frag:Xw,distanceRGBA_vert:Yw,distanceRGBA_frag:qw,equirect_vert:Zw,equirect_frag:jw,linedashed_vert:Qw,linedashed_frag:Jw,meshbasic_vert:Kw,meshbasic_frag:$w,meshlambert_vert:eE,meshlambert_frag:tE,meshmatcap_vert:nE,meshmatcap_frag:iE,meshnormal_vert:rE,meshnormal_frag:sE,meshphong_vert:oE,meshphong_frag:aE,meshphysical_vert:lE,meshphysical_frag:cE,meshtoon_vert:uE,meshtoon_frag:hE,points_vert:fE,points_frag:dE,shadow_vert:pE,shadow_frag:mE,sprite_vert:gE,sprite_frag:vE},De={common:{diffuse:{value:new Be(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Mt},alphaMap:{value:null},alphaMapTransform:{value:new Mt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Mt}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Mt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Mt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Mt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Mt},normalScale:{value:new me(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Mt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Mt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Mt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Mt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Be(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Be(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Mt},alphaTest:{value:0},uvTransform:{value:new Mt}},sprite:{diffuse:{value:new Be(16777215)},opacity:{value:1},center:{value:new me(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Mt},alphaMap:{value:null},alphaMapTransform:{value:new Mt},alphaTest:{value:0}}},bi={basic:{uniforms:zn([De.common,De.specularmap,De.envmap,De.aomap,De.lightmap,De.fog]),vertexShader:_t.meshbasic_vert,fragmentShader:_t.meshbasic_frag},lambert:{uniforms:zn([De.common,De.specularmap,De.envmap,De.aomap,De.lightmap,De.emissivemap,De.bumpmap,De.normalmap,De.displacementmap,De.fog,De.lights,{emissive:{value:new Be(0)}}]),vertexShader:_t.meshlambert_vert,fragmentShader:_t.meshlambert_frag},phong:{uniforms:zn([De.common,De.specularmap,De.envmap,De.aomap,De.lightmap,De.emissivemap,De.bumpmap,De.normalmap,De.displacementmap,De.fog,De.lights,{emissive:{value:new Be(0)},specular:{value:new Be(1118481)},shininess:{value:30}}]),vertexShader:_t.meshphong_vert,fragmentShader:_t.meshphong_frag},standard:{uniforms:zn([De.common,De.envmap,De.aomap,De.lightmap,De.emissivemap,De.bumpmap,De.normalmap,De.displacementmap,De.roughnessmap,De.metalnessmap,De.fog,De.lights,{emissive:{value:new Be(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:_t.meshphysical_vert,fragmentShader:_t.meshphysical_frag},toon:{uniforms:zn([De.common,De.aomap,De.lightmap,De.emissivemap,De.bumpmap,De.normalmap,De.displacementmap,De.gradientmap,De.fog,De.lights,{emissive:{value:new Be(0)}}]),vertexShader:_t.meshtoon_vert,fragmentShader:_t.meshtoon_frag},matcap:{uniforms:zn([De.common,De.bumpmap,De.normalmap,De.displacementmap,De.fog,{matcap:{value:null}}]),vertexShader:_t.meshmatcap_vert,fragmentShader:_t.meshmatcap_frag},points:{uniforms:zn([De.points,De.fog]),vertexShader:_t.points_vert,fragmentShader:_t.points_frag},dashed:{uniforms:zn([De.common,De.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:_t.linedashed_vert,fragmentShader:_t.linedashed_frag},depth:{uniforms:zn([De.common,De.displacementmap]),vertexShader:_t.depth_vert,fragmentShader:_t.depth_frag},normal:{uniforms:zn([De.common,De.bumpmap,De.normalmap,De.displacementmap,{opacity:{value:1}}]),vertexShader:_t.meshnormal_vert,fragmentShader:_t.meshnormal_frag},sprite:{uniforms:zn([De.sprite,De.fog]),vertexShader:_t.sprite_vert,fragmentShader:_t.sprite_frag},background:{uniforms:{uvTransform:{value:new Mt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:_t.background_vert,fragmentShader:_t.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:_t.backgroundCube_vert,fragmentShader:_t.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:_t.cube_vert,fragmentShader:_t.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:_t.equirect_vert,fragmentShader:_t.equirect_frag},distanceRGBA:{uniforms:zn([De.common,De.displacementmap,{referencePosition:{value:new D},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:_t.distanceRGBA_vert,fragmentShader:_t.distanceRGBA_frag},shadow:{uniforms:zn([De.lights,De.fog,{color:{value:new Be(0)},opacity:{value:1}}]),vertexShader:_t.shadow_vert,fragmentShader:_t.shadow_frag}};bi.physical={uniforms:zn([bi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Mt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Mt},clearcoatNormalScale:{value:new me(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Mt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Mt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Mt},sheen:{value:0},sheenColor:{value:new Be(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Mt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Mt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Mt},transmissionSamplerSize:{value:new me},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Mt},attenuationDistance:{value:0},attenuationColor:{value:new Be(0)},specularColor:{value:new Be(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Mt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Mt},anisotropyVector:{value:new me},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Mt}}]),vertexShader:_t.meshphysical_vert,fragmentShader:_t.meshphysical_frag};const uc={r:0,b:0,g:0};function _E(r,e,t,n,i,s,l){const c=new Be(0);let u=s===!0?0:1,h,f,p=null,m=0,v=null;function y(x,_){let E=!1,M=_.isScene===!0?_.background:null;M&&M.isTexture&&(M=(_.backgroundBlurriness>0?t:e).get(M)),M===null?w(c,u):M&&M.isColor&&(w(M,1),E=!0);const b=r.xr.getEnvironmentBlendMode();b==="additive"?n.buffers.color.setClear(0,0,0,1,l):b==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(r.autoClear||E)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),M&&(M.isCubeTexture||M.mapping===Ao)?(f===void 0&&(f=new Ve(new Wn(1,1,1),new qi({name:"BackgroundCubeMaterial",uniforms:wo(bi.backgroundCube.uniforms),vertexShader:bi.backgroundCube.vertexShader,fragmentShader:bi.backgroundCube.fragmentShader,side:Bn,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),f.geometry.deleteAttribute("uv"),f.onBeforeRender=function(R,P,I){this.matrixWorld.copyPosition(I.matrixWorld)},Object.defineProperty(f.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(f)),f.material.uniforms.envMap.value=M,f.material.uniforms.flipEnvMap.value=M.isCubeTexture&&M.isRenderTargetTexture===!1?-1:1,f.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,f.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,f.material.toneMapped=Ft.getTransfer(M.colorSpace)!==Ht,(p!==M||m!==M.version||v!==r.toneMapping)&&(f.material.needsUpdate=!0,p=M,m=M.version,v=r.toneMapping),f.layers.enableAll(),x.unshift(f,f.geometry,f.material,0,0,null)):M&&M.isTexture&&(h===void 0&&(h=new Ve(new _i(2,2),new qi({name:"BackgroundMaterial",uniforms:wo(bi.background.uniforms),vertexShader:bi.background.vertexShader,fragmentShader:bi.background.fragmentShader,side:dr,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=M,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.toneMapped=Ft.getTransfer(M.colorSpace)!==Ht,M.matrixAutoUpdate===!0&&M.updateMatrix(),h.material.uniforms.uvTransform.value.copy(M.matrix),(p!==M||m!==M.version||v!==r.toneMapping)&&(h.material.needsUpdate=!0,p=M,m=M.version,v=r.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null))}function w(x,_){x.getRGB(uc,Gv(r)),n.buffers.color.setClear(uc.r,uc.g,uc.b,_,l)}return{getClearColor:function(){return c},setClearColor:function(x,_=1){c.set(x),u=_,w(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(x){u=x,w(c,u)},render:y}}function yE(r,e,t,n){const i=r.getParameter(r.MAX_VERTEX_ATTRIBS),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),l=n.isWebGL2||s!==null,c={},u=x(null);let h=u,f=!1;function p(G,q,ie,te,Q){let j=!1;if(l){const X=w(te,ie,q);h!==X&&(h=X,v(h.object)),j=_(G,te,ie,Q),j&&E(G,te,ie,Q)}else{const X=q.wireframe===!0;(h.geometry!==te.id||h.program!==ie.id||h.wireframe!==X)&&(h.geometry=te.id,h.program=ie.id,h.wireframe=X,j=!0)}Q!==null&&t.update(Q,r.ELEMENT_ARRAY_BUFFER),(j||f)&&(f=!1,z(G,q,ie,te),Q!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(Q).buffer))}function m(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function v(G){return n.isWebGL2?r.bindVertexArray(G):s.bindVertexArrayOES(G)}function y(G){return n.isWebGL2?r.deleteVertexArray(G):s.deleteVertexArrayOES(G)}function w(G,q,ie){const te=ie.wireframe===!0;let Q=c[G.id];Q===void 0&&(Q={},c[G.id]=Q);let j=Q[q.id];j===void 0&&(j={},Q[q.id]=j);let X=j[te];return X===void 0&&(X=x(m()),j[te]=X),X}function x(G){const q=[],ie=[],te=[];for(let Q=0;Q<i;Q++)q[Q]=0,ie[Q]=0,te[Q]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:q,enabledAttributes:ie,attributeDivisors:te,object:G,attributes:{},index:null}}function _(G,q,ie,te){const Q=h.attributes,j=q.attributes;let X=0;const U=ie.getAttributes();for(const Z in U)if(U[Z].location>=0){const H=Q[Z];let xe=j[Z];if(xe===void 0&&(Z==="instanceMatrix"&&G.instanceMatrix&&(xe=G.instanceMatrix),Z==="instanceColor"&&G.instanceColor&&(xe=G.instanceColor)),H===void 0||H.attribute!==xe||xe&&H.data!==xe.data)return!0;X++}return h.attributesNum!==X||h.index!==te}function E(G,q,ie,te){const Q={},j=q.attributes;let X=0;const U=ie.getAttributes();for(const Z in U)if(U[Z].location>=0){let H=j[Z];H===void 0&&(Z==="instanceMatrix"&&G.instanceMatrix&&(H=G.instanceMatrix),Z==="instanceColor"&&G.instanceColor&&(H=G.instanceColor));const xe={};xe.attribute=H,H&&H.data&&(xe.data=H.data),Q[Z]=xe,X++}h.attributes=Q,h.attributesNum=X,h.index=te}function M(){const G=h.newAttributes;for(let q=0,ie=G.length;q<ie;q++)G[q]=0}function b(G){R(G,0)}function R(G,q){const ie=h.newAttributes,te=h.enabledAttributes,Q=h.attributeDivisors;ie[G]=1,te[G]===0&&(r.enableVertexAttribArray(G),te[G]=1),Q[G]!==q&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](G,q),Q[G]=q)}function P(){const G=h.newAttributes,q=h.enabledAttributes;for(let ie=0,te=q.length;ie<te;ie++)q[ie]!==G[ie]&&(r.disableVertexAttribArray(ie),q[ie]=0)}function I(G,q,ie,te,Q,j,X){X===!0?r.vertexAttribIPointer(G,q,ie,Q,j):r.vertexAttribPointer(G,q,ie,te,Q,j)}function z(G,q,ie,te){if(n.isWebGL2===!1&&(G.isInstancedMesh||te.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;M();const Q=te.attributes,j=ie.getAttributes(),X=q.defaultAttributeValues;for(const U in j){const Z=j[U];if(Z.location>=0){let ce=Q[U];if(ce===void 0&&(U==="instanceMatrix"&&G.instanceMatrix&&(ce=G.instanceMatrix),U==="instanceColor"&&G.instanceColor&&(ce=G.instanceColor)),ce!==void 0){const H=ce.normalized,xe=ce.itemSize,Fe=t.get(ce);if(Fe===void 0)continue;const Ye=Fe.buffer,Ze=Fe.type,tt=Fe.bytesPerElement,it=n.isWebGL2===!0&&(Ze===r.INT||Ze===r.UNSIGNED_INT||ce.gpuType===xd);if(ce.isInterleavedBufferAttribute){const Re=ce.data,k=Re.stride,ye=ce.offset;if(Re.isInstancedInterleavedBuffer){for(let de=0;de<Z.locationSize;de++)R(Z.location+de,Re.meshPerAttribute);G.isInstancedMesh!==!0&&te._maxInstanceCount===void 0&&(te._maxInstanceCount=Re.meshPerAttribute*Re.count)}else for(let de=0;de<Z.locationSize;de++)b(Z.location+de);r.bindBuffer(r.ARRAY_BUFFER,Ye);for(let de=0;de<Z.locationSize;de++)I(Z.location+de,xe/Z.locationSize,Ze,H,k*tt,(ye+xe/Z.locationSize*de)*tt,it)}else{if(ce.isInstancedBufferAttribute){for(let Re=0;Re<Z.locationSize;Re++)R(Z.location+Re,ce.meshPerAttribute);G.isInstancedMesh!==!0&&te._maxInstanceCount===void 0&&(te._maxInstanceCount=ce.meshPerAttribute*ce.count)}else for(let Re=0;Re<Z.locationSize;Re++)b(Z.location+Re);r.bindBuffer(r.ARRAY_BUFFER,Ye);for(let Re=0;Re<Z.locationSize;Re++)I(Z.location+Re,xe/Z.locationSize,Ze,H,xe*tt,xe/Z.locationSize*Re*tt,it)}}else if(X!==void 0){const H=X[U];if(H!==void 0)switch(H.length){case 2:r.vertexAttrib2fv(Z.location,H);break;case 3:r.vertexAttrib3fv(Z.location,H);break;case 4:r.vertexAttrib4fv(Z.location,H);break;default:r.vertexAttrib1fv(Z.location,H)}}}}P()}function A(){$();for(const G in c){const q=c[G];for(const ie in q){const te=q[ie];for(const Q in te)y(te[Q].object),delete te[Q];delete q[ie]}delete c[G]}}function C(G){if(c[G.id]===void 0)return;const q=c[G.id];for(const ie in q){const te=q[ie];for(const Q in te)y(te[Q].object),delete te[Q];delete q[ie]}delete c[G.id]}function B(G){for(const q in c){const ie=c[q];if(ie[G.id]===void 0)continue;const te=ie[G.id];for(const Q in te)y(te[Q].object),delete te[Q];delete ie[G.id]}}function $(){oe(),f=!0,h!==u&&(h=u,v(h.object))}function oe(){u.geometry=null,u.program=null,u.wireframe=!1}return{setup:p,reset:$,resetDefaultState:oe,dispose:A,releaseStatesOfGeometry:C,releaseStatesOfProgram:B,initAttributes:M,enableAttribute:b,disableUnusedAttributes:P}}function xE(r,e,t,n){const i=n.isWebGL2;let s;function l(h){s=h}function c(h,f){r.drawArrays(s,h,f),t.update(f,s,1)}function u(h,f,p){if(p===0)return;let m,v;if(i)m=r,v="drawArraysInstanced";else if(m=e.get("ANGLE_instanced_arrays"),v="drawArraysInstancedANGLE",m===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[v](s,h,f,p),t.update(f,s,p)}this.setMode=l,this.render=c,this.renderInstances=u}function SE(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const I=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(I.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(I){if(I==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";I="mediump"}return I==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const l=typeof WebGL2RenderingContext<"u"&&r.constructor.name==="WebGL2RenderingContext";let c=t.precision!==void 0?t.precision:"highp";const u=s(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=l||e.has("WEBGL_draw_buffers"),f=t.logarithmicDepthBuffer===!0,p=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),m=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),v=r.getParameter(r.MAX_TEXTURE_SIZE),y=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),w=r.getParameter(r.MAX_VERTEX_ATTRIBS),x=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),_=r.getParameter(r.MAX_VARYING_VECTORS),E=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),M=m>0,b=l||e.has("OES_texture_float"),R=M&&b,P=l?r.getParameter(r.MAX_SAMPLES):0;return{isWebGL2:l,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:s,precision:c,logarithmicDepthBuffer:f,maxTextures:p,maxVertexTextures:m,maxTextureSize:v,maxCubemapSize:y,maxAttributes:w,maxVertexUniforms:x,maxVaryings:_,maxFragmentUniforms:E,vertexTextures:M,floatFragmentTextures:b,floatVertexTextures:R,maxSamples:P}}function ME(r){const e=this;let t=null,n=0,i=!1,s=!1;const l=new cr,c=new Mt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const v=p.length!==0||m||n!==0||i;return i=m,n=p.length,v},this.beginShadows=function(){s=!0,f(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,m){t=f(p,m,0)},this.setState=function(p,m,v){const y=p.clippingPlanes,w=p.clipIntersection,x=p.clipShadows,_=r.get(p);if(!i||y===null||y.length===0||s&&!x)s?f(null):h();else{const E=s?0:n,M=E*4;let b=_.clippingState||null;u.value=b,b=f(y,m,M,v);for(let R=0;R!==M;++R)b[R]=t[R];_.clippingState=b,this.numIntersection=w?this.numPlanes:0,this.numPlanes+=E}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function f(p,m,v,y){const w=p!==null?p.length:0;let x=null;if(w!==0){if(x=u.value,y!==!0||x===null){const _=v+w*4,E=m.matrixWorldInverse;c.getNormalMatrix(E),(x===null||x.length<_)&&(x=new Float32Array(_));for(let M=0,b=v;M!==w;++M,b+=4)l.copy(p[M]).applyMatrix4(E,c),l.normal.toArray(x,b),x[b+3]=l.constant}u.value=x,u.needsUpdate=!0}return e.numPlanes=w,e.numIntersection=0,x}}function wE(r){let e=new WeakMap;function t(l,c){return c===xa?l.mapping=pr:c===Sa&&(l.mapping=Fr),l}function n(l){if(l&&l.isTexture&&l.isRenderTargetTexture===!1){const c=l.mapping;if(c===xa||c===Sa)if(e.has(l)){const u=e.get(l).texture;return t(u,l.mapping)}else{const u=l.image;if(u&&u.height>0){const h=new Yv(u.height/2);return h.fromEquirectangularTexture(r,l),e.set(l,h),l.addEventListener("dispose",i),t(h.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class Wi extends Ga{constructor(e=-1,t=1,n=1,i=-1,s=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=l,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,l=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,f=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,l=s+h*this.view.width,c-=f*this.view.offsetY,u=c-f*this.view.height}this.projectionMatrix.makeOrthographic(s,l,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const mo=4,sg=[.125,.215,.35,.446,.526,.582],us=20,Jh=new Wi,og=new Be;let Kh=null,$h=0,ef=0;const cs=(1+Math.sqrt(5))/2,io=1/cs,ag=[new D(1,1,1),new D(-1,1,1),new D(1,1,-1),new D(-1,1,-1),new D(0,cs,io),new D(0,cs,-io),new D(io,0,cs),new D(-io,0,cs),new D(cs,io,0),new D(-cs,io,0)];class sd{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Kh=this._renderer.getRenderTarget(),$h=this._renderer.getActiveCubeFace(),ef=this._renderer.getActiveMipmapLevel(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=ug(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=cg(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Kh,$h,ef),e.scissorTest=!1,hc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===pr||e.mapping===Fr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Kh=this._renderer.getRenderTarget(),$h=this._renderer.getActiveCubeFace(),ef=this._renderer.getActiveMipmapLevel();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:rn,minFilter:rn,generateMipmaps:!1,type:So,format:Yn,colorSpace:Yi,depthBuffer:!1},i=lg(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=lg(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=EE(s)),this._blurMaterial=TE(s,e,t)}return i}_compileMaterial(e){const t=new Ve(this._lodPlanes[0],e);this._renderer.compile(t,Jh)}_sceneToCubeUV(e,t,n,i){const c=new qt(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],f=this._renderer,p=f.autoClear,m=f.toneMapping;f.getClearColor(og),f.toneMapping=Vi,f.autoClear=!1;const v=new ji({name:"PMREM.Background",side:Bn,depthWrite:!1,depthTest:!1}),y=new Ve(new Wn,v);let w=!1;const x=e.background;x?x.isColor&&(v.color.copy(x),e.background=null,w=!0):(v.color.copy(og),w=!0);for(let _=0;_<6;_++){const E=_%3;E===0?(c.up.set(0,u[_],0),c.lookAt(h[_],0,0)):E===1?(c.up.set(0,0,u[_]),c.lookAt(0,h[_],0)):(c.up.set(0,u[_],0),c.lookAt(0,0,h[_]));const M=this._cubeSize;hc(i,E*M,_>2?M:0,M,M),f.setRenderTarget(i),w&&f.render(y,c),f.render(e,c)}y.geometry.dispose(),y.material.dispose(),f.toneMapping=m,f.autoClear=p,e.background=x}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===pr||e.mapping===Fr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=ug()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=cg());const s=i?this._cubemapMaterial:this._equirectMaterial,l=new Ve(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;hc(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(l,Jh)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),l=ag[(i-1)%ag.length];this._blur(e,i-1,i,s,l)}t.autoClear=n}_blur(e,t,n,i,s){const l=this._pingPongRenderTarget;this._halfBlur(e,l,t,n,i,"latitudinal",s),this._halfBlur(l,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,l,c){const u=this._renderer,h=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const f=3,p=new Ve(this._lodPlanes[i],h),m=h.uniforms,v=this._sizeLods[n]-1,y=isFinite(s)?Math.PI/(2*v):2*Math.PI/(2*us-1),w=s/y,x=isFinite(s)?1+Math.floor(f*w):us;x>us&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${us}`);const _=[];let E=0;for(let I=0;I<us;++I){const z=I/w,A=Math.exp(-z*z/2);_.push(A),I===0?E+=A:I<x&&(E+=2*A)}for(let I=0;I<_.length;I++)_[I]=_[I]/E;m.envMap.value=e.texture,m.samples.value=x,m.weights.value=_,m.latitudinal.value=l==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:M}=this;m.dTheta.value=y,m.mipInt.value=M-n;const b=this._sizeLods[i],R=3*b*(i>M-mo?i-M+mo:0),P=4*(this._cubeSize-b);hc(t,R,P,3*b,2*b),u.setRenderTarget(t),u.render(p,Jh)}}function EE(r){const e=[],t=[],n=[];let i=r;const s=r-mo+1+sg.length;for(let l=0;l<s;l++){const c=Math.pow(2,i);t.push(c);let u=1/c;l>r-mo?u=sg[l-r+mo-1]:l===0&&(u=0),n.push(u);const h=1/(c-2),f=-h,p=1+h,m=[f,f,p,f,p,p,f,f,p,p,f,p],v=6,y=6,w=3,x=2,_=1,E=new Float32Array(w*y*v),M=new Float32Array(x*y*v),b=new Float32Array(_*y*v);for(let P=0;P<v;P++){const I=P%3*2/3-1,z=P>2?0:-1,A=[I,z,0,I+2/3,z,0,I+2/3,z+1,0,I,z,0,I+2/3,z+1,0,I,z+1,0];E.set(A,w*y*P),M.set(m,x*y*P);const C=[P,P,P,P,P,P];b.set(C,_*y*P)}const R=new vt;R.setAttribute("position",new kt(E,w)),R.setAttribute("uv",new kt(M,x)),R.setAttribute("faceIndex",new kt(b,_)),e.push(R),i>mo&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function lg(r,e,t){const n=new Ai(r,e,t);return n.texture.mapping=Ao,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function hc(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function TE(r,e,t){const n=new Float32Array(us),i=new D(0,1,0);return new qi({name:"SphericalGaussianBlur",defines:{n:us,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Dd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:fr,depthTest:!1,depthWrite:!1})}function cg(){return new qi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Dd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:fr,depthTest:!1,depthWrite:!1})}function ug(){return new qi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Dd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:fr,depthTest:!1,depthWrite:!1})}function Dd(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function bE(r){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===xa||u===Sa,f=u===pr||u===Fr;if(h||f)if(c.isRenderTargetTexture&&c.needsPMREMUpdate===!0){c.needsPMREMUpdate=!1;let p=e.get(c);return t===null&&(t=new sd(r)),p=h?t.fromEquirectangular(c,p):t.fromCubemap(c,p),e.set(c,p),p.texture}else{if(e.has(c))return e.get(c).texture;{const p=c.image;if(h&&p&&p.height>0||f&&p&&i(p)){t===null&&(t=new sd(r));const m=h?t.fromEquirectangular(c):t.fromCubemap(c);return e.set(c,m),c.addEventListener("dispose",s),m.texture}else return null}}}return c}function i(c){let u=0;const h=6;for(let f=0;f<h;f++)c[f]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function l(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:l}}function AE(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function RE(r,e,t,n){const i={},s=new WeakMap;function l(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const y in m.attributes)e.remove(m.attributes[y]);for(const y in m.morphAttributes){const w=m.morphAttributes[y];for(let x=0,_=w.length;x<_;x++)e.remove(w[x])}m.removeEventListener("dispose",l),delete i[m.id];const v=s.get(m);v&&(e.remove(v),s.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return i[m.id]===!0||(m.addEventListener("dispose",l),i[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const y in m)e.update(m[y],r.ARRAY_BUFFER);const v=p.morphAttributes;for(const y in v){const w=v[y];for(let x=0,_=w.length;x<_;x++)e.update(w[x],r.ARRAY_BUFFER)}}function h(p){const m=[],v=p.index,y=p.attributes.position;let w=0;if(v!==null){const E=v.array;w=v.version;for(let M=0,b=E.length;M<b;M+=3){const R=E[M+0],P=E[M+1],I=E[M+2];m.push(R,P,P,I,I,R)}}else if(y!==void 0){const E=y.array;w=y.version;for(let M=0,b=E.length/3-1;M<b;M+=3){const R=M+0,P=M+1,I=M+2;m.push(R,P,P,I,I,R)}}else return;const x=new(Bv(m)?Id:Ld)(m,1);x.version=w;const _=s.get(p);_&&e.remove(_),s.set(p,x)}function f(p){const m=s.get(p);if(m){const v=p.index;v!==null&&m.version<v.version&&h(p)}else h(p);return s.get(p)}return{get:c,update:u,getWireframeAttribute:f}}function PE(r,e,t,n){const i=n.isWebGL2;let s;function l(m){s=m}let c,u;function h(m){c=m.type,u=m.bytesPerElement}function f(m,v){r.drawElements(s,v,c,m*u),t.update(v,s,1)}function p(m,v,y){if(y===0)return;let w,x;if(i)w=r,x="drawElementsInstanced";else if(w=e.get("ANGLE_instanced_arrays"),x="drawElementsInstancedANGLE",w===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}w[x](s,v,c,m*u,y),t.update(v,s,y)}this.setMode=l,this.setIndex=h,this.render=f,this.renderInstances=p}function CE(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,l,c){switch(t.calls++,l){case r.TRIANGLES:t.triangles+=c*(s/3);break;case r.LINES:t.lines+=c*(s/2);break;case r.LINE_STRIP:t.lines+=c*(s-1);break;case r.LINE_LOOP:t.lines+=c*s;break;case r.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function LE(r,e){return r[0]-e[0]}function IE(r,e){return Math.abs(e[1])-Math.abs(r[1])}function DE(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,l=new zt,c=[];for(let h=0;h<8;h++)c[h]=[h,0];function u(h,f,p){const m=h.morphTargetInfluences;if(e.isWebGL2===!0){const v=f.morphAttributes.position||f.morphAttributes.normal||f.morphAttributes.color,y=v!==void 0?v.length:0;let w=s.get(f);if(w===void 0||w.count!==y){let G=function(){$.dispose(),s.delete(f),f.removeEventListener("dispose",G)};w!==void 0&&w.texture.dispose();const E=f.morphAttributes.position!==void 0,M=f.morphAttributes.normal!==void 0,b=f.morphAttributes.color!==void 0,R=f.morphAttributes.position||[],P=f.morphAttributes.normal||[],I=f.morphAttributes.color||[];let z=0;E===!0&&(z=1),M===!0&&(z=2),b===!0&&(z=3);let A=f.attributes.position.count*z,C=1;A>e.maxTextureSize&&(C=Math.ceil(A/e.maxTextureSize),A=e.maxTextureSize);const B=new Float32Array(A*C*4*y),$=new su(B,A,C,y);$.type=ki,$.needsUpdate=!0;const oe=z*4;for(let q=0;q<y;q++){const ie=R[q],te=P[q],Q=I[q],j=A*C*4*q;for(let X=0;X<ie.count;X++){const U=X*oe;E===!0&&(l.fromBufferAttribute(ie,X),B[j+U+0]=l.x,B[j+U+1]=l.y,B[j+U+2]=l.z,B[j+U+3]=0),M===!0&&(l.fromBufferAttribute(te,X),B[j+U+4]=l.x,B[j+U+5]=l.y,B[j+U+6]=l.z,B[j+U+7]=0),b===!0&&(l.fromBufferAttribute(Q,X),B[j+U+8]=l.x,B[j+U+9]=l.y,B[j+U+10]=l.z,B[j+U+11]=Q.itemSize===4?l.w:1)}}w={count:y,texture:$,size:new me(A,C)},s.set(f,w),f.addEventListener("dispose",G)}let x=0;for(let E=0;E<m.length;E++)x+=m[E];const _=f.morphTargetsRelative?1:1-x;p.getUniforms().setValue(r,"morphTargetBaseInfluence",_),p.getUniforms().setValue(r,"morphTargetInfluences",m),p.getUniforms().setValue(r,"morphTargetsTexture",w.texture,t),p.getUniforms().setValue(r,"morphTargetsTextureSize",w.size)}else{const v=m===void 0?0:m.length;let y=n[f.id];if(y===void 0||y.length!==v){y=[];for(let M=0;M<v;M++)y[M]=[M,0];n[f.id]=y}for(let M=0;M<v;M++){const b=y[M];b[0]=M,b[1]=m[M]}y.sort(IE);for(let M=0;M<8;M++)M<v&&y[M][1]?(c[M][0]=y[M][0],c[M][1]=y[M][1]):(c[M][0]=Number.MAX_SAFE_INTEGER,c[M][1]=0);c.sort(LE);const w=f.morphAttributes.position,x=f.morphAttributes.normal;let _=0;for(let M=0;M<8;M++){const b=c[M],R=b[0],P=b[1];R!==Number.MAX_SAFE_INTEGER&&P?(w&&f.getAttribute("morphTarget"+M)!==w[R]&&f.setAttribute("morphTarget"+M,w[R]),x&&f.getAttribute("morphNormal"+M)!==x[R]&&f.setAttribute("morphNormal"+M,x[R]),i[M]=P,_+=P):(w&&f.hasAttribute("morphTarget"+M)===!0&&f.deleteAttribute("morphTarget"+M),x&&f.hasAttribute("morphNormal"+M)===!0&&f.deleteAttribute("morphNormal"+M),i[M]=0)}const E=f.morphTargetsRelative?1:1-_;p.getUniforms().setValue(r,"morphTargetBaseInfluence",E),p.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:u}}function NE(r,e,t,n){let i=new WeakMap;function s(u){const h=n.render.frame,f=u.geometry,p=e.get(u,f);if(i.get(p)!==h&&(e.update(p),i.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),i.get(u)!==h&&(t.update(u.instanceMatrix,r.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,r.ARRAY_BUFFER),i.set(u,h))),u.isSkinnedMesh){const m=u.skeleton;i.get(m)!==h&&(m.update(),i.set(m,h))}return p}function l(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:l}}const Zv=new sn,jv=new su,Qv=new Cd,Jv=new Wa,hg=[],fg=[],dg=new Float32Array(16),pg=new Float32Array(9),mg=new Float32Array(4);function Po(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=hg[i];if(s===void 0&&(s=new Float32Array(i),hg[i]=s),e!==0){n.toArray(s,0);for(let l=1,c=0;l!==e;++l)c+=t,r[l].toArray(s,c)}return s}function fn(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function dn(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function au(r,e){let t=fg[e];t===void 0&&(t=new Int32Array(e),fg[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function UE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function OE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(fn(t,e))return;r.uniform2fv(this.addr,e),dn(t,e)}}function FE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(fn(t,e))return;r.uniform3fv(this.addr,e),dn(t,e)}}function zE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(fn(t,e))return;r.uniform4fv(this.addr,e),dn(t,e)}}function BE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(fn(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),dn(t,e)}else{if(fn(t,n))return;mg.set(n),r.uniformMatrix2fv(this.addr,!1,mg),dn(t,n)}}function kE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(fn(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),dn(t,e)}else{if(fn(t,n))return;pg.set(n),r.uniformMatrix3fv(this.addr,!1,pg),dn(t,n)}}function HE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(fn(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),dn(t,e)}else{if(fn(t,n))return;dg.set(n),r.uniformMatrix4fv(this.addr,!1,dg),dn(t,n)}}function VE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function GE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(fn(t,e))return;r.uniform2iv(this.addr,e),dn(t,e)}}function WE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(fn(t,e))return;r.uniform3iv(this.addr,e),dn(t,e)}}function XE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(fn(t,e))return;r.uniform4iv(this.addr,e),dn(t,e)}}function YE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function qE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(fn(t,e))return;r.uniform2uiv(this.addr,e),dn(t,e)}}function ZE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(fn(t,e))return;r.uniform3uiv(this.addr,e),dn(t,e)}}function jE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(fn(t,e))return;r.uniform4uiv(this.addr,e),dn(t,e)}}function QE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||Zv,i)}function JE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Qv,i)}function KE(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Jv,i)}function $E(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||jv,i)}function e1(r){switch(r){case 5126:return UE;case 35664:return OE;case 35665:return FE;case 35666:return zE;case 35674:return BE;case 35675:return kE;case 35676:return HE;case 5124:case 35670:return VE;case 35667:case 35671:return GE;case 35668:case 35672:return WE;case 35669:case 35673:return XE;case 5125:return YE;case 36294:return qE;case 36295:return ZE;case 36296:return jE;case 35678:case 36198:case 36298:case 36306:case 35682:return QE;case 35679:case 36299:case 36307:return JE;case 35680:case 36300:case 36308:case 36293:return KE;case 36289:case 36303:case 36311:case 36292:return $E}}function t1(r,e){r.uniform1fv(this.addr,e)}function n1(r,e){const t=Po(e,this.size,2);r.uniform2fv(this.addr,t)}function i1(r,e){const t=Po(e,this.size,3);r.uniform3fv(this.addr,t)}function r1(r,e){const t=Po(e,this.size,4);r.uniform4fv(this.addr,t)}function s1(r,e){const t=Po(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function o1(r,e){const t=Po(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function a1(r,e){const t=Po(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function l1(r,e){r.uniform1iv(this.addr,e)}function c1(r,e){r.uniform2iv(this.addr,e)}function u1(r,e){r.uniform3iv(this.addr,e)}function h1(r,e){r.uniform4iv(this.addr,e)}function f1(r,e){r.uniform1uiv(this.addr,e)}function d1(r,e){r.uniform2uiv(this.addr,e)}function p1(r,e){r.uniform3uiv(this.addr,e)}function m1(r,e){r.uniform4uiv(this.addr,e)}function g1(r,e,t){const n=this.cache,i=e.length,s=au(t,i);fn(n,s)||(r.uniform1iv(this.addr,s),dn(n,s));for(let l=0;l!==i;++l)t.setTexture2D(e[l]||Zv,s[l])}function v1(r,e,t){const n=this.cache,i=e.length,s=au(t,i);fn(n,s)||(r.uniform1iv(this.addr,s),dn(n,s));for(let l=0;l!==i;++l)t.setTexture3D(e[l]||Qv,s[l])}function _1(r,e,t){const n=this.cache,i=e.length,s=au(t,i);fn(n,s)||(r.uniform1iv(this.addr,s),dn(n,s));for(let l=0;l!==i;++l)t.setTextureCube(e[l]||Jv,s[l])}function y1(r,e,t){const n=this.cache,i=e.length,s=au(t,i);fn(n,s)||(r.uniform1iv(this.addr,s),dn(n,s));for(let l=0;l!==i;++l)t.setTexture2DArray(e[l]||jv,s[l])}function x1(r){switch(r){case 5126:return t1;case 35664:return n1;case 35665:return i1;case 35666:return r1;case 35674:return s1;case 35675:return o1;case 35676:return a1;case 5124:case 35670:return l1;case 35667:case 35671:return c1;case 35668:case 35672:return u1;case 35669:case 35673:return h1;case 5125:return f1;case 36294:return d1;case 36295:return p1;case 36296:return m1;case 35678:case 36198:case 36298:case 36306:case 35682:return g1;case 35679:case 36299:case 36307:return v1;case 35680:case 36300:case 36308:case 36293:return _1;case 36289:case 36303:case 36311:case 36292:return y1}}class S1{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=e1(t.type)}}class M1{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=x1(t.type)}}class w1{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,l=i.length;s!==l;++s){const c=i[s];c.setValue(e,t[c.id],n)}}}const tf=/(\w+)(\])?(\[|\.)?/g;function gg(r,e){r.seq.push(e),r.map[e.id]=e}function E1(r,e,t){const n=r.name,i=n.length;for(tf.lastIndex=0;;){const s=tf.exec(n),l=tf.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&l+2===i){gg(t,h===void 0?new S1(c,r,e):new M1(c,r,e));break}else{let p=t.map[c];p===void 0&&(p=new w1(c),gg(t,p)),t=p}}}class Gc{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),l=e.getUniformLocation(t,s.name);E1(s,l,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,l=t.length;s!==l;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const l=e[i];l.id in t&&n.push(l)}return n}}function vg(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}const T1=37297;let b1=0;function A1(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let l=i;l<s;l++){const c=l+1;n.push(`${c===e?">":" "} ${c}: ${t[l]}`)}return n.join(`
`)}function R1(r){const e=Ft.getPrimaries(Ft.workingColorSpace),t=Ft.getPrimaries(r);let n;switch(e===t?n="":e===Pa&&t===Ra?n="LinearDisplayP3ToLinearSRGB":e===Ra&&t===Pa&&(n="LinearSRGBToLinearDisplayP3"),r){case Yi:case Va:return[n,"LinearTransferOETF"];case hn:case ru:return[n,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",r),[n,"LinearTransferOETF"]}}function _g(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const l=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+A1(r.getShaderSource(e),l)}else return i}function P1(r,e){const t=R1(e);return`vec4 ${r}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function C1(r,e){let t;switch(e){case uv:t="Linear";break;case hv:t="Reinhard";break;case fv:t="OptimizedCineon";break;case _d:t="ACESFilmic";break;case dv:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function L1(r){return[r.extensionDerivatives||r.envMapCubeUVHeight||r.bumpMap||r.normalMapTangentSpace||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(fa).join(`
`)}function I1(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function D1(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),l=s.name;let c=1;s.type===r.FLOAT_MAT2&&(c=2),s.type===r.FLOAT_MAT3&&(c=3),s.type===r.FLOAT_MAT4&&(c=4),t[l]={type:s.type,location:r.getAttribLocation(e,l),locationSize:c}}return t}function fa(r){return r!==""}function yg(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function xg(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const N1=/^[ \t]*#include +<([\w\d./]+)>/gm;function od(r){return r.replace(N1,O1)}const U1=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function O1(r,e){let t=_t[e];if(t===void 0){const n=U1.get(e);if(n!==void 0)t=_t[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return od(t)}const F1=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Sg(r){return r.replace(F1,z1)}function z1(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Mg(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function B1(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===eu?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===da?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Ei&&(e="SHADOWMAP_TYPE_VSM"),e}function k1(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case pr:case Fr:e="ENVMAP_TYPE_CUBE";break;case Ao:e="ENVMAP_TYPE_CUBE_UV";break}return e}function H1(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Fr:e="ENVMAP_MODE_REFRACTION";break}return e}function V1(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Ha:e="ENVMAP_BLENDING_MULTIPLY";break;case lv:e="ENVMAP_BLENDING_MIX";break;case cv:e="ENVMAP_BLENDING_ADD";break}return e}function G1(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function W1(r,e,t,n){const i=r.getContext(),s=t.defines;let l=t.vertexShader,c=t.fragmentShader;const u=B1(t),h=k1(t),f=H1(t),p=V1(t),m=G1(t),v=t.isWebGL2?"":L1(t),y=I1(s),w=i.createProgram();let x,_,E=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(x=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(fa).join(`
`),x.length>0&&(x+=`
`),_=[v,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(fa).join(`
`),_.length>0&&(_+=`
`)):(x=[Mg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(fa).join(`
`),_=[v,Mg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+f:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Vi?"#define TONE_MAPPING":"",t.toneMapping!==Vi?_t.tonemapping_pars_fragment:"",t.toneMapping!==Vi?C1("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",_t.colorspace_pars_fragment,P1("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(fa).join(`
`)),l=od(l),l=yg(l,t),l=xg(l,t),c=od(c),c=yg(c,t),c=xg(c,t),l=Sg(l),c=Sg(c),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,x=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+x,_=["precision mediump sampler2DArray;","#define varying in",t.glslVersion===id?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===id?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const M=E+x+l,b=E+_+c,R=vg(i,i.VERTEX_SHADER,M),P=vg(i,i.FRAGMENT_SHADER,b);i.attachShader(w,R),i.attachShader(w,P),t.index0AttributeName!==void 0?i.bindAttribLocation(w,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(w,0,"position"),i.linkProgram(w);function I(B){if(r.debug.checkShaderErrors){const $=i.getProgramInfoLog(w).trim(),oe=i.getShaderInfoLog(R).trim(),G=i.getShaderInfoLog(P).trim();let q=!0,ie=!0;if(i.getProgramParameter(w,i.LINK_STATUS)===!1)if(q=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,w,R,P);else{const te=_g(i,R,"vertex"),Q=_g(i,P,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(w,i.VALIDATE_STATUS)+`

Program Info Log: `+$+`
`+te+`
`+Q)}else $!==""?console.warn("THREE.WebGLProgram: Program Info Log:",$):(oe===""||G==="")&&(ie=!1);ie&&(B.diagnostics={runnable:q,programLog:$,vertexShader:{log:oe,prefix:x},fragmentShader:{log:G,prefix:_}})}i.deleteShader(R),i.deleteShader(P),z=new Gc(i,w),A=D1(i,w)}let z;this.getUniforms=function(){return z===void 0&&I(this),z};let A;this.getAttributes=function(){return A===void 0&&I(this),A};let C=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return C===!1&&(C=i.getProgramParameter(w,T1)),C},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(w),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=b1++,this.cacheKey=e,this.usedTimes=1,this.program=w,this.vertexShader=R,this.fragmentShader=P,this}let X1=0;class Y1{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),l=this._getShaderCacheForMaterial(e);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(s)===!1&&(l.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new q1(e),t.set(e,n)),n}}class q1{constructor(e){this.id=X1++,this.code=e,this.usedTimes=0}}function Z1(r,e,t,n,i,s,l){const c=new vs,u=new Y1,h=[],f=i.isWebGL2,p=i.logarithmicDepthBuffer,m=i.vertexTextures;let v=i.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function w(A){return A===0?"uv":`uv${A}`}function x(A,C,B,$,oe){const G=$.fog,q=oe.geometry,ie=A.isMeshStandardMaterial?$.environment:null,te=(A.isMeshStandardMaterial?t:e).get(A.envMap||ie),Q=te&&te.mapping===Ao?te.image.height:null,j=y[A.type];A.precision!==null&&(v=i.getMaxPrecision(A.precision),v!==A.precision&&console.warn("THREE.WebGLProgram.getParameters:",A.precision,"not supported, using",v,"instead."));const X=q.morphAttributes.position||q.morphAttributes.normal||q.morphAttributes.color,U=X!==void 0?X.length:0;let Z=0;q.morphAttributes.position!==void 0&&(Z=1),q.morphAttributes.normal!==void 0&&(Z=2),q.morphAttributes.color!==void 0&&(Z=3);let ce,H,xe,Fe;if(j){const Ot=bi[j];ce=Ot.vertexShader,H=Ot.fragmentShader}else ce=A.vertexShader,H=A.fragmentShader,u.update(A),xe=u.getVertexShaderID(A),Fe=u.getFragmentShaderID(A);const Ye=r.getRenderTarget(),Ze=oe.isInstancedMesh===!0,tt=!!A.map,it=!!A.matcap,Re=!!te,k=!!A.aoMap,ye=!!A.lightMap,de=!!A.bumpMap,we=!!A.normalMap,ve=!!A.displacementMap,Ge=!!A.emissiveMap,Ne=!!A.metalnessMap,ke=!!A.roughnessMap,nt=A.anisotropy>0,gt=A.clearcoat>0,Ut=A.iridescence>0,F=A.sheen>0,L=A.transmission>0,ne=nt&&!!A.anisotropyMap,Ee=gt&&!!A.clearcoatMap,_e=gt&&!!A.clearcoatNormalMap,be=gt&&!!A.clearcoatRoughnessMap,je=Ut&&!!A.iridescenceMap,Ce=Ut&&!!A.iridescenceThicknessMap,Ue=F&&!!A.sheenColorMap,at=F&&!!A.sheenRoughnessMap,At=!!A.specularMap,Ae=!!A.specularColorMap,Rt=!!A.specularIntensityMap,V=L&&!!A.transmissionMap,fe=L&&!!A.thicknessMap,Me=!!A.gradientMap,Se=!!A.alphaMap,et=A.alphaTest>0,W=!!A.alphaHash,Ie=!!A.extensions,Le=!!q.attributes.uv1,pe=!!q.attributes.uv2,Te=!!q.attributes.uv3;let Qe=Vi;return A.toneMapped&&(Ye===null||Ye.isXRRenderTarget===!0)&&(Qe=r.toneMapping),{isWebGL2:f,shaderID:j,shaderType:A.type,shaderName:A.name,vertexShader:ce,fragmentShader:H,defines:A.defines,customVertexShaderID:xe,customFragmentShaderID:Fe,isRawShaderMaterial:A.isRawShaderMaterial===!0,glslVersion:A.glslVersion,precision:v,instancing:Ze,instancingColor:Ze&&oe.instanceColor!==null,supportsVertexTextures:m,outputColorSpace:Ye===null?r.outputColorSpace:Ye.isXRRenderTarget===!0?Ye.texture.colorSpace:Yi,map:tt,matcap:it,envMap:Re,envMapMode:Re&&te.mapping,envMapCubeUVHeight:Q,aoMap:k,lightMap:ye,bumpMap:de,normalMap:we,displacementMap:m&&ve,emissiveMap:Ge,normalMapObjectSpace:we&&A.normalMapType===Pv,normalMapTangentSpace:we&&A.normalMapType===Br,metalnessMap:Ne,roughnessMap:ke,anisotropy:nt,anisotropyMap:ne,clearcoat:gt,clearcoatMap:Ee,clearcoatNormalMap:_e,clearcoatRoughnessMap:be,iridescence:Ut,iridescenceMap:je,iridescenceThicknessMap:Ce,sheen:F,sheenColorMap:Ue,sheenRoughnessMap:at,specularMap:At,specularColorMap:Ae,specularIntensityMap:Rt,transmission:L,transmissionMap:V,thicknessMap:fe,gradientMap:Me,opaque:A.transparent===!1&&A.blending===ms,alphaMap:Se,alphaTest:et,alphaHash:W,combine:A.combine,mapUv:tt&&w(A.map.channel),aoMapUv:k&&w(A.aoMap.channel),lightMapUv:ye&&w(A.lightMap.channel),bumpMapUv:de&&w(A.bumpMap.channel),normalMapUv:we&&w(A.normalMap.channel),displacementMapUv:ve&&w(A.displacementMap.channel),emissiveMapUv:Ge&&w(A.emissiveMap.channel),metalnessMapUv:Ne&&w(A.metalnessMap.channel),roughnessMapUv:ke&&w(A.roughnessMap.channel),anisotropyMapUv:ne&&w(A.anisotropyMap.channel),clearcoatMapUv:Ee&&w(A.clearcoatMap.channel),clearcoatNormalMapUv:_e&&w(A.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:be&&w(A.clearcoatRoughnessMap.channel),iridescenceMapUv:je&&w(A.iridescenceMap.channel),iridescenceThicknessMapUv:Ce&&w(A.iridescenceThicknessMap.channel),sheenColorMapUv:Ue&&w(A.sheenColorMap.channel),sheenRoughnessMapUv:at&&w(A.sheenRoughnessMap.channel),specularMapUv:At&&w(A.specularMap.channel),specularColorMapUv:Ae&&w(A.specularColorMap.channel),specularIntensityMapUv:Rt&&w(A.specularIntensityMap.channel),transmissionMapUv:V&&w(A.transmissionMap.channel),thicknessMapUv:fe&&w(A.thicknessMap.channel),alphaMapUv:Se&&w(A.alphaMap.channel),vertexTangents:!!q.attributes.tangent&&(we||nt),vertexColors:A.vertexColors,vertexAlphas:A.vertexColors===!0&&!!q.attributes.color&&q.attributes.color.itemSize===4,vertexUv1s:Le,vertexUv2s:pe,vertexUv3s:Te,pointsUvs:oe.isPoints===!0&&!!q.attributes.uv&&(tt||Se),fog:!!G,useFog:A.fog===!0,fogExp2:G&&G.isFogExp2,flatShading:A.flatShading===!0,sizeAttenuation:A.sizeAttenuation===!0,logarithmicDepthBuffer:p,skinning:oe.isSkinnedMesh===!0,morphTargets:q.morphAttributes.position!==void 0,morphNormals:q.morphAttributes.normal!==void 0,morphColors:q.morphAttributes.color!==void 0,morphTargetsCount:U,morphTextureStride:Z,numDirLights:C.directional.length,numPointLights:C.point.length,numSpotLights:C.spot.length,numSpotLightMaps:C.spotLightMap.length,numRectAreaLights:C.rectArea.length,numHemiLights:C.hemi.length,numDirLightShadows:C.directionalShadowMap.length,numPointLightShadows:C.pointShadowMap.length,numSpotLightShadows:C.spotShadowMap.length,numSpotLightShadowsWithMaps:C.numSpotLightShadowsWithMaps,numLightProbes:C.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:A.dithering,shadowMapEnabled:r.shadowMap.enabled&&B.length>0,shadowMapType:r.shadowMap.type,toneMapping:Qe,useLegacyLights:r._useLegacyLights,decodeVideoTexture:tt&&A.map.isVideoTexture===!0&&Ft.getTransfer(A.map.colorSpace)===Ht,premultipliedAlpha:A.premultipliedAlpha,doubleSided:A.side===ni,flipSided:A.side===Bn,useDepthPacking:A.depthPacking>=0,depthPacking:A.depthPacking||0,index0AttributeName:A.index0AttributeName,extensionDerivatives:Ie&&A.extensions.derivatives===!0,extensionFragDepth:Ie&&A.extensions.fragDepth===!0,extensionDrawBuffers:Ie&&A.extensions.drawBuffers===!0,extensionShaderTextureLOD:Ie&&A.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:f||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:f||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:f||n.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:A.customProgramCacheKey()}}function _(A){const C=[];if(A.shaderID?C.push(A.shaderID):(C.push(A.customVertexShaderID),C.push(A.customFragmentShaderID)),A.defines!==void 0)for(const B in A.defines)C.push(B),C.push(A.defines[B]);return A.isRawShaderMaterial===!1&&(E(C,A),M(C,A),C.push(r.outputColorSpace)),C.push(A.customProgramCacheKey),C.join()}function E(A,C){A.push(C.precision),A.push(C.outputColorSpace),A.push(C.envMapMode),A.push(C.envMapCubeUVHeight),A.push(C.mapUv),A.push(C.alphaMapUv),A.push(C.lightMapUv),A.push(C.aoMapUv),A.push(C.bumpMapUv),A.push(C.normalMapUv),A.push(C.displacementMapUv),A.push(C.emissiveMapUv),A.push(C.metalnessMapUv),A.push(C.roughnessMapUv),A.push(C.anisotropyMapUv),A.push(C.clearcoatMapUv),A.push(C.clearcoatNormalMapUv),A.push(C.clearcoatRoughnessMapUv),A.push(C.iridescenceMapUv),A.push(C.iridescenceThicknessMapUv),A.push(C.sheenColorMapUv),A.push(C.sheenRoughnessMapUv),A.push(C.specularMapUv),A.push(C.specularColorMapUv),A.push(C.specularIntensityMapUv),A.push(C.transmissionMapUv),A.push(C.thicknessMapUv),A.push(C.combine),A.push(C.fogExp2),A.push(C.sizeAttenuation),A.push(C.morphTargetsCount),A.push(C.morphAttributeCount),A.push(C.numDirLights),A.push(C.numPointLights),A.push(C.numSpotLights),A.push(C.numSpotLightMaps),A.push(C.numHemiLights),A.push(C.numRectAreaLights),A.push(C.numDirLightShadows),A.push(C.numPointLightShadows),A.push(C.numSpotLightShadows),A.push(C.numSpotLightShadowsWithMaps),A.push(C.numLightProbes),A.push(C.shadowMapType),A.push(C.toneMapping),A.push(C.numClippingPlanes),A.push(C.numClipIntersection),A.push(C.depthPacking)}function M(A,C){c.disableAll(),C.isWebGL2&&c.enable(0),C.supportsVertexTextures&&c.enable(1),C.instancing&&c.enable(2),C.instancingColor&&c.enable(3),C.matcap&&c.enable(4),C.envMap&&c.enable(5),C.normalMapObjectSpace&&c.enable(6),C.normalMapTangentSpace&&c.enable(7),C.clearcoat&&c.enable(8),C.iridescence&&c.enable(9),C.alphaTest&&c.enable(10),C.vertexColors&&c.enable(11),C.vertexAlphas&&c.enable(12),C.vertexUv1s&&c.enable(13),C.vertexUv2s&&c.enable(14),C.vertexUv3s&&c.enable(15),C.vertexTangents&&c.enable(16),C.anisotropy&&c.enable(17),C.alphaHash&&c.enable(18),A.push(c.mask),c.disableAll(),C.fog&&c.enable(0),C.useFog&&c.enable(1),C.flatShading&&c.enable(2),C.logarithmicDepthBuffer&&c.enable(3),C.skinning&&c.enable(4),C.morphTargets&&c.enable(5),C.morphNormals&&c.enable(6),C.morphColors&&c.enable(7),C.premultipliedAlpha&&c.enable(8),C.shadowMapEnabled&&c.enable(9),C.useLegacyLights&&c.enable(10),C.doubleSided&&c.enable(11),C.flipSided&&c.enable(12),C.useDepthPacking&&c.enable(13),C.dithering&&c.enable(14),C.transmission&&c.enable(15),C.sheen&&c.enable(16),C.opaque&&c.enable(17),C.pointsUvs&&c.enable(18),C.decodeVideoTexture&&c.enable(19),A.push(c.mask)}function b(A){const C=y[A.type];let B;if(C){const $=bi[C];B=Wv.clone($.uniforms)}else B=A.uniforms;return B}function R(A,C){let B;for(let $=0,oe=h.length;$<oe;$++){const G=h[$];if(G.cacheKey===C){B=G,++B.usedTimes;break}}return B===void 0&&(B=new W1(r,C,A,s),h.push(B)),B}function P(A){if(--A.usedTimes===0){const C=h.indexOf(A);h[C]=h[h.length-1],h.pop(),A.destroy()}}function I(A){u.remove(A)}function z(){u.dispose()}return{getParameters:x,getProgramCacheKey:_,getUniforms:b,acquireProgram:R,releaseProgram:P,releaseShaderCache:I,programs:h,dispose:z}}function j1(){let r=new WeakMap;function e(s){let l=r.get(s);return l===void 0&&(l={},r.set(s,l)),l}function t(s){r.delete(s)}function n(s,l,c){r.get(s)[l]=c}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function Q1(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function wg(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Eg(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function l(p,m,v,y,w,x){let _=r[e];return _===void 0?(_={id:p.id,object:p,geometry:m,material:v,groupOrder:y,renderOrder:p.renderOrder,z:w,group:x},r[e]=_):(_.id=p.id,_.object=p,_.geometry=m,_.material=v,_.groupOrder=y,_.renderOrder=p.renderOrder,_.z=w,_.group=x),e++,_}function c(p,m,v,y,w,x){const _=l(p,m,v,y,w,x);v.transmission>0?n.push(_):v.transparent===!0?i.push(_):t.push(_)}function u(p,m,v,y,w,x){const _=l(p,m,v,y,w,x);v.transmission>0?n.unshift(_):v.transparent===!0?i.unshift(_):t.unshift(_)}function h(p,m){t.length>1&&t.sort(p||Q1),n.length>1&&n.sort(m||wg),i.length>1&&i.sort(m||wg)}function f(){for(let p=e,m=r.length;p<m;p++){const v=r[p];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:c,unshift:u,finish:f,sort:h}}function J1(){let r=new WeakMap;function e(n,i){const s=r.get(n);let l;return s===void 0?(l=new Eg,r.set(n,[l])):i>=s.length?(l=new Eg,s.push(l)):l=s[i],l}function t(){r=new WeakMap}return{get:e,dispose:t}}function K1(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new D,color:new Be};break;case"SpotLight":t={position:new D,direction:new D,color:new Be,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new D,color:new Be,distance:0,decay:0};break;case"HemisphereLight":t={direction:new D,skyColor:new Be,groundColor:new Be};break;case"RectAreaLight":t={color:new Be,position:new D,halfWidth:new D,halfHeight:new D};break}return r[e.id]=t,t}}}function $1(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new me};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new me};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new me,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let eT=0;function tT(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function nT(r,e){const t=new K1,n=$1(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let f=0;f<9;f++)i.probe.push(new D);const s=new D,l=new dt,c=new dt;function u(f,p){let m=0,v=0,y=0;for(let $=0;$<9;$++)i.probe[$].set(0,0,0);let w=0,x=0,_=0,E=0,M=0,b=0,R=0,P=0,I=0,z=0,A=0;f.sort(tT);const C=p===!0?Math.PI:1;for(let $=0,oe=f.length;$<oe;$++){const G=f[$],q=G.color,ie=G.intensity,te=G.distance,Q=G.shadow&&G.shadow.map?G.shadow.map.texture:null;if(G.isAmbientLight)m+=q.r*ie*C,v+=q.g*ie*C,y+=q.b*ie*C;else if(G.isLightProbe){for(let j=0;j<9;j++)i.probe[j].addScaledVector(G.sh.coefficients[j],ie);A++}else if(G.isDirectionalLight){const j=t.get(G);if(j.color.copy(G.color).multiplyScalar(G.intensity*C),G.castShadow){const X=G.shadow,U=n.get(G);U.shadowBias=X.bias,U.shadowNormalBias=X.normalBias,U.shadowRadius=X.radius,U.shadowMapSize=X.mapSize,i.directionalShadow[w]=U,i.directionalShadowMap[w]=Q,i.directionalShadowMatrix[w]=G.shadow.matrix,b++}i.directional[w]=j,w++}else if(G.isSpotLight){const j=t.get(G);j.position.setFromMatrixPosition(G.matrixWorld),j.color.copy(q).multiplyScalar(ie*C),j.distance=te,j.coneCos=Math.cos(G.angle),j.penumbraCos=Math.cos(G.angle*(1-G.penumbra)),j.decay=G.decay,i.spot[_]=j;const X=G.shadow;if(G.map&&(i.spotLightMap[I]=G.map,I++,X.updateMatrices(G),G.castShadow&&z++),i.spotLightMatrix[_]=X.matrix,G.castShadow){const U=n.get(G);U.shadowBias=X.bias,U.shadowNormalBias=X.normalBias,U.shadowRadius=X.radius,U.shadowMapSize=X.mapSize,i.spotShadow[_]=U,i.spotShadowMap[_]=Q,P++}_++}else if(G.isRectAreaLight){const j=t.get(G);j.color.copy(q).multiplyScalar(ie),j.halfWidth.set(G.width*.5,0,0),j.halfHeight.set(0,G.height*.5,0),i.rectArea[E]=j,E++}else if(G.isPointLight){const j=t.get(G);if(j.color.copy(G.color).multiplyScalar(G.intensity*C),j.distance=G.distance,j.decay=G.decay,G.castShadow){const X=G.shadow,U=n.get(G);U.shadowBias=X.bias,U.shadowNormalBias=X.normalBias,U.shadowRadius=X.radius,U.shadowMapSize=X.mapSize,U.shadowCameraNear=X.camera.near,U.shadowCameraFar=X.camera.far,i.pointShadow[x]=U,i.pointShadowMap[x]=Q,i.pointShadowMatrix[x]=G.shadow.matrix,R++}i.point[x]=j,x++}else if(G.isHemisphereLight){const j=t.get(G);j.skyColor.copy(G.color).multiplyScalar(ie*C),j.groundColor.copy(G.groundColor).multiplyScalar(ie*C),i.hemi[M]=j,M++}}E>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=De.LTC_FLOAT_1,i.rectAreaLTC2=De.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=De.LTC_HALF_1,i.rectAreaLTC2=De.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=m,i.ambient[1]=v,i.ambient[2]=y;const B=i.hash;(B.directionalLength!==w||B.pointLength!==x||B.spotLength!==_||B.rectAreaLength!==E||B.hemiLength!==M||B.numDirectionalShadows!==b||B.numPointShadows!==R||B.numSpotShadows!==P||B.numSpotMaps!==I||B.numLightProbes!==A)&&(i.directional.length=w,i.spot.length=_,i.rectArea.length=E,i.point.length=x,i.hemi.length=M,i.directionalShadow.length=b,i.directionalShadowMap.length=b,i.pointShadow.length=R,i.pointShadowMap.length=R,i.spotShadow.length=P,i.spotShadowMap.length=P,i.directionalShadowMatrix.length=b,i.pointShadowMatrix.length=R,i.spotLightMatrix.length=P+I-z,i.spotLightMap.length=I,i.numSpotLightShadowsWithMaps=z,i.numLightProbes=A,B.directionalLength=w,B.pointLength=x,B.spotLength=_,B.rectAreaLength=E,B.hemiLength=M,B.numDirectionalShadows=b,B.numPointShadows=R,B.numSpotShadows=P,B.numSpotMaps=I,B.numLightProbes=A,i.version=eT++)}function h(f,p){let m=0,v=0,y=0,w=0,x=0;const _=p.matrixWorldInverse;for(let E=0,M=f.length;E<M;E++){const b=f[E];if(b.isDirectionalLight){const R=i.directional[m];R.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),R.direction.sub(s),R.direction.transformDirection(_),m++}else if(b.isSpotLight){const R=i.spot[y];R.position.setFromMatrixPosition(b.matrixWorld),R.position.applyMatrix4(_),R.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),R.direction.sub(s),R.direction.transformDirection(_),y++}else if(b.isRectAreaLight){const R=i.rectArea[w];R.position.setFromMatrixPosition(b.matrixWorld),R.position.applyMatrix4(_),c.identity(),l.copy(b.matrixWorld),l.premultiply(_),c.extractRotation(l),R.halfWidth.set(b.width*.5,0,0),R.halfHeight.set(0,b.height*.5,0),R.halfWidth.applyMatrix4(c),R.halfHeight.applyMatrix4(c),w++}else if(b.isPointLight){const R=i.point[v];R.position.setFromMatrixPosition(b.matrixWorld),R.position.applyMatrix4(_),v++}else if(b.isHemisphereLight){const R=i.hemi[x];R.direction.setFromMatrixPosition(b.matrixWorld),R.direction.transformDirection(_),x++}}}return{setup:u,setupView:h,state:i}}function Tg(r,e){const t=new nT(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function l(p){n.push(p)}function c(p){i.push(p)}function u(p){t.setup(n,p)}function h(p){t.setupView(n,p)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:u,setupLightsView:h,pushLight:l,pushShadow:c}}function iT(r,e){let t=new WeakMap;function n(s,l=0){const c=t.get(s);let u;return c===void 0?(u=new Tg(r,e),t.set(s,[u])):l>=c.length?(u=new Tg(r,e),c.push(u)):u=c[l],u}function i(){t=new WeakMap}return{get:n,dispose:i}}class Nd extends Dn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Av,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Ud extends Dn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const rT=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,sT=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function oT(r,e,t){let n=new ou;const i=new me,s=new me,l=new zt,c=new Nd({depthPacking:Rv}),u=new Ud,h={},f=t.maxTextureSize,p={[dr]:Bn,[Bn]:dr,[ni]:ni},m=new qi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new me},radius:{value:4}},vertexShader:rT,fragmentShader:sT}),v=m.clone();v.defines.HORIZONTAL_PASS=1;const y=new vt;y.setAttribute("position",new kt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const w=new Ve(y,m),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=eu;let _=this.type;this.render=function(R,P,I){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||R.length===0)return;const z=r.getRenderTarget(),A=r.getActiveCubeFace(),C=r.getActiveMipmapLevel(),B=r.state;B.setBlending(fr),B.buffers.color.setClear(1,1,1,1),B.buffers.depth.setTest(!0),B.setScissorTest(!1);const $=_!==Ei&&this.type===Ei,oe=_===Ei&&this.type!==Ei;for(let G=0,q=R.length;G<q;G++){const ie=R[G],te=ie.shadow;if(te===void 0){console.warn("THREE.WebGLShadowMap:",ie,"has no shadow.");continue}if(te.autoUpdate===!1&&te.needsUpdate===!1)continue;i.copy(te.mapSize);const Q=te.getFrameExtents();if(i.multiply(Q),s.copy(te.mapSize),(i.x>f||i.y>f)&&(i.x>f&&(s.x=Math.floor(f/Q.x),i.x=s.x*Q.x,te.mapSize.x=s.x),i.y>f&&(s.y=Math.floor(f/Q.y),i.y=s.y*Q.y,te.mapSize.y=s.y)),te.map===null||$===!0||oe===!0){const X=this.type!==Ei?{minFilter:nn,magFilter:nn}:{};te.map!==null&&te.map.dispose(),te.map=new Ai(i.x,i.y,X),te.map.texture.name=ie.name+".shadowMap",te.camera.updateProjectionMatrix()}r.setRenderTarget(te.map),r.clear();const j=te.getViewportCount();for(let X=0;X<j;X++){const U=te.getViewport(X);l.set(s.x*U.x,s.y*U.y,s.x*U.z,s.y*U.w),B.viewport(l),te.updateMatrices(ie,X),n=te.getFrustum(),b(P,I,te.camera,ie,this.type)}te.isPointLightShadow!==!0&&this.type===Ei&&E(te,I),te.needsUpdate=!1}_=this.type,x.needsUpdate=!1,r.setRenderTarget(z,A,C)};function E(R,P){const I=e.update(w);m.defines.VSM_SAMPLES!==R.blurSamples&&(m.defines.VSM_SAMPLES=R.blurSamples,v.defines.VSM_SAMPLES=R.blurSamples,m.needsUpdate=!0,v.needsUpdate=!0),R.mapPass===null&&(R.mapPass=new Ai(i.x,i.y)),m.uniforms.shadow_pass.value=R.map.texture,m.uniforms.resolution.value=R.mapSize,m.uniforms.radius.value=R.radius,r.setRenderTarget(R.mapPass),r.clear(),r.renderBufferDirect(P,null,I,m,w,null),v.uniforms.shadow_pass.value=R.mapPass.texture,v.uniforms.resolution.value=R.mapSize,v.uniforms.radius.value=R.radius,r.setRenderTarget(R.map),r.clear(),r.renderBufferDirect(P,null,I,v,w,null)}function M(R,P,I,z){let A=null;const C=I.isPointLight===!0?R.customDistanceMaterial:R.customDepthMaterial;if(C!==void 0)A=C;else if(A=I.isPointLight===!0?u:c,r.localClippingEnabled&&P.clipShadows===!0&&Array.isArray(P.clippingPlanes)&&P.clippingPlanes.length!==0||P.displacementMap&&P.displacementScale!==0||P.alphaMap&&P.alphaTest>0||P.map&&P.alphaTest>0){const B=A.uuid,$=P.uuid;let oe=h[B];oe===void 0&&(oe={},h[B]=oe);let G=oe[$];G===void 0&&(G=A.clone(),oe[$]=G),A=G}if(A.visible=P.visible,A.wireframe=P.wireframe,z===Ei?A.side=P.shadowSide!==null?P.shadowSide:P.side:A.side=P.shadowSide!==null?P.shadowSide:p[P.side],A.alphaMap=P.alphaMap,A.alphaTest=P.alphaTest,A.map=P.map,A.clipShadows=P.clipShadows,A.clippingPlanes=P.clippingPlanes,A.clipIntersection=P.clipIntersection,A.displacementMap=P.displacementMap,A.displacementScale=P.displacementScale,A.displacementBias=P.displacementBias,A.wireframeLinewidth=P.wireframeLinewidth,A.linewidth=P.linewidth,I.isPointLight===!0&&A.isMeshDistanceMaterial===!0){const B=r.properties.get(A);B.light=I}return A}function b(R,P,I,z,A){if(R.visible===!1)return;if(R.layers.test(P.layers)&&(R.isMesh||R.isLine||R.isPoints)&&(R.castShadow||R.receiveShadow&&A===Ei)&&(!R.frustumCulled||n.intersectsObject(R))){R.modelViewMatrix.multiplyMatrices(I.matrixWorldInverse,R.matrixWorld);const $=e.update(R),oe=R.material;if(Array.isArray(oe)){const G=$.groups;for(let q=0,ie=G.length;q<ie;q++){const te=G[q],Q=oe[te.materialIndex];if(Q&&Q.visible){const j=M(R,Q,z,A);r.renderBufferDirect(I,null,$,j,R,te)}}}else if(oe.visible){const G=M(R,oe,z,A);r.renderBufferDirect(I,null,$,G,R,null)}}const B=R.children;for(let $=0,oe=B.length;$<oe;$++)b(B[$],P,I,z,A)}}function aT(r,e,t){const n=t.isWebGL2;function i(){let W=!1;const Ie=new zt;let Le=null;const pe=new zt(0,0,0,0);return{setMask:function(Te){Le!==Te&&!W&&(r.colorMask(Te,Te,Te,Te),Le=Te)},setLocked:function(Te){W=Te},setClear:function(Te,Qe,xt,Ot,$t){$t===!0&&(Te*=Ot,Qe*=Ot,xt*=Ot),Ie.set(Te,Qe,xt,Ot),pe.equals(Ie)===!1&&(r.clearColor(Te,Qe,xt,Ot),pe.copy(Ie))},reset:function(){W=!1,Le=null,pe.set(-1,0,0,0)}}}function s(){let W=!1,Ie=null,Le=null,pe=null;return{setTest:function(Te){Te?tt(r.DEPTH_TEST):it(r.DEPTH_TEST)},setMask:function(Te){Ie!==Te&&!W&&(r.depthMask(Te),Ie=Te)},setFunc:function(Te){if(Le!==Te){switch(Te){case tv:r.depthFunc(r.NEVER);break;case nv:r.depthFunc(r.ALWAYS);break;case iv:r.depthFunc(r.LESS);break;case ya:r.depthFunc(r.LEQUAL);break;case rv:r.depthFunc(r.EQUAL);break;case sv:r.depthFunc(r.GEQUAL);break;case ov:r.depthFunc(r.GREATER);break;case av:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}Le=Te}},setLocked:function(Te){W=Te},setClear:function(Te){pe!==Te&&(r.clearDepth(Te),pe=Te)},reset:function(){W=!1,Ie=null,Le=null,pe=null}}}function l(){let W=!1,Ie=null,Le=null,pe=null,Te=null,Qe=null,xt=null,Ot=null,$t=null;return{setTest:function(Pt){W||(Pt?tt(r.STENCIL_TEST):it(r.STENCIL_TEST))},setMask:function(Pt){Ie!==Pt&&!W&&(r.stencilMask(Pt),Ie=Pt)},setFunc:function(Pt,Sn,si){(Le!==Pt||pe!==Sn||Te!==si)&&(r.stencilFunc(Pt,Sn,si),Le=Pt,pe=Sn,Te=si)},setOp:function(Pt,Sn,si){(Qe!==Pt||xt!==Sn||Ot!==si)&&(r.stencilOp(Pt,Sn,si),Qe=Pt,xt=Sn,Ot=si)},setLocked:function(Pt){W=Pt},setClear:function(Pt){$t!==Pt&&(r.clearStencil(Pt),$t=Pt)},reset:function(){W=!1,Ie=null,Le=null,pe=null,Te=null,Qe=null,xt=null,Ot=null,$t=null}}}const c=new i,u=new s,h=new l,f=new WeakMap,p=new WeakMap;let m={},v={},y=new WeakMap,w=[],x=null,_=!1,E=null,M=null,b=null,R=null,P=null,I=null,z=null,A=new Be(0,0,0),C=0,B=!1,$=null,oe=null,G=null,q=null,ie=null;const te=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let Q=!1,j=0;const X=r.getParameter(r.VERSION);X.indexOf("WebGL")!==-1?(j=parseFloat(/^WebGL (\d)/.exec(X)[1]),Q=j>=1):X.indexOf("OpenGL ES")!==-1&&(j=parseFloat(/^OpenGL ES (\d)/.exec(X)[1]),Q=j>=2);let U=null,Z={};const ce=r.getParameter(r.SCISSOR_BOX),H=r.getParameter(r.VIEWPORT),xe=new zt().fromArray(ce),Fe=new zt().fromArray(H);function Ye(W,Ie,Le,pe){const Te=new Uint8Array(4),Qe=r.createTexture();r.bindTexture(W,Qe),r.texParameteri(W,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(W,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let xt=0;xt<Le;xt++)n&&(W===r.TEXTURE_3D||W===r.TEXTURE_2D_ARRAY)?r.texImage3D(Ie,0,r.RGBA,1,1,pe,0,r.RGBA,r.UNSIGNED_BYTE,Te):r.texImage2D(Ie+xt,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,Te);return Qe}const Ze={};Ze[r.TEXTURE_2D]=Ye(r.TEXTURE_2D,r.TEXTURE_2D,1),Ze[r.TEXTURE_CUBE_MAP]=Ye(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(Ze[r.TEXTURE_2D_ARRAY]=Ye(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),Ze[r.TEXTURE_3D]=Ye(r.TEXTURE_3D,r.TEXTURE_3D,1,1)),c.setClear(0,0,0,1),u.setClear(1),h.setClear(0),tt(r.DEPTH_TEST),u.setFunc(ya),Ne(!1),ke(Ef),tt(r.CULL_FACE),ve(fr);function tt(W){m[W]!==!0&&(r.enable(W),m[W]=!0)}function it(W){m[W]!==!1&&(r.disable(W),m[W]=!1)}function Re(W,Ie){return v[W]!==Ie?(r.bindFramebuffer(W,Ie),v[W]=Ie,n&&(W===r.DRAW_FRAMEBUFFER&&(v[r.FRAMEBUFFER]=Ie),W===r.FRAMEBUFFER&&(v[r.DRAW_FRAMEBUFFER]=Ie)),!0):!1}function k(W,Ie){let Le=w,pe=!1;if(W)if(Le=y.get(Ie),Le===void 0&&(Le=[],y.set(Ie,Le)),W.isWebGLMultipleRenderTargets){const Te=W.texture;if(Le.length!==Te.length||Le[0]!==r.COLOR_ATTACHMENT0){for(let Qe=0,xt=Te.length;Qe<xt;Qe++)Le[Qe]=r.COLOR_ATTACHMENT0+Qe;Le.length=Te.length,pe=!0}}else Le[0]!==r.COLOR_ATTACHMENT0&&(Le[0]=r.COLOR_ATTACHMENT0,pe=!0);else Le[0]!==r.BACK&&(Le[0]=r.BACK,pe=!0);pe&&(t.isWebGL2?r.drawBuffers(Le):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Le))}function ye(W){return x!==W?(r.useProgram(W),x=W,!0):!1}const de={[Ir]:r.FUNC_ADD,[k0]:r.FUNC_SUBTRACT,[H0]:r.FUNC_REVERSE_SUBTRACT};if(n)de[Rf]=r.MIN,de[Pf]=r.MAX;else{const W=e.get("EXT_blend_minmax");W!==null&&(de[Rf]=W.MIN_EXT,de[Pf]=W.MAX_EXT)}const we={[V0]:r.ZERO,[G0]:r.ONE,[W0]:r.SRC_COLOR,[Xc]:r.SRC_ALPHA,[Q0]:r.SRC_ALPHA_SATURATE,[Z0]:r.DST_COLOR,[Y0]:r.DST_ALPHA,[X0]:r.ONE_MINUS_SRC_COLOR,[Yc]:r.ONE_MINUS_SRC_ALPHA,[j0]:r.ONE_MINUS_DST_COLOR,[q0]:r.ONE_MINUS_DST_ALPHA,[J0]:r.CONSTANT_COLOR,[K0]:r.ONE_MINUS_CONSTANT_COLOR,[$0]:r.CONSTANT_ALPHA,[ev]:r.ONE_MINUS_CONSTANT_ALPHA};function ve(W,Ie,Le,pe,Te,Qe,xt,Ot,$t,Pt){if(W===fr){_===!0&&(it(r.BLEND),_=!1);return}if(_===!1&&(tt(r.BLEND),_=!0),W!==B0){if(W!==E||Pt!==B){if((M!==Ir||P!==Ir)&&(r.blendEquation(r.FUNC_ADD),M=Ir,P=Ir),Pt)switch(W){case ms:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Tf:r.blendFunc(r.ONE,r.ONE);break;case bf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Af:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",W);break}else switch(W){case ms:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Tf:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case bf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Af:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",W);break}b=null,R=null,I=null,z=null,A.set(0,0,0),C=0,E=W,B=Pt}return}Te=Te||Ie,Qe=Qe||Le,xt=xt||pe,(Ie!==M||Te!==P)&&(r.blendEquationSeparate(de[Ie],de[Te]),M=Ie,P=Te),(Le!==b||pe!==R||Qe!==I||xt!==z)&&(r.blendFuncSeparate(we[Le],we[pe],we[Qe],we[xt]),b=Le,R=pe,I=Qe,z=xt),(Ot.equals(A)===!1||$t!==C)&&(r.blendColor(Ot.r,Ot.g,Ot.b,$t),A.copy(Ot),C=$t),E=W,B=!1}function Ge(W,Ie){W.side===ni?it(r.CULL_FACE):tt(r.CULL_FACE);let Le=W.side===Bn;Ie&&(Le=!Le),Ne(Le),W.blending===ms&&W.transparent===!1?ve(fr):ve(W.blending,W.blendEquation,W.blendSrc,W.blendDst,W.blendEquationAlpha,W.blendSrcAlpha,W.blendDstAlpha,W.blendColor,W.blendAlpha,W.premultipliedAlpha),u.setFunc(W.depthFunc),u.setTest(W.depthTest),u.setMask(W.depthWrite),c.setMask(W.colorWrite);const pe=W.stencilWrite;h.setTest(pe),pe&&(h.setMask(W.stencilWriteMask),h.setFunc(W.stencilFunc,W.stencilRef,W.stencilFuncMask),h.setOp(W.stencilFail,W.stencilZFail,W.stencilZPass)),gt(W.polygonOffset,W.polygonOffsetFactor,W.polygonOffsetUnits),W.alphaToCoverage===!0?tt(r.SAMPLE_ALPHA_TO_COVERAGE):it(r.SAMPLE_ALPHA_TO_COVERAGE)}function Ne(W){$!==W&&(W?r.frontFace(r.CW):r.frontFace(r.CCW),$=W)}function ke(W){W!==O0?(tt(r.CULL_FACE),W!==oe&&(W===Ef?r.cullFace(r.BACK):W===F0?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):it(r.CULL_FACE),oe=W}function nt(W){W!==G&&(Q&&r.lineWidth(W),G=W)}function gt(W,Ie,Le){W?(tt(r.POLYGON_OFFSET_FILL),(q!==Ie||ie!==Le)&&(r.polygonOffset(Ie,Le),q=Ie,ie=Le)):it(r.POLYGON_OFFSET_FILL)}function Ut(W){W?tt(r.SCISSOR_TEST):it(r.SCISSOR_TEST)}function F(W){W===void 0&&(W=r.TEXTURE0+te-1),U!==W&&(r.activeTexture(W),U=W)}function L(W,Ie,Le){Le===void 0&&(U===null?Le=r.TEXTURE0+te-1:Le=U);let pe=Z[Le];pe===void 0&&(pe={type:void 0,texture:void 0},Z[Le]=pe),(pe.type!==W||pe.texture!==Ie)&&(U!==Le&&(r.activeTexture(Le),U=Le),r.bindTexture(W,Ie||Ze[W]),pe.type=W,pe.texture=Ie)}function ne(){const W=Z[U];W!==void 0&&W.type!==void 0&&(r.bindTexture(W.type,null),W.type=void 0,W.texture=void 0)}function Ee(){try{r.compressedTexImage2D.apply(r,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function _e(){try{r.compressedTexImage3D.apply(r,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function be(){try{r.texSubImage2D.apply(r,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function je(){try{r.texSubImage3D.apply(r,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function Ce(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function Ue(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function at(){try{r.texStorage2D.apply(r,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function At(){try{r.texStorage3D.apply(r,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function Ae(){try{r.texImage2D.apply(r,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function Rt(){try{r.texImage3D.apply(r,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function V(W){xe.equals(W)===!1&&(r.scissor(W.x,W.y,W.z,W.w),xe.copy(W))}function fe(W){Fe.equals(W)===!1&&(r.viewport(W.x,W.y,W.z,W.w),Fe.copy(W))}function Me(W,Ie){let Le=p.get(Ie);Le===void 0&&(Le=new WeakMap,p.set(Ie,Le));let pe=Le.get(W);pe===void 0&&(pe=r.getUniformBlockIndex(Ie,W.name),Le.set(W,pe))}function Se(W,Ie){const pe=p.get(Ie).get(W);f.get(Ie)!==pe&&(r.uniformBlockBinding(Ie,pe,W.__bindingPointIndex),f.set(Ie,pe))}function et(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),n===!0&&(r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),m={},U=null,Z={},v={},y=new WeakMap,w=[],x=null,_=!1,E=null,M=null,b=null,R=null,P=null,I=null,z=null,A=new Be(0,0,0),C=0,B=!1,$=null,oe=null,G=null,q=null,ie=null,xe.set(0,0,r.canvas.width,r.canvas.height),Fe.set(0,0,r.canvas.width,r.canvas.height),c.reset(),u.reset(),h.reset()}return{buffers:{color:c,depth:u,stencil:h},enable:tt,disable:it,bindFramebuffer:Re,drawBuffers:k,useProgram:ye,setBlending:ve,setMaterial:Ge,setFlipSided:Ne,setCullFace:ke,setLineWidth:nt,setPolygonOffset:gt,setScissorTest:Ut,activeTexture:F,bindTexture:L,unbindTexture:ne,compressedTexImage2D:Ee,compressedTexImage3D:_e,texImage2D:Ae,texImage3D:Rt,updateUBOMapping:Me,uniformBlockBinding:Se,texStorage2D:at,texStorage3D:At,texSubImage2D:be,texSubImage3D:je,compressedTexSubImage2D:Ce,compressedTexSubImage3D:Ue,scissor:V,viewport:fe,reset:et}}function lT(r,e,t,n,i,s,l){const c=i.isWebGL2,u=i.maxTextures,h=i.maxCubemapSize,f=i.maxTextureSize,p=i.maxSamples,m=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,v=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),y=new WeakMap;let w;const x=new WeakMap;let _=!1;try{_=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function E(F,L){return _?new OffscreenCanvas(F,L):Ia("canvas")}function M(F,L,ne,Ee){let _e=1;if((F.width>Ee||F.height>Ee)&&(_e=Ee/Math.max(F.width,F.height)),_e<1||L===!0)if(typeof HTMLImageElement<"u"&&F instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&F instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&F instanceof ImageBitmap){const be=L?jc:Math.floor,je=be(_e*F.width),Ce=be(_e*F.height);w===void 0&&(w=E(je,Ce));const Ue=ne?E(je,Ce):w;return Ue.width=je,Ue.height=Ce,Ue.getContext("2d").drawImage(F,0,0,je,Ce),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+F.width+"x"+F.height+") to ("+je+"x"+Ce+")."),Ue}else return"data"in F&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+F.width+"x"+F.height+")."),F;return F}function b(F){return rd(F.width)&&rd(F.height)}function R(F){return c?!1:F.wrapS!==In||F.wrapT!==In||F.minFilter!==nn&&F.minFilter!==rn}function P(F,L){return F.generateMipmaps&&L&&F.minFilter!==nn&&F.minFilter!==rn}function I(F){r.generateMipmap(F)}function z(F,L,ne,Ee,_e=!1){if(c===!1)return L;if(F!==null){if(r[F]!==void 0)return r[F];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+F+"'")}let be=L;if(L===r.RED&&(ne===r.FLOAT&&(be=r.R32F),ne===r.HALF_FLOAT&&(be=r.R16F),ne===r.UNSIGNED_BYTE&&(be=r.R8)),L===r.RED_INTEGER&&(ne===r.UNSIGNED_BYTE&&(be=r.R8UI),ne===r.UNSIGNED_SHORT&&(be=r.R16UI),ne===r.UNSIGNED_INT&&(be=r.R32UI),ne===r.BYTE&&(be=r.R8I),ne===r.SHORT&&(be=r.R16I),ne===r.INT&&(be=r.R32I)),L===r.RG&&(ne===r.FLOAT&&(be=r.RG32F),ne===r.HALF_FLOAT&&(be=r.RG16F),ne===r.UNSIGNED_BYTE&&(be=r.RG8)),L===r.RGBA){const je=_e?Aa:Ft.getTransfer(Ee);ne===r.FLOAT&&(be=r.RGBA32F),ne===r.HALF_FLOAT&&(be=r.RGBA16F),ne===r.UNSIGNED_BYTE&&(be=je===Ht?r.SRGB8_ALPHA8:r.RGBA8),ne===r.UNSIGNED_SHORT_4_4_4_4&&(be=r.RGBA4),ne===r.UNSIGNED_SHORT_5_5_5_1&&(be=r.RGB5_A1)}return(be===r.R16F||be===r.R32F||be===r.RG16F||be===r.RG32F||be===r.RGBA16F||be===r.RGBA32F)&&e.get("EXT_color_buffer_float"),be}function A(F,L,ne){return P(F,ne)===!0||F.isFramebufferTexture&&F.minFilter!==nn&&F.minFilter!==rn?Math.log2(Math.max(L.width,L.height))+1:F.mipmaps!==void 0&&F.mipmaps.length>0?F.mipmaps.length:F.isCompressedTexture&&Array.isArray(F.image)?L.mipmaps.length:1}function C(F){return F===nn||F===qc||F===pa?r.NEAREST:r.LINEAR}function B(F){const L=F.target;L.removeEventListener("dispose",B),oe(L),L.isVideoTexture&&y.delete(L)}function $(F){const L=F.target;L.removeEventListener("dispose",$),q(L)}function oe(F){const L=n.get(F);if(L.__webglInit===void 0)return;const ne=F.source,Ee=x.get(ne);if(Ee){const _e=Ee[L.__cacheKey];_e.usedTimes--,_e.usedTimes===0&&G(F),Object.keys(Ee).length===0&&x.delete(ne)}n.remove(F)}function G(F){const L=n.get(F);r.deleteTexture(L.__webglTexture);const ne=F.source,Ee=x.get(ne);delete Ee[L.__cacheKey],l.memory.textures--}function q(F){const L=F.texture,ne=n.get(F),Ee=n.get(L);if(Ee.__webglTexture!==void 0&&(r.deleteTexture(Ee.__webglTexture),l.memory.textures--),F.depthTexture&&F.depthTexture.dispose(),F.isWebGLCubeRenderTarget)for(let _e=0;_e<6;_e++){if(Array.isArray(ne.__webglFramebuffer[_e]))for(let be=0;be<ne.__webglFramebuffer[_e].length;be++)r.deleteFramebuffer(ne.__webglFramebuffer[_e][be]);else r.deleteFramebuffer(ne.__webglFramebuffer[_e]);ne.__webglDepthbuffer&&r.deleteRenderbuffer(ne.__webglDepthbuffer[_e])}else{if(Array.isArray(ne.__webglFramebuffer))for(let _e=0;_e<ne.__webglFramebuffer.length;_e++)r.deleteFramebuffer(ne.__webglFramebuffer[_e]);else r.deleteFramebuffer(ne.__webglFramebuffer);if(ne.__webglDepthbuffer&&r.deleteRenderbuffer(ne.__webglDepthbuffer),ne.__webglMultisampledFramebuffer&&r.deleteFramebuffer(ne.__webglMultisampledFramebuffer),ne.__webglColorRenderbuffer)for(let _e=0;_e<ne.__webglColorRenderbuffer.length;_e++)ne.__webglColorRenderbuffer[_e]&&r.deleteRenderbuffer(ne.__webglColorRenderbuffer[_e]);ne.__webglDepthRenderbuffer&&r.deleteRenderbuffer(ne.__webglDepthRenderbuffer)}if(F.isWebGLMultipleRenderTargets)for(let _e=0,be=L.length;_e<be;_e++){const je=n.get(L[_e]);je.__webglTexture&&(r.deleteTexture(je.__webglTexture),l.memory.textures--),n.remove(L[_e])}n.remove(L),n.remove(F)}let ie=0;function te(){ie=0}function Q(){const F=ie;return F>=u&&console.warn("THREE.WebGLTextures: Trying to use "+F+" texture units while this GPU supports only "+u),ie+=1,F}function j(F){const L=[];return L.push(F.wrapS),L.push(F.wrapT),L.push(F.wrapR||0),L.push(F.magFilter),L.push(F.minFilter),L.push(F.anisotropy),L.push(F.internalFormat),L.push(F.format),L.push(F.type),L.push(F.generateMipmaps),L.push(F.premultiplyAlpha),L.push(F.flipY),L.push(F.unpackAlignment),L.push(F.colorSpace),L.join()}function X(F,L){const ne=n.get(F);if(F.isVideoTexture&&gt(F),F.isRenderTargetTexture===!1&&F.version>0&&ne.__version!==F.version){const Ee=F.image;if(Ee===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Ee.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{tt(ne,F,L);return}}t.bindTexture(r.TEXTURE_2D,ne.__webglTexture,r.TEXTURE0+L)}function U(F,L){const ne=n.get(F);if(F.version>0&&ne.__version!==F.version){tt(ne,F,L);return}t.bindTexture(r.TEXTURE_2D_ARRAY,ne.__webglTexture,r.TEXTURE0+L)}function Z(F,L){const ne=n.get(F);if(F.version>0&&ne.__version!==F.version){tt(ne,F,L);return}t.bindTexture(r.TEXTURE_3D,ne.__webglTexture,r.TEXTURE0+L)}function ce(F,L){const ne=n.get(F);if(F.version>0&&ne.__version!==F.version){it(ne,F,L);return}t.bindTexture(r.TEXTURE_CUBE_MAP,ne.__webglTexture,r.TEXTURE0+L)}const H={[Ma]:r.REPEAT,[In]:r.CLAMP_TO_EDGE,[wa]:r.MIRRORED_REPEAT},xe={[nn]:r.NEAREST,[qc]:r.NEAREST_MIPMAP_NEAREST,[pa]:r.NEAREST_MIPMAP_LINEAR,[rn]:r.LINEAR,[yd]:r.LINEAR_MIPMAP_NEAREST,[zr]:r.LINEAR_MIPMAP_LINEAR},Fe={[Cv]:r.NEVER,[Fv]:r.ALWAYS,[Lv]:r.LESS,[Dv]:r.LEQUAL,[Iv]:r.EQUAL,[Ov]:r.GEQUAL,[Nv]:r.GREATER,[Uv]:r.NOTEQUAL};function Ye(F,L,ne){if(ne?(r.texParameteri(F,r.TEXTURE_WRAP_S,H[L.wrapS]),r.texParameteri(F,r.TEXTURE_WRAP_T,H[L.wrapT]),(F===r.TEXTURE_3D||F===r.TEXTURE_2D_ARRAY)&&r.texParameteri(F,r.TEXTURE_WRAP_R,H[L.wrapR]),r.texParameteri(F,r.TEXTURE_MAG_FILTER,xe[L.magFilter]),r.texParameteri(F,r.TEXTURE_MIN_FILTER,xe[L.minFilter])):(r.texParameteri(F,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(F,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),(F===r.TEXTURE_3D||F===r.TEXTURE_2D_ARRAY)&&r.texParameteri(F,r.TEXTURE_WRAP_R,r.CLAMP_TO_EDGE),(L.wrapS!==In||L.wrapT!==In)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(F,r.TEXTURE_MAG_FILTER,C(L.magFilter)),r.texParameteri(F,r.TEXTURE_MIN_FILTER,C(L.minFilter)),L.minFilter!==nn&&L.minFilter!==rn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),L.compareFunction&&(r.texParameteri(F,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(F,r.TEXTURE_COMPARE_FUNC,Fe[L.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const Ee=e.get("EXT_texture_filter_anisotropic");if(L.magFilter===nn||L.minFilter!==pa&&L.minFilter!==zr||L.type===ki&&e.has("OES_texture_float_linear")===!1||c===!1&&L.type===So&&e.has("OES_texture_half_float_linear")===!1)return;(L.anisotropy>1||n.get(L).__currentAnisotropy)&&(r.texParameterf(F,Ee.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(L.anisotropy,i.getMaxAnisotropy())),n.get(L).__currentAnisotropy=L.anisotropy)}}function Ze(F,L){let ne=!1;F.__webglInit===void 0&&(F.__webglInit=!0,L.addEventListener("dispose",B));const Ee=L.source;let _e=x.get(Ee);_e===void 0&&(_e={},x.set(Ee,_e));const be=j(L);if(be!==F.__cacheKey){_e[be]===void 0&&(_e[be]={texture:r.createTexture(),usedTimes:0},l.memory.textures++,ne=!0),_e[be].usedTimes++;const je=_e[F.__cacheKey];je!==void 0&&(_e[F.__cacheKey].usedTimes--,je.usedTimes===0&&G(L)),F.__cacheKey=be,F.__webglTexture=_e[be].texture}return ne}function tt(F,L,ne){let Ee=r.TEXTURE_2D;(L.isDataArrayTexture||L.isCompressedArrayTexture)&&(Ee=r.TEXTURE_2D_ARRAY),L.isData3DTexture&&(Ee=r.TEXTURE_3D);const _e=Ze(F,L),be=L.source;t.bindTexture(Ee,F.__webglTexture,r.TEXTURE0+ne);const je=n.get(be);if(be.version!==je.__version||_e===!0){t.activeTexture(r.TEXTURE0+ne);const Ce=Ft.getPrimaries(Ft.workingColorSpace),Ue=L.colorSpace===ii?null:Ft.getPrimaries(L.colorSpace),at=L.colorSpace===ii||Ce===Ue?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,L.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,L.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,L.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,at);const At=R(L)&&b(L.image)===!1;let Ae=M(L.image,At,!1,f);Ae=Ut(L,Ae);const Rt=b(Ae)||c,V=s.convert(L.format,L.colorSpace);let fe=s.convert(L.type),Me=z(L.internalFormat,V,fe,L.colorSpace,L.isVideoTexture);Ye(Ee,L,Rt);let Se;const et=L.mipmaps,W=c&&L.isVideoTexture!==!0,Ie=je.__version===void 0||_e===!0,Le=A(L,Ae,Rt);if(L.isDepthTexture)Me=r.DEPTH_COMPONENT,c?L.type===ki?Me=r.DEPTH_COMPONENT32F:L.type===hr?Me=r.DEPTH_COMPONENT24:L.type===Nr?Me=r.DEPTH24_STENCIL8:Me=r.DEPTH_COMPONENT16:L.type===ki&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),L.format===Ur&&Me===r.DEPTH_COMPONENT&&L.type!==nu&&L.type!==hr&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),L.type=hr,fe=s.convert(L.type)),L.format===ys&&Me===r.DEPTH_COMPONENT&&(Me=r.DEPTH_STENCIL,L.type!==Nr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),L.type=Nr,fe=s.convert(L.type))),Ie&&(W?t.texStorage2D(r.TEXTURE_2D,1,Me,Ae.width,Ae.height):t.texImage2D(r.TEXTURE_2D,0,Me,Ae.width,Ae.height,0,V,fe,null));else if(L.isDataTexture)if(et.length>0&&Rt){W&&Ie&&t.texStorage2D(r.TEXTURE_2D,Le,Me,et[0].width,et[0].height);for(let pe=0,Te=et.length;pe<Te;pe++)Se=et[pe],W?t.texSubImage2D(r.TEXTURE_2D,pe,0,0,Se.width,Se.height,V,fe,Se.data):t.texImage2D(r.TEXTURE_2D,pe,Me,Se.width,Se.height,0,V,fe,Se.data);L.generateMipmaps=!1}else W?(Ie&&t.texStorage2D(r.TEXTURE_2D,Le,Me,Ae.width,Ae.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,Ae.width,Ae.height,V,fe,Ae.data)):t.texImage2D(r.TEXTURE_2D,0,Me,Ae.width,Ae.height,0,V,fe,Ae.data);else if(L.isCompressedTexture)if(L.isCompressedArrayTexture){W&&Ie&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Le,Me,et[0].width,et[0].height,Ae.depth);for(let pe=0,Te=et.length;pe<Te;pe++)Se=et[pe],L.format!==Yn?V!==null?W?t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,pe,0,0,0,Se.width,Se.height,Ae.depth,V,Se.data,0,0):t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,pe,Me,Se.width,Se.height,Ae.depth,0,Se.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):W?t.texSubImage3D(r.TEXTURE_2D_ARRAY,pe,0,0,0,Se.width,Se.height,Ae.depth,V,fe,Se.data):t.texImage3D(r.TEXTURE_2D_ARRAY,pe,Me,Se.width,Se.height,Ae.depth,0,V,fe,Se.data)}else{W&&Ie&&t.texStorage2D(r.TEXTURE_2D,Le,Me,et[0].width,et[0].height);for(let pe=0,Te=et.length;pe<Te;pe++)Se=et[pe],L.format!==Yn?V!==null?W?t.compressedTexSubImage2D(r.TEXTURE_2D,pe,0,0,Se.width,Se.height,V,Se.data):t.compressedTexImage2D(r.TEXTURE_2D,pe,Me,Se.width,Se.height,0,Se.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):W?t.texSubImage2D(r.TEXTURE_2D,pe,0,0,Se.width,Se.height,V,fe,Se.data):t.texImage2D(r.TEXTURE_2D,pe,Me,Se.width,Se.height,0,V,fe,Se.data)}else if(L.isDataArrayTexture)W?(Ie&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Le,Me,Ae.width,Ae.height,Ae.depth),t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,Ae.width,Ae.height,Ae.depth,V,fe,Ae.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,Me,Ae.width,Ae.height,Ae.depth,0,V,fe,Ae.data);else if(L.isData3DTexture)W?(Ie&&t.texStorage3D(r.TEXTURE_3D,Le,Me,Ae.width,Ae.height,Ae.depth),t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,Ae.width,Ae.height,Ae.depth,V,fe,Ae.data)):t.texImage3D(r.TEXTURE_3D,0,Me,Ae.width,Ae.height,Ae.depth,0,V,fe,Ae.data);else if(L.isFramebufferTexture){if(Ie)if(W)t.texStorage2D(r.TEXTURE_2D,Le,Me,Ae.width,Ae.height);else{let pe=Ae.width,Te=Ae.height;for(let Qe=0;Qe<Le;Qe++)t.texImage2D(r.TEXTURE_2D,Qe,Me,pe,Te,0,V,fe,null),pe>>=1,Te>>=1}}else if(et.length>0&&Rt){W&&Ie&&t.texStorage2D(r.TEXTURE_2D,Le,Me,et[0].width,et[0].height);for(let pe=0,Te=et.length;pe<Te;pe++)Se=et[pe],W?t.texSubImage2D(r.TEXTURE_2D,pe,0,0,V,fe,Se):t.texImage2D(r.TEXTURE_2D,pe,Me,V,fe,Se);L.generateMipmaps=!1}else W?(Ie&&t.texStorage2D(r.TEXTURE_2D,Le,Me,Ae.width,Ae.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,V,fe,Ae)):t.texImage2D(r.TEXTURE_2D,0,Me,V,fe,Ae);P(L,Rt)&&I(Ee),je.__version=be.version,L.onUpdate&&L.onUpdate(L)}F.__version=L.version}function it(F,L,ne){if(L.image.length!==6)return;const Ee=Ze(F,L),_e=L.source;t.bindTexture(r.TEXTURE_CUBE_MAP,F.__webglTexture,r.TEXTURE0+ne);const be=n.get(_e);if(_e.version!==be.__version||Ee===!0){t.activeTexture(r.TEXTURE0+ne);const je=Ft.getPrimaries(Ft.workingColorSpace),Ce=L.colorSpace===ii?null:Ft.getPrimaries(L.colorSpace),Ue=L.colorSpace===ii||je===Ce?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,L.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,L.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,L.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ue);const at=L.isCompressedTexture||L.image[0].isCompressedTexture,At=L.image[0]&&L.image[0].isDataTexture,Ae=[];for(let pe=0;pe<6;pe++)!at&&!At?Ae[pe]=M(L.image[pe],!1,!0,h):Ae[pe]=At?L.image[pe].image:L.image[pe],Ae[pe]=Ut(L,Ae[pe]);const Rt=Ae[0],V=b(Rt)||c,fe=s.convert(L.format,L.colorSpace),Me=s.convert(L.type),Se=z(L.internalFormat,fe,Me,L.colorSpace),et=c&&L.isVideoTexture!==!0,W=be.__version===void 0||Ee===!0;let Ie=A(L,Rt,V);Ye(r.TEXTURE_CUBE_MAP,L,V);let Le;if(at){et&&W&&t.texStorage2D(r.TEXTURE_CUBE_MAP,Ie,Se,Rt.width,Rt.height);for(let pe=0;pe<6;pe++){Le=Ae[pe].mipmaps;for(let Te=0;Te<Le.length;Te++){const Qe=Le[Te];L.format!==Yn?fe!==null?et?t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,Te,0,0,Qe.width,Qe.height,fe,Qe.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,Te,Se,Qe.width,Qe.height,0,Qe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):et?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,Te,0,0,Qe.width,Qe.height,fe,Me,Qe.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,Te,Se,Qe.width,Qe.height,0,fe,Me,Qe.data)}}}else{Le=L.mipmaps,et&&W&&(Le.length>0&&Ie++,t.texStorage2D(r.TEXTURE_CUBE_MAP,Ie,Se,Ae[0].width,Ae[0].height));for(let pe=0;pe<6;pe++)if(At){et?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,0,0,0,Ae[pe].width,Ae[pe].height,fe,Me,Ae[pe].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,0,Se,Ae[pe].width,Ae[pe].height,0,fe,Me,Ae[pe].data);for(let Te=0;Te<Le.length;Te++){const xt=Le[Te].image[pe].image;et?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,Te+1,0,0,xt.width,xt.height,fe,Me,xt.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,Te+1,Se,xt.width,xt.height,0,fe,Me,xt.data)}}else{et?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,0,0,0,fe,Me,Ae[pe]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,0,Se,fe,Me,Ae[pe]);for(let Te=0;Te<Le.length;Te++){const Qe=Le[Te];et?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,Te+1,0,0,fe,Me,Qe.image[pe]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,Te+1,Se,fe,Me,Qe.image[pe])}}}P(L,V)&&I(r.TEXTURE_CUBE_MAP),be.__version=_e.version,L.onUpdate&&L.onUpdate(L)}F.__version=L.version}function Re(F,L,ne,Ee,_e,be){const je=s.convert(ne.format,ne.colorSpace),Ce=s.convert(ne.type),Ue=z(ne.internalFormat,je,Ce,ne.colorSpace);if(!n.get(L).__hasExternalTextures){const At=Math.max(1,L.width>>be),Ae=Math.max(1,L.height>>be);_e===r.TEXTURE_3D||_e===r.TEXTURE_2D_ARRAY?t.texImage3D(_e,be,Ue,At,Ae,L.depth,0,je,Ce,null):t.texImage2D(_e,be,Ue,At,Ae,0,je,Ce,null)}t.bindFramebuffer(r.FRAMEBUFFER,F),nt(L)?m.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,Ee,_e,n.get(ne).__webglTexture,0,ke(L)):(_e===r.TEXTURE_2D||_e>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&_e<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,Ee,_e,n.get(ne).__webglTexture,be),t.bindFramebuffer(r.FRAMEBUFFER,null)}function k(F,L,ne){if(r.bindRenderbuffer(r.RENDERBUFFER,F),L.depthBuffer&&!L.stencilBuffer){let Ee=c===!0?r.DEPTH_COMPONENT24:r.DEPTH_COMPONENT16;if(ne||nt(L)){const _e=L.depthTexture;_e&&_e.isDepthTexture&&(_e.type===ki?Ee=r.DEPTH_COMPONENT32F:_e.type===hr&&(Ee=r.DEPTH_COMPONENT24));const be=ke(L);nt(L)?m.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,be,Ee,L.width,L.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,be,Ee,L.width,L.height)}else r.renderbufferStorage(r.RENDERBUFFER,Ee,L.width,L.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,F)}else if(L.depthBuffer&&L.stencilBuffer){const Ee=ke(L);ne&&nt(L)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,Ee,r.DEPTH24_STENCIL8,L.width,L.height):nt(L)?m.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Ee,r.DEPTH24_STENCIL8,L.width,L.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,L.width,L.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,F)}else{const Ee=L.isWebGLMultipleRenderTargets===!0?L.texture:[L.texture];for(let _e=0;_e<Ee.length;_e++){const be=Ee[_e],je=s.convert(be.format,be.colorSpace),Ce=s.convert(be.type),Ue=z(be.internalFormat,je,Ce,be.colorSpace),at=ke(L);ne&&nt(L)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,at,Ue,L.width,L.height):nt(L)?m.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,at,Ue,L.width,L.height):r.renderbufferStorage(r.RENDERBUFFER,Ue,L.width,L.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function ye(F,L){if(L&&L.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,F),!(L.depthTexture&&L.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(L.depthTexture).__webglTexture||L.depthTexture.image.width!==L.width||L.depthTexture.image.height!==L.height)&&(L.depthTexture.image.width=L.width,L.depthTexture.image.height=L.height,L.depthTexture.needsUpdate=!0),X(L.depthTexture,0);const Ee=n.get(L.depthTexture).__webglTexture,_e=ke(L);if(L.depthTexture.format===Ur)nt(L)?m.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,Ee,0,_e):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,Ee,0);else if(L.depthTexture.format===ys)nt(L)?m.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,Ee,0,_e):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,Ee,0);else throw new Error("Unknown depthTexture format")}function de(F){const L=n.get(F),ne=F.isWebGLCubeRenderTarget===!0;if(F.depthTexture&&!L.__autoAllocateDepthBuffer){if(ne)throw new Error("target.depthTexture not supported in Cube render targets");ye(L.__webglFramebuffer,F)}else if(ne){L.__webglDepthbuffer=[];for(let Ee=0;Ee<6;Ee++)t.bindFramebuffer(r.FRAMEBUFFER,L.__webglFramebuffer[Ee]),L.__webglDepthbuffer[Ee]=r.createRenderbuffer(),k(L.__webglDepthbuffer[Ee],F,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,L.__webglFramebuffer),L.__webglDepthbuffer=r.createRenderbuffer(),k(L.__webglDepthbuffer,F,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function we(F,L,ne){const Ee=n.get(F);L!==void 0&&Re(Ee.__webglFramebuffer,F,F.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),ne!==void 0&&de(F)}function ve(F){const L=F.texture,ne=n.get(F),Ee=n.get(L);F.addEventListener("dispose",$),F.isWebGLMultipleRenderTargets!==!0&&(Ee.__webglTexture===void 0&&(Ee.__webglTexture=r.createTexture()),Ee.__version=L.version,l.memory.textures++);const _e=F.isWebGLCubeRenderTarget===!0,be=F.isWebGLMultipleRenderTargets===!0,je=b(F)||c;if(_e){ne.__webglFramebuffer=[];for(let Ce=0;Ce<6;Ce++)if(c&&L.mipmaps&&L.mipmaps.length>0){ne.__webglFramebuffer[Ce]=[];for(let Ue=0;Ue<L.mipmaps.length;Ue++)ne.__webglFramebuffer[Ce][Ue]=r.createFramebuffer()}else ne.__webglFramebuffer[Ce]=r.createFramebuffer()}else{if(c&&L.mipmaps&&L.mipmaps.length>0){ne.__webglFramebuffer=[];for(let Ce=0;Ce<L.mipmaps.length;Ce++)ne.__webglFramebuffer[Ce]=r.createFramebuffer()}else ne.__webglFramebuffer=r.createFramebuffer();if(be)if(i.drawBuffers){const Ce=F.texture;for(let Ue=0,at=Ce.length;Ue<at;Ue++){const At=n.get(Ce[Ue]);At.__webglTexture===void 0&&(At.__webglTexture=r.createTexture(),l.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(c&&F.samples>0&&nt(F)===!1){const Ce=be?L:[L];ne.__webglMultisampledFramebuffer=r.createFramebuffer(),ne.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,ne.__webglMultisampledFramebuffer);for(let Ue=0;Ue<Ce.length;Ue++){const at=Ce[Ue];ne.__webglColorRenderbuffer[Ue]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,ne.__webglColorRenderbuffer[Ue]);const At=s.convert(at.format,at.colorSpace),Ae=s.convert(at.type),Rt=z(at.internalFormat,At,Ae,at.colorSpace,F.isXRRenderTarget===!0),V=ke(F);r.renderbufferStorageMultisample(r.RENDERBUFFER,V,Rt,F.width,F.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ue,r.RENDERBUFFER,ne.__webglColorRenderbuffer[Ue])}r.bindRenderbuffer(r.RENDERBUFFER,null),F.depthBuffer&&(ne.__webglDepthRenderbuffer=r.createRenderbuffer(),k(ne.__webglDepthRenderbuffer,F,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(_e){t.bindTexture(r.TEXTURE_CUBE_MAP,Ee.__webglTexture),Ye(r.TEXTURE_CUBE_MAP,L,je);for(let Ce=0;Ce<6;Ce++)if(c&&L.mipmaps&&L.mipmaps.length>0)for(let Ue=0;Ue<L.mipmaps.length;Ue++)Re(ne.__webglFramebuffer[Ce][Ue],F,L,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Ce,Ue);else Re(ne.__webglFramebuffer[Ce],F,L,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Ce,0);P(L,je)&&I(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(be){const Ce=F.texture;for(let Ue=0,at=Ce.length;Ue<at;Ue++){const At=Ce[Ue],Ae=n.get(At);t.bindTexture(r.TEXTURE_2D,Ae.__webglTexture),Ye(r.TEXTURE_2D,At,je),Re(ne.__webglFramebuffer,F,At,r.COLOR_ATTACHMENT0+Ue,r.TEXTURE_2D,0),P(At,je)&&I(r.TEXTURE_2D)}t.unbindTexture()}else{let Ce=r.TEXTURE_2D;if((F.isWebGL3DRenderTarget||F.isWebGLArrayRenderTarget)&&(c?Ce=F.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Ce,Ee.__webglTexture),Ye(Ce,L,je),c&&L.mipmaps&&L.mipmaps.length>0)for(let Ue=0;Ue<L.mipmaps.length;Ue++)Re(ne.__webglFramebuffer[Ue],F,L,r.COLOR_ATTACHMENT0,Ce,Ue);else Re(ne.__webglFramebuffer,F,L,r.COLOR_ATTACHMENT0,Ce,0);P(L,je)&&I(Ce),t.unbindTexture()}F.depthBuffer&&de(F)}function Ge(F){const L=b(F)||c,ne=F.isWebGLMultipleRenderTargets===!0?F.texture:[F.texture];for(let Ee=0,_e=ne.length;Ee<_e;Ee++){const be=ne[Ee];if(P(be,L)){const je=F.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,Ce=n.get(be).__webglTexture;t.bindTexture(je,Ce),I(je),t.unbindTexture()}}}function Ne(F){if(c&&F.samples>0&&nt(F)===!1){const L=F.isWebGLMultipleRenderTargets?F.texture:[F.texture],ne=F.width,Ee=F.height;let _e=r.COLOR_BUFFER_BIT;const be=[],je=F.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Ce=n.get(F),Ue=F.isWebGLMultipleRenderTargets===!0;if(Ue)for(let at=0;at<L.length;at++)t.bindFramebuffer(r.FRAMEBUFFER,Ce.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+at,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,Ce.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+at,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,Ce.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Ce.__webglFramebuffer);for(let at=0;at<L.length;at++){be.push(r.COLOR_ATTACHMENT0+at),F.depthBuffer&&be.push(je);const At=Ce.__ignoreDepthValues!==void 0?Ce.__ignoreDepthValues:!1;if(At===!1&&(F.depthBuffer&&(_e|=r.DEPTH_BUFFER_BIT),F.stencilBuffer&&(_e|=r.STENCIL_BUFFER_BIT)),Ue&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,Ce.__webglColorRenderbuffer[at]),At===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[je]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[je])),Ue){const Ae=n.get(L[at]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,Ae,0)}r.blitFramebuffer(0,0,ne,Ee,0,0,ne,Ee,_e,r.NEAREST),v&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,be)}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),Ue)for(let at=0;at<L.length;at++){t.bindFramebuffer(r.FRAMEBUFFER,Ce.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+at,r.RENDERBUFFER,Ce.__webglColorRenderbuffer[at]);const At=n.get(L[at]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,Ce.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+at,r.TEXTURE_2D,At,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Ce.__webglMultisampledFramebuffer)}}function ke(F){return Math.min(p,F.samples)}function nt(F){const L=n.get(F);return c&&F.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&L.__useRenderToTexture!==!1}function gt(F){const L=l.render.frame;y.get(F)!==L&&(y.set(F,L),F.update())}function Ut(F,L){const ne=F.colorSpace,Ee=F.format,_e=F.type;return F.isCompressedTexture===!0||F.isVideoTexture===!0||F.format===Zc||ne!==Yi&&ne!==ii&&(Ft.getTransfer(ne)===Ht?c===!1?e.has("EXT_sRGB")===!0&&Ee===Yn?(F.format=Zc,F.minFilter=rn,F.generateMipmaps=!1):L=Pd.sRGBToLinear(L):(Ee!==Yn||_e!==Gi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",ne)),L}this.allocateTextureUnit=Q,this.resetTextureUnits=te,this.setTexture2D=X,this.setTexture2DArray=U,this.setTexture3D=Z,this.setTextureCube=ce,this.rebindTextures=we,this.setupRenderTarget=ve,this.updateRenderTargetMipmap=Ge,this.updateMultisampleRenderTarget=Ne,this.setupDepthRenderbuffer=de,this.setupFrameBufferTexture=Re,this.useMultisampledRTT=nt}function Kv(r,e,t){const n=t.isWebGL2;function i(s,l=ii){let c;const u=Ft.getTransfer(l);if(s===Gi)return r.UNSIGNED_BYTE;if(s===Sd)return r.UNSIGNED_SHORT_4_4_4_4;if(s===Md)return r.UNSIGNED_SHORT_5_5_5_1;if(s===mv)return r.BYTE;if(s===gv)return r.SHORT;if(s===nu)return r.UNSIGNED_SHORT;if(s===xd)return r.INT;if(s===hr)return r.UNSIGNED_INT;if(s===ki)return r.FLOAT;if(s===So)return n?r.HALF_FLOAT:(c=e.get("OES_texture_half_float"),c!==null?c.HALF_FLOAT_OES:null);if(s===vv)return r.ALPHA;if(s===Yn)return r.RGBA;if(s===_v)return r.LUMINANCE;if(s===yv)return r.LUMINANCE_ALPHA;if(s===Ur)return r.DEPTH_COMPONENT;if(s===ys)return r.DEPTH_STENCIL;if(s===Zc)return c=e.get("EXT_sRGB"),c!==null?c.SRGB_ALPHA_EXT:null;if(s===xv)return r.RED;if(s===wd)return r.RED_INTEGER;if(s===Sv)return r.RG;if(s===Ed)return r.RG_INTEGER;if(s===Td)return r.RGBA_INTEGER;if(s===Fc||s===zc||s===Bc||s===kc)if(u===Ht)if(c=e.get("WEBGL_compressed_texture_s3tc_srgb"),c!==null){if(s===Fc)return c.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===zc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Bc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===kc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(c=e.get("WEBGL_compressed_texture_s3tc"),c!==null){if(s===Fc)return c.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===zc)return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Bc)return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===kc)return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Lf||s===If||s===Df||s===Nf)if(c=e.get("WEBGL_compressed_texture_pvrtc"),c!==null){if(s===Lf)return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===If)return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Df)return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Nf)return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Mv)return c=e.get("WEBGL_compressed_texture_etc1"),c!==null?c.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===Uf||s===Of)if(c=e.get("WEBGL_compressed_texture_etc"),c!==null){if(s===Uf)return u===Ht?c.COMPRESSED_SRGB8_ETC2:c.COMPRESSED_RGB8_ETC2;if(s===Of)return u===Ht?c.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:c.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===Ff||s===zf||s===Bf||s===kf||s===Hf||s===Vf||s===Gf||s===Wf||s===Xf||s===Yf||s===qf||s===Zf||s===jf||s===Qf)if(c=e.get("WEBGL_compressed_texture_astc"),c!==null){if(s===Ff)return u===Ht?c.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:c.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===zf)return u===Ht?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:c.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===Bf)return u===Ht?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:c.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===kf)return u===Ht?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:c.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===Hf)return u===Ht?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:c.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===Vf)return u===Ht?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:c.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===Gf)return u===Ht?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:c.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Wf)return u===Ht?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:c.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===Xf)return u===Ht?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:c.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===Yf)return u===Ht?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:c.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===qf)return u===Ht?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:c.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===Zf)return u===Ht?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:c.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===jf)return u===Ht?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:c.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===Qf)return u===Ht?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:c.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Hc||s===Jf||s===Kf)if(c=e.get("EXT_texture_compression_bptc"),c!==null){if(s===Hc)return u===Ht?c.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:c.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(s===Jf)return c.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(s===Kf)return c.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(s===wv||s===$f||s===ed||s===td)if(c=e.get("EXT_texture_compression_rgtc"),c!==null){if(s===Hc)return c.COMPRESSED_RED_RGTC1_EXT;if(s===$f)return c.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===ed)return c.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===td)return c.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===Nr?n?r.UNSIGNED_INT_24_8:(c=e.get("WEBGL_depth_texture"),c!==null?c.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class $v extends qt{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class go extends bt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const cT={type:"move"};class nf{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new go,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new go,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new D,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new D),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new go,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new D,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new D),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,l=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){l=!0;for(const w of e.hand.values()){const x=t.getJointPose(w,n),_=this._getHandJoint(h,w);x!==null&&(_.matrix.fromArray(x.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=x.radius),_.visible=x!==null}const f=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=f.position.distanceTo(p.position),v=.02,y=.005;h.inputState.pinching&&m>v+y?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=v-y&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(cT)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=l!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new go;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class e_ extends sn{constructor(e,t,n,i,s,l,c,u,h,f){if(f=f!==void 0?f:Ur,f!==Ur&&f!==ys)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&f===Ur&&(n=hr),n===void 0&&f===ys&&(n=Nr),super(null,i,s,l,c,u,f,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:nn,this.minFilter=u!==void 0?u:nn,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class uT extends gr{constructor(e,t){super();const n=this;let i=null,s=1,l=null,c="local-floor",u=1,h=null,f=null,p=null,m=null,v=null,y=null;const w=t.getContextAttributes();let x=null,_=null;const E=[],M=[],b=new qt;b.layers.enable(1),b.viewport=new zt;const R=new qt;R.layers.enable(2),R.viewport=new zt;const P=[b,R],I=new $v;I.layers.enable(1),I.layers.enable(2);let z=null,A=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(U){let Z=E[U];return Z===void 0&&(Z=new nf,E[U]=Z),Z.getTargetRaySpace()},this.getControllerGrip=function(U){let Z=E[U];return Z===void 0&&(Z=new nf,E[U]=Z),Z.getGripSpace()},this.getHand=function(U){let Z=E[U];return Z===void 0&&(Z=new nf,E[U]=Z),Z.getHandSpace()};function C(U){const Z=M.indexOf(U.inputSource);if(Z===-1)return;const ce=E[Z];ce!==void 0&&(ce.update(U.inputSource,U.frame,h||l),ce.dispatchEvent({type:U.type,data:U.inputSource}))}function B(){i.removeEventListener("select",C),i.removeEventListener("selectstart",C),i.removeEventListener("selectend",C),i.removeEventListener("squeeze",C),i.removeEventListener("squeezestart",C),i.removeEventListener("squeezeend",C),i.removeEventListener("end",B),i.removeEventListener("inputsourceschange",$);for(let U=0;U<E.length;U++){const Z=M[U];Z!==null&&(M[U]=null,E[U].disconnect(Z))}z=null,A=null,e.setRenderTarget(x),v=null,m=null,p=null,i=null,_=null,X.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(U){s=U,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(U){c=U,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||l},this.setReferenceSpace=function(U){h=U},this.getBaseLayer=function(){return m!==null?m:v},this.getBinding=function(){return p},this.getFrame=function(){return y},this.getSession=function(){return i},this.setSession=async function(U){if(i=U,i!==null){if(x=e.getRenderTarget(),i.addEventListener("select",C),i.addEventListener("selectstart",C),i.addEventListener("selectend",C),i.addEventListener("squeeze",C),i.addEventListener("squeezestart",C),i.addEventListener("squeezeend",C),i.addEventListener("end",B),i.addEventListener("inputsourceschange",$),w.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const Z={antialias:i.renderState.layers===void 0?w.antialias:!0,alpha:!0,depth:w.depth,stencil:w.stencil,framebufferScaleFactor:s};v=new XRWebGLLayer(i,t,Z),i.updateRenderState({baseLayer:v}),_=new Ai(v.framebufferWidth,v.framebufferHeight,{format:Yn,type:Gi,colorSpace:e.outputColorSpace,stencilBuffer:w.stencil})}else{let Z=null,ce=null,H=null;w.depth&&(H=w.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Z=w.stencil?ys:Ur,ce=w.stencil?Nr:hr);const xe={colorFormat:t.RGBA8,depthFormat:H,scaleFactor:s};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(xe),i.updateRenderState({layers:[m]}),_=new Ai(m.textureWidth,m.textureHeight,{format:Yn,type:Gi,depthTexture:new e_(m.textureWidth,m.textureHeight,ce,void 0,void 0,void 0,void 0,void 0,void 0,Z),stencilBuffer:w.stencil,colorSpace:e.outputColorSpace,samples:w.antialias?4:0});const Fe=e.properties.get(_);Fe.__ignoreDepthValues=m.ignoreDepthValues}_.isXRRenderTarget=!0,this.setFoveation(u),h=null,l=await i.requestReferenceSpace(c),X.setContext(i),X.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function $(U){for(let Z=0;Z<U.removed.length;Z++){const ce=U.removed[Z],H=M.indexOf(ce);H>=0&&(M[H]=null,E[H].disconnect(ce))}for(let Z=0;Z<U.added.length;Z++){const ce=U.added[Z];let H=M.indexOf(ce);if(H===-1){for(let Fe=0;Fe<E.length;Fe++)if(Fe>=M.length){M.push(ce),H=Fe;break}else if(M[Fe]===null){M[Fe]=ce,H=Fe;break}if(H===-1)break}const xe=E[H];xe&&xe.connect(ce)}}const oe=new D,G=new D;function q(U,Z,ce){oe.setFromMatrixPosition(Z.matrixWorld),G.setFromMatrixPosition(ce.matrixWorld);const H=oe.distanceTo(G),xe=Z.projectionMatrix.elements,Fe=ce.projectionMatrix.elements,Ye=xe[14]/(xe[10]-1),Ze=xe[14]/(xe[10]+1),tt=(xe[9]+1)/xe[5],it=(xe[9]-1)/xe[5],Re=(xe[8]-1)/xe[0],k=(Fe[8]+1)/Fe[0],ye=Ye*Re,de=Ye*k,we=H/(-Re+k),ve=we*-Re;Z.matrixWorld.decompose(U.position,U.quaternion,U.scale),U.translateX(ve),U.translateZ(we),U.matrixWorld.compose(U.position,U.quaternion,U.scale),U.matrixWorldInverse.copy(U.matrixWorld).invert();const Ge=Ye+we,Ne=Ze+we,ke=ye-ve,nt=de+(H-ve),gt=tt*Ze/Ne*Ge,Ut=it*Ze/Ne*Ge;U.projectionMatrix.makePerspective(ke,nt,gt,Ut,Ge,Ne),U.projectionMatrixInverse.copy(U.projectionMatrix).invert()}function ie(U,Z){Z===null?U.matrixWorld.copy(U.matrix):U.matrixWorld.multiplyMatrices(Z.matrixWorld,U.matrix),U.matrixWorldInverse.copy(U.matrixWorld).invert()}this.updateCamera=function(U){if(i===null)return;I.near=R.near=b.near=U.near,I.far=R.far=b.far=U.far,(z!==I.near||A!==I.far)&&(i.updateRenderState({depthNear:I.near,depthFar:I.far}),z=I.near,A=I.far);const Z=U.parent,ce=I.cameras;ie(I,Z);for(let H=0;H<ce.length;H++)ie(ce[H],Z);ce.length===2?q(I,b,R):I.projectionMatrix.copy(b.projectionMatrix),te(U,I,Z)};function te(U,Z,ce){ce===null?U.matrix.copy(Z.matrixWorld):(U.matrix.copy(ce.matrixWorld),U.matrix.invert(),U.matrix.multiply(Z.matrixWorld)),U.matrix.decompose(U.position,U.quaternion,U.scale),U.updateMatrixWorld(!0),U.projectionMatrix.copy(Z.projectionMatrix),U.projectionMatrixInverse.copy(Z.projectionMatrixInverse),U.isPerspectiveCamera&&(U.fov=Mo*2*Math.atan(1/U.projectionMatrix.elements[5]),U.zoom=1)}this.getCamera=function(){return I},this.getFoveation=function(){if(!(m===null&&v===null))return u},this.setFoveation=function(U){u=U,m!==null&&(m.fixedFoveation=U),v!==null&&v.fixedFoveation!==void 0&&(v.fixedFoveation=U)};let Q=null;function j(U,Z){if(f=Z.getViewerPose(h||l),y=Z,f!==null){const ce=f.views;v!==null&&(e.setRenderTargetFramebuffer(_,v.framebuffer),e.setRenderTarget(_));let H=!1;ce.length!==I.cameras.length&&(I.cameras.length=0,H=!0);for(let xe=0;xe<ce.length;xe++){const Fe=ce[xe];let Ye=null;if(v!==null)Ye=v.getViewport(Fe);else{const tt=p.getViewSubImage(m,Fe);Ye=tt.viewport,xe===0&&(e.setRenderTargetTextures(_,tt.colorTexture,m.ignoreDepthValues?void 0:tt.depthStencilTexture),e.setRenderTarget(_))}let Ze=P[xe];Ze===void 0&&(Ze=new qt,Ze.layers.enable(xe),Ze.viewport=new zt,P[xe]=Ze),Ze.matrix.fromArray(Fe.transform.matrix),Ze.matrix.decompose(Ze.position,Ze.quaternion,Ze.scale),Ze.projectionMatrix.fromArray(Fe.projectionMatrix),Ze.projectionMatrixInverse.copy(Ze.projectionMatrix).invert(),Ze.viewport.set(Ye.x,Ye.y,Ye.width,Ye.height),xe===0&&(I.matrix.copy(Ze.matrix),I.matrix.decompose(I.position,I.quaternion,I.scale)),H===!0&&I.cameras.push(Ze)}}for(let ce=0;ce<E.length;ce++){const H=M[ce],xe=E[ce];H!==null&&xe!==void 0&&xe.update(H,Z,h||l)}Q&&Q(U,Z),Z.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:Z}),y=null}const X=new qv;X.setAnimationLoop(j),this.setAnimationLoop=function(U){Q=U},this.dispose=function(){}}}function hT(r,e){function t(x,_){x.matrixAutoUpdate===!0&&x.updateMatrix(),_.value.copy(x.matrix)}function n(x,_){_.color.getRGB(x.fogColor.value,Gv(r)),_.isFog?(x.fogNear.value=_.near,x.fogFar.value=_.far):_.isFogExp2&&(x.fogDensity.value=_.density)}function i(x,_,E,M,b){_.isMeshBasicMaterial||_.isMeshLambertMaterial?s(x,_):_.isMeshToonMaterial?(s(x,_),p(x,_)):_.isMeshPhongMaterial?(s(x,_),f(x,_)):_.isMeshStandardMaterial?(s(x,_),m(x,_),_.isMeshPhysicalMaterial&&v(x,_,b)):_.isMeshMatcapMaterial?(s(x,_),y(x,_)):_.isMeshDepthMaterial?s(x,_):_.isMeshDistanceMaterial?(s(x,_),w(x,_)):_.isMeshNormalMaterial?s(x,_):_.isLineBasicMaterial?(l(x,_),_.isLineDashedMaterial&&c(x,_)):_.isPointsMaterial?u(x,_,E,M):_.isSpriteMaterial?h(x,_):_.isShadowMaterial?(x.color.value.copy(_.color),x.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function s(x,_){x.opacity.value=_.opacity,_.color&&x.diffuse.value.copy(_.color),_.emissive&&x.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(x.map.value=_.map,t(_.map,x.mapTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.bumpMap&&(x.bumpMap.value=_.bumpMap,t(_.bumpMap,x.bumpMapTransform),x.bumpScale.value=_.bumpScale,_.side===Bn&&(x.bumpScale.value*=-1)),_.normalMap&&(x.normalMap.value=_.normalMap,t(_.normalMap,x.normalMapTransform),x.normalScale.value.copy(_.normalScale),_.side===Bn&&x.normalScale.value.negate()),_.displacementMap&&(x.displacementMap.value=_.displacementMap,t(_.displacementMap,x.displacementMapTransform),x.displacementScale.value=_.displacementScale,x.displacementBias.value=_.displacementBias),_.emissiveMap&&(x.emissiveMap.value=_.emissiveMap,t(_.emissiveMap,x.emissiveMapTransform)),_.specularMap&&(x.specularMap.value=_.specularMap,t(_.specularMap,x.specularMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest);const E=e.get(_).envMap;if(E&&(x.envMap.value=E,x.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=_.reflectivity,x.ior.value=_.ior,x.refractionRatio.value=_.refractionRatio),_.lightMap){x.lightMap.value=_.lightMap;const M=r._useLegacyLights===!0?Math.PI:1;x.lightMapIntensity.value=_.lightMapIntensity*M,t(_.lightMap,x.lightMapTransform)}_.aoMap&&(x.aoMap.value=_.aoMap,x.aoMapIntensity.value=_.aoMapIntensity,t(_.aoMap,x.aoMapTransform))}function l(x,_){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,_.map&&(x.map.value=_.map,t(_.map,x.mapTransform))}function c(x,_){x.dashSize.value=_.dashSize,x.totalSize.value=_.dashSize+_.gapSize,x.scale.value=_.scale}function u(x,_,E,M){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,x.size.value=_.size*E,x.scale.value=M*.5,_.map&&(x.map.value=_.map,t(_.map,x.uvTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest)}function h(x,_){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,x.rotation.value=_.rotation,_.map&&(x.map.value=_.map,t(_.map,x.mapTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest)}function f(x,_){x.specular.value.copy(_.specular),x.shininess.value=Math.max(_.shininess,1e-4)}function p(x,_){_.gradientMap&&(x.gradientMap.value=_.gradientMap)}function m(x,_){x.metalness.value=_.metalness,_.metalnessMap&&(x.metalnessMap.value=_.metalnessMap,t(_.metalnessMap,x.metalnessMapTransform)),x.roughness.value=_.roughness,_.roughnessMap&&(x.roughnessMap.value=_.roughnessMap,t(_.roughnessMap,x.roughnessMapTransform)),e.get(_).envMap&&(x.envMapIntensity.value=_.envMapIntensity)}function v(x,_,E){x.ior.value=_.ior,_.sheen>0&&(x.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),x.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(x.sheenColorMap.value=_.sheenColorMap,t(_.sheenColorMap,x.sheenColorMapTransform)),_.sheenRoughnessMap&&(x.sheenRoughnessMap.value=_.sheenRoughnessMap,t(_.sheenRoughnessMap,x.sheenRoughnessMapTransform))),_.clearcoat>0&&(x.clearcoat.value=_.clearcoat,x.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(x.clearcoatMap.value=_.clearcoatMap,t(_.clearcoatMap,x.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,t(_.clearcoatRoughnessMap,x.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(x.clearcoatNormalMap.value=_.clearcoatNormalMap,t(_.clearcoatNormalMap,x.clearcoatNormalMapTransform),x.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===Bn&&x.clearcoatNormalScale.value.negate())),_.iridescence>0&&(x.iridescence.value=_.iridescence,x.iridescenceIOR.value=_.iridescenceIOR,x.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(x.iridescenceMap.value=_.iridescenceMap,t(_.iridescenceMap,x.iridescenceMapTransform)),_.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=_.iridescenceThicknessMap,t(_.iridescenceThicknessMap,x.iridescenceThicknessMapTransform))),_.transmission>0&&(x.transmission.value=_.transmission,x.transmissionSamplerMap.value=E.texture,x.transmissionSamplerSize.value.set(E.width,E.height),_.transmissionMap&&(x.transmissionMap.value=_.transmissionMap,t(_.transmissionMap,x.transmissionMapTransform)),x.thickness.value=_.thickness,_.thicknessMap&&(x.thicknessMap.value=_.thicknessMap,t(_.thicknessMap,x.thicknessMapTransform)),x.attenuationDistance.value=_.attenuationDistance,x.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(x.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(x.anisotropyMap.value=_.anisotropyMap,t(_.anisotropyMap,x.anisotropyMapTransform))),x.specularIntensity.value=_.specularIntensity,x.specularColor.value.copy(_.specularColor),_.specularColorMap&&(x.specularColorMap.value=_.specularColorMap,t(_.specularColorMap,x.specularColorMapTransform)),_.specularIntensityMap&&(x.specularIntensityMap.value=_.specularIntensityMap,t(_.specularIntensityMap,x.specularIntensityMapTransform))}function y(x,_){_.matcap&&(x.matcap.value=_.matcap)}function w(x,_){const E=e.get(_).light;x.referencePosition.value.setFromMatrixPosition(E.matrixWorld),x.nearDistance.value=E.shadow.camera.near,x.farDistance.value=E.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function fT(r,e,t,n){let i={},s={},l=[];const c=t.isWebGL2?r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS):0;function u(E,M){const b=M.program;n.uniformBlockBinding(E,b)}function h(E,M){let b=i[E.id];b===void 0&&(y(E),b=f(E),i[E.id]=b,E.addEventListener("dispose",x));const R=M.program;n.updateUBOMapping(E,R);const P=e.render.frame;s[E.id]!==P&&(m(E),s[E.id]=P)}function f(E){const M=p();E.__bindingPointIndex=M;const b=r.createBuffer(),R=E.__size,P=E.usage;return r.bindBuffer(r.UNIFORM_BUFFER,b),r.bufferData(r.UNIFORM_BUFFER,R,P),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,M,b),b}function p(){for(let E=0;E<c;E++)if(l.indexOf(E)===-1)return l.push(E),E;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(E){const M=i[E.id],b=E.uniforms,R=E.__cache;r.bindBuffer(r.UNIFORM_BUFFER,M);for(let P=0,I=b.length;P<I;P++){const z=b[P];if(v(z,P,R)===!0){const A=z.__offset,C=Array.isArray(z.value)?z.value:[z.value];let B=0;for(let $=0;$<C.length;$++){const oe=C[$],G=w(oe);typeof oe=="number"?(z.__data[0]=oe,r.bufferSubData(r.UNIFORM_BUFFER,A+B,z.__data)):oe.isMatrix3?(z.__data[0]=oe.elements[0],z.__data[1]=oe.elements[1],z.__data[2]=oe.elements[2],z.__data[3]=oe.elements[0],z.__data[4]=oe.elements[3],z.__data[5]=oe.elements[4],z.__data[6]=oe.elements[5],z.__data[7]=oe.elements[0],z.__data[8]=oe.elements[6],z.__data[9]=oe.elements[7],z.__data[10]=oe.elements[8],z.__data[11]=oe.elements[0]):(oe.toArray(z.__data,B),B+=G.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,A,z.__data)}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function v(E,M,b){const R=E.value;if(b[M]===void 0){if(typeof R=="number")b[M]=R;else{const P=Array.isArray(R)?R:[R],I=[];for(let z=0;z<P.length;z++)I.push(P[z].clone());b[M]=I}return!0}else if(typeof R=="number"){if(b[M]!==R)return b[M]=R,!0}else{const P=Array.isArray(b[M])?b[M]:[b[M]],I=Array.isArray(R)?R:[R];for(let z=0;z<P.length;z++){const A=P[z];if(A.equals(I[z])===!1)return A.copy(I[z]),!0}}return!1}function y(E){const M=E.uniforms;let b=0;const R=16;let P=0;for(let I=0,z=M.length;I<z;I++){const A=M[I],C={boundary:0,storage:0},B=Array.isArray(A.value)?A.value:[A.value];for(let $=0,oe=B.length;$<oe;$++){const G=B[$],q=w(G);C.boundary+=q.boundary,C.storage+=q.storage}if(A.__data=new Float32Array(C.storage/Float32Array.BYTES_PER_ELEMENT),A.__offset=b,I>0){P=b%R;const $=R-P;P!==0&&$-C.boundary<0&&(b+=R-P,A.__offset=b)}b+=C.storage}return P=b%R,P>0&&(b+=R-P),E.__size=b,E.__cache={},this}function w(E){const M={boundary:0,storage:0};return typeof E=="number"?(M.boundary=4,M.storage=4):E.isVector2?(M.boundary=8,M.storage=8):E.isVector3||E.isColor?(M.boundary=16,M.storage=12):E.isVector4?(M.boundary=16,M.storage=16):E.isMatrix3?(M.boundary=48,M.storage=48):E.isMatrix4?(M.boundary=64,M.storage=64):E.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",E),M}function x(E){const M=E.target;M.removeEventListener("dispose",x);const b=l.indexOf(M.__bindingPointIndex);l.splice(b,1),r.deleteBuffer(i[M.id]),delete i[M.id],delete s[M.id]}function _(){for(const E in i)r.deleteBuffer(i[E]);l=[],i={},s={}}return{bind:u,update:h,dispose:_}}class Od{constructor(e={}){const{canvas:t=kv(),context:n=null,depth:i=!0,stencil:s=!0,alpha:l=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:f="default",failIfMajorPerformanceCaveat:p=!1}=e;this.isWebGLRenderer=!0;let m;n!==null?m=n.getContextAttributes().alpha:m=l;const v=new Uint32Array(4),y=new Int32Array(4);let w=null,x=null;const _=[],E=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=hn,this._useLegacyLights=!1,this.toneMapping=Vi,this.toneMappingExposure=1;const M=this;let b=!1,R=0,P=0,I=null,z=-1,A=null;const C=new zt,B=new zt;let $=null;const oe=new Be(0);let G=0,q=t.width,ie=t.height,te=1,Q=null,j=null;const X=new zt(0,0,q,ie),U=new zt(0,0,q,ie);let Z=!1;const ce=new ou;let H=!1,xe=!1,Fe=null;const Ye=new dt,Ze=new me,tt=new D,it={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Re(){return I===null?te:1}let k=n;function ye(N,K){for(let re=0;re<N.length;re++){const ae=N[re],le=t.getContext(ae,K);if(le!==null)return le}return null}try{const N={alpha:!0,depth:i,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:f,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${$c}`),t.addEventListener("webglcontextlost",et,!1),t.addEventListener("webglcontextrestored",W,!1),t.addEventListener("webglcontextcreationerror",Ie,!1),k===null){const K=["webgl2","webgl","experimental-webgl"];if(M.isWebGL1Renderer===!0&&K.shift(),k=ye(K,N),k===null)throw ye(K)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&k instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),k.getShaderPrecisionFormat===void 0&&(k.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(N){throw console.error("THREE.WebGLRenderer: "+N.message),N}let de,we,ve,Ge,Ne,ke,nt,gt,Ut,F,L,ne,Ee,_e,be,je,Ce,Ue,at,At,Ae,Rt,V,fe;function Me(){de=new AE(k),we=new SE(k,de,e),de.init(we),Rt=new Kv(k,de,we),ve=new aT(k,de,we),Ge=new CE(k),Ne=new j1,ke=new lT(k,de,ve,Ne,we,Rt,Ge),nt=new wE(M),gt=new bE(M),Ut=new kS(k,we),V=new yE(k,de,Ut,we),F=new RE(k,Ut,Ge,V),L=new NE(k,F,Ut,Ge),at=new DE(k,we,ke),je=new ME(Ne),ne=new Z1(M,nt,gt,de,we,V,je),Ee=new hT(M,Ne),_e=new J1,be=new iT(de,we),Ue=new _E(M,nt,gt,ve,L,m,u),Ce=new oT(M,L,we),fe=new fT(k,Ge,we,ve),At=new xE(k,de,Ge,we),Ae=new PE(k,de,Ge,we),Ge.programs=ne.programs,M.capabilities=we,M.extensions=de,M.properties=Ne,M.renderLists=_e,M.shadowMap=Ce,M.state=ve,M.info=Ge}Me();const Se=new uT(M,k);this.xr=Se,this.getContext=function(){return k},this.getContextAttributes=function(){return k.getContextAttributes()},this.forceContextLoss=function(){const N=de.get("WEBGL_lose_context");N&&N.loseContext()},this.forceContextRestore=function(){const N=de.get("WEBGL_lose_context");N&&N.restoreContext()},this.getPixelRatio=function(){return te},this.setPixelRatio=function(N){N!==void 0&&(te=N,this.setSize(q,ie,!1))},this.getSize=function(N){return N.set(q,ie)},this.setSize=function(N,K,re=!0){if(Se.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}q=N,ie=K,t.width=Math.floor(N*te),t.height=Math.floor(K*te),re===!0&&(t.style.width=N+"px",t.style.height=K+"px"),this.setViewport(0,0,N,K)},this.getDrawingBufferSize=function(N){return N.set(q*te,ie*te).floor()},this.setDrawingBufferSize=function(N,K,re){q=N,ie=K,te=re,t.width=Math.floor(N*re),t.height=Math.floor(K*re),this.setViewport(0,0,N,K)},this.getCurrentViewport=function(N){return N.copy(C)},this.getViewport=function(N){return N.copy(X)},this.setViewport=function(N,K,re,ae){N.isVector4?X.set(N.x,N.y,N.z,N.w):X.set(N,K,re,ae),ve.viewport(C.copy(X).multiplyScalar(te).floor())},this.getScissor=function(N){return N.copy(U)},this.setScissor=function(N,K,re,ae){N.isVector4?U.set(N.x,N.y,N.z,N.w):U.set(N,K,re,ae),ve.scissor(B.copy(U).multiplyScalar(te).floor())},this.getScissorTest=function(){return Z},this.setScissorTest=function(N){ve.setScissorTest(Z=N)},this.setOpaqueSort=function(N){Q=N},this.setTransparentSort=function(N){j=N},this.getClearColor=function(N){return N.copy(Ue.getClearColor())},this.setClearColor=function(){Ue.setClearColor.apply(Ue,arguments)},this.getClearAlpha=function(){return Ue.getClearAlpha()},this.setClearAlpha=function(){Ue.setClearAlpha.apply(Ue,arguments)},this.clear=function(N=!0,K=!0,re=!0){let ae=0;if(N){let le=!1;if(I!==null){const He=I.texture.format;le=He===Td||He===Ed||He===wd}if(le){const He=I.texture.type,Ke=He===Gi||He===hr||He===nu||He===Nr||He===Sd||He===Md,ot=Ue.getClearColor(),lt=Ue.getClearAlpha(),ht=ot.r,ut=ot.g,ft=ot.b;Ke?(v[0]=ht,v[1]=ut,v[2]=ft,v[3]=lt,k.clearBufferuiv(k.COLOR,0,v)):(y[0]=ht,y[1]=ut,y[2]=ft,y[3]=lt,k.clearBufferiv(k.COLOR,0,y))}else ae|=k.COLOR_BUFFER_BIT}K&&(ae|=k.DEPTH_BUFFER_BIT),re&&(ae|=k.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),k.clear(ae)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",et,!1),t.removeEventListener("webglcontextrestored",W,!1),t.removeEventListener("webglcontextcreationerror",Ie,!1),_e.dispose(),be.dispose(),Ne.dispose(),nt.dispose(),gt.dispose(),L.dispose(),V.dispose(),fe.dispose(),ne.dispose(),Se.dispose(),Se.removeEventListener("sessionstart",$t),Se.removeEventListener("sessionend",Pt),Fe&&(Fe.dispose(),Fe=null),Sn.stop()};function et(N){N.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),b=!0}function W(){console.log("THREE.WebGLRenderer: Context Restored."),b=!1;const N=Ge.autoReset,K=Ce.enabled,re=Ce.autoUpdate,ae=Ce.needsUpdate,le=Ce.type;Me(),Ge.autoReset=N,Ce.enabled=K,Ce.autoUpdate=re,Ce.needsUpdate=ae,Ce.type=le}function Ie(N){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",N.statusMessage)}function Le(N){const K=N.target;K.removeEventListener("dispose",Le),pe(K)}function pe(N){Te(N),Ne.remove(N)}function Te(N){const K=Ne.get(N).programs;K!==void 0&&(K.forEach(function(re){ne.releaseProgram(re)}),N.isShaderMaterial&&ne.releaseShaderCache(N))}this.renderBufferDirect=function(N,K,re,ae,le,He){K===null&&(K=it);const Ke=le.isMesh&&le.matrixWorld.determinant()<0,ot=Au(N,K,re,ae,le);ve.setMaterial(ae,Ke);let lt=re.index,ht=1;if(ae.wireframe===!0){if(lt=F.getWireframeAttribute(re),lt===void 0)return;ht=2}const ut=re.drawRange,ft=re.attributes.position;let Xt=ut.start*ht,Mn=(ut.start+ut.count)*ht;He!==null&&(Xt=Math.max(Xt,He.start*ht),Mn=Math.min(Mn,(He.start+He.count)*ht)),lt!==null?(Xt=Math.max(Xt,0),Mn=Math.min(Mn,lt.count)):ft!=null&&(Xt=Math.max(Xt,0),Mn=Math.min(Mn,ft.count));const Vt=Mn-Xt;if(Vt<0||Vt===1/0)return;V.setup(le,ae,ot,re,lt);let pn,ct=At;if(lt!==null&&(pn=Ut.get(lt),ct=Ae,ct.setIndex(pn)),le.isMesh)ae.wireframe===!0?(ve.setLineWidth(ae.wireframeLinewidth*Re()),ct.setMode(k.LINES)):ct.setMode(k.TRIANGLES);else if(le.isLine){let qe=ae.linewidth;qe===void 0&&(qe=1),ve.setLineWidth(qe*Re()),le.isLineSegments?ct.setMode(k.LINES):le.isLineLoop?ct.setMode(k.LINE_LOOP):ct.setMode(k.LINE_STRIP)}else le.isPoints?ct.setMode(k.POINTS):le.isSprite&&ct.setMode(k.TRIANGLES);if(le.isInstancedMesh)ct.renderInstances(Xt,Vt,le.count);else if(re.isInstancedBufferGeometry){const qe=re._maxInstanceCount!==void 0?re._maxInstanceCount:1/0,oi=Math.min(re.instanceCount,qe);ct.renderInstances(Xt,Vt,oi)}else ct.render(Xt,Vt)};function Qe(N,K,re){N.transparent===!0&&N.side===ni&&N.forceSinglePass===!1?(N.side=Bn,N.needsUpdate=!0,Rs(N,K,re),N.side=dr,N.needsUpdate=!0,Rs(N,K,re),N.side=ni):Rs(N,K,re)}this.compile=function(N,K,re=null){re===null&&(re=N),x=be.get(re),x.init(),E.push(x),re.traverseVisible(function(le){le.isLight&&le.layers.test(K.layers)&&(x.pushLight(le),le.castShadow&&x.pushShadow(le))}),N!==re&&N.traverseVisible(function(le){le.isLight&&le.layers.test(K.layers)&&(x.pushLight(le),le.castShadow&&x.pushShadow(le))}),x.setupLights(M._useLegacyLights);const ae=new Set;return N.traverse(function(le){const He=le.material;if(He)if(Array.isArray(He))for(let Ke=0;Ke<He.length;Ke++){const ot=He[Ke];Qe(ot,re,le),ae.add(ot)}else Qe(He,re,le),ae.add(He)}),E.pop(),x=null,ae},this.compileAsync=function(N,K,re=null){const ae=this.compile(N,K,re);return new Promise(le=>{function He(){if(ae.forEach(function(Ke){Ne.get(Ke).currentProgram.isReady()&&ae.delete(Ke)}),ae.size===0){le(N);return}setTimeout(He,10)}de.get("KHR_parallel_shader_compile")!==null?He():setTimeout(He,10)})};let xt=null;function Ot(N){xt&&xt(N)}function $t(){Sn.stop()}function Pt(){Sn.start()}const Sn=new qv;Sn.setAnimationLoop(Ot),typeof self<"u"&&Sn.setContext(self),this.setAnimationLoop=function(N){xt=N,Se.setAnimationLoop(N),N===null?Sn.stop():Sn.start()},Se.addEventListener("sessionstart",$t),Se.addEventListener("sessionend",Pt),this.render=function(N,K){if(K!==void 0&&K.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(b===!0)return;N.matrixWorldAutoUpdate===!0&&N.updateMatrixWorld(),K.parent===null&&K.matrixWorldAutoUpdate===!0&&K.updateMatrixWorld(),Se.enabled===!0&&Se.isPresenting===!0&&(Se.cameraAutoUpdate===!0&&Se.updateCamera(K),K=Se.getCamera()),N.isScene===!0&&N.onBeforeRender(M,N,K,I),x=be.get(N,E.length),x.init(),E.push(x),Ye.multiplyMatrices(K.projectionMatrix,K.matrixWorldInverse),ce.setFromProjectionMatrix(Ye),xe=this.localClippingEnabled,H=je.init(this.clippingPlanes,xe),w=_e.get(N,_.length),w.init(),_.push(w),si(N,K,0,M.sortObjects),w.finish(),M.sortObjects===!0&&w.sort(Q,j),this.info.render.frame++,H===!0&&je.beginShadows();const re=x.state.shadowsArray;if(Ce.render(re,N,K),H===!0&&je.endShadows(),this.info.autoReset===!0&&this.info.reset(),Ue.render(w,N),x.setupLights(M._useLegacyLights),K.isArrayCamera){const ae=K.cameras;for(let le=0,He=ae.length;le<He;le++){const Ke=ae[le];Io(w,N,Ke,Ke.viewport)}}else Io(w,N,K);I!==null&&(ke.updateMultisampleRenderTarget(I),ke.updateRenderTargetMipmap(I)),N.isScene===!0&&N.onAfterRender(M,N,K),V.resetDefaultState(),z=-1,A=null,E.pop(),E.length>0?x=E[E.length-1]:x=null,_.pop(),_.length>0?w=_[_.length-1]:w=null};function si(N,K,re,ae){if(N.visible===!1)return;if(N.layers.test(K.layers)){if(N.isGroup)re=N.renderOrder;else if(N.isLOD)N.autoUpdate===!0&&N.update(K);else if(N.isLight)x.pushLight(N),N.castShadow&&x.pushShadow(N);else if(N.isSprite){if(!N.frustumCulled||ce.intersectsSprite(N)){ae&&tt.setFromMatrixPosition(N.matrixWorld).applyMatrix4(Ye);const Ke=L.update(N),ot=N.material;ot.visible&&w.push(N,Ke,ot,re,tt.z,null)}}else if((N.isMesh||N.isLine||N.isPoints)&&(!N.frustumCulled||ce.intersectsObject(N))){const Ke=L.update(N),ot=N.material;if(ae&&(N.boundingSphere!==void 0?(N.boundingSphere===null&&N.computeBoundingSphere(),tt.copy(N.boundingSphere.center)):(Ke.boundingSphere===null&&Ke.computeBoundingSphere(),tt.copy(Ke.boundingSphere.center)),tt.applyMatrix4(N.matrixWorld).applyMatrix4(Ye)),Array.isArray(ot)){const lt=Ke.groups;for(let ht=0,ut=lt.length;ht<ut;ht++){const ft=lt[ht],Xt=ot[ft.materialIndex];Xt&&Xt.visible&&w.push(N,Ke,Xt,re,tt.z,ft)}}else ot.visible&&w.push(N,Ke,ot,re,tt.z,null)}}const He=N.children;for(let Ke=0,ot=He.length;Ke<ot;Ke++)si(He[Ke],K,re,ae)}function Io(N,K,re,ae){const le=N.opaque,He=N.transmissive,Ke=N.transparent;x.setupLightsView(re),H===!0&&je.setGlobalState(M.clippingPlanes,re),He.length>0&&Do(le,He,K,re),ae&&ve.viewport(C.copy(ae)),le.length>0&&As(le,K,re),He.length>0&&As(He,K,re),Ke.length>0&&As(Ke,K,re),ve.buffers.depth.setTest(!0),ve.buffers.depth.setMask(!0),ve.buffers.color.setMask(!0),ve.setPolygonOffset(!1)}function Do(N,K,re,ae){if((re.isScene===!0?re.overrideMaterial:null)!==null)return;const He=we.isWebGL2;Fe===null&&(Fe=new Ai(1,1,{generateMipmaps:!0,type:de.has("EXT_color_buffer_half_float")?So:Gi,minFilter:zr,samples:He?4:0})),M.getDrawingBufferSize(Ze),He?Fe.setSize(Ze.x,Ze.y):Fe.setSize(jc(Ze.x),jc(Ze.y));const Ke=M.getRenderTarget();M.setRenderTarget(Fe),M.getClearColor(oe),G=M.getClearAlpha(),G<1&&M.setClearColor(16777215,.5),M.clear();const ot=M.toneMapping;M.toneMapping=Vi,As(N,re,ae),ke.updateMultisampleRenderTarget(Fe),ke.updateRenderTargetMipmap(Fe);let lt=!1;for(let ht=0,ut=K.length;ht<ut;ht++){const ft=K[ht],Xt=ft.object,Mn=ft.geometry,Vt=ft.material,pn=ft.group;if(Vt.side===ni&&Xt.layers.test(ae.layers)){const ct=Vt.side;Vt.side=Bn,Vt.needsUpdate=!0,vr(Xt,re,ae,Mn,Vt,pn),Vt.side=ct,Vt.needsUpdate=!0,lt=!0}}lt===!0&&(ke.updateMultisampleRenderTarget(Fe),ke.updateRenderTargetMipmap(Fe)),M.setRenderTarget(Ke),M.setClearColor(oe,G),M.toneMapping=ot}function As(N,K,re){const ae=K.isScene===!0?K.overrideMaterial:null;for(let le=0,He=N.length;le<He;le++){const Ke=N[le],ot=Ke.object,lt=Ke.geometry,ht=ae===null?Ke.material:ae,ut=Ke.group;ot.layers.test(re.layers)&&vr(ot,K,re,lt,ht,ut)}}function vr(N,K,re,ae,le,He){N.onBeforeRender(M,K,re,ae,le,He),N.modelViewMatrix.multiplyMatrices(re.matrixWorldInverse,N.matrixWorld),N.normalMatrix.getNormalMatrix(N.modelViewMatrix),le.onBeforeRender(M,K,re,ae,N,He),le.transparent===!0&&le.side===ni&&le.forceSinglePass===!1?(le.side=Bn,le.needsUpdate=!0,M.renderBufferDirect(re,K,ae,le,N,He),le.side=dr,le.needsUpdate=!0,M.renderBufferDirect(re,K,ae,le,N,He),le.side=ni):M.renderBufferDirect(re,K,ae,le,N,He),N.onAfterRender(M,K,re,ae,le,He)}function Rs(N,K,re){K.isScene!==!0&&(K=it);const ae=Ne.get(N),le=x.state.lights,He=x.state.shadowsArray,Ke=le.state.version,ot=ne.getParameters(N,le.state,He,K,re),lt=ne.getProgramCacheKey(ot);let ht=ae.programs;ae.environment=N.isMeshStandardMaterial?K.environment:null,ae.fog=K.fog,ae.envMap=(N.isMeshStandardMaterial?gt:nt).get(N.envMap||ae.environment),ht===void 0&&(N.addEventListener("dispose",Le),ht=new Map,ae.programs=ht);let ut=ht.get(lt);if(ut!==void 0){if(ae.currentProgram===ut&&ae.lightsStateVersion===Ke)return Qa(N,ot),ut}else ot.uniforms=ne.getUniforms(N),N.onBuild(re,ot,M),N.onBeforeCompile(ot,M),ut=ne.acquireProgram(ot,lt),ht.set(lt,ut),ae.uniforms=ot.uniforms;const ft=ae.uniforms;return(!N.isShaderMaterial&&!N.isRawShaderMaterial||N.clipping===!0)&&(ft.clippingPlanes=je.uniform),Qa(N,ot),ae.needsLights=Pu(N),ae.lightsStateVersion=Ke,ae.needsLights&&(ft.ambientLightColor.value=le.state.ambient,ft.lightProbe.value=le.state.probe,ft.directionalLights.value=le.state.directional,ft.directionalLightShadows.value=le.state.directionalShadow,ft.spotLights.value=le.state.spot,ft.spotLightShadows.value=le.state.spotShadow,ft.rectAreaLights.value=le.state.rectArea,ft.ltc_1.value=le.state.rectAreaLTC1,ft.ltc_2.value=le.state.rectAreaLTC2,ft.pointLights.value=le.state.point,ft.pointLightShadows.value=le.state.pointShadow,ft.hemisphereLights.value=le.state.hemi,ft.directionalShadowMap.value=le.state.directionalShadowMap,ft.directionalShadowMatrix.value=le.state.directionalShadowMatrix,ft.spotShadowMap.value=le.state.spotShadowMap,ft.spotLightMatrix.value=le.state.spotLightMatrix,ft.spotLightMap.value=le.state.spotLightMap,ft.pointShadowMap.value=le.state.pointShadowMap,ft.pointShadowMatrix.value=le.state.pointShadowMatrix),ae.currentProgram=ut,ae.uniformsList=null,ut}function ja(N){if(N.uniformsList===null){const K=N.currentProgram.getUniforms();N.uniformsList=Gc.seqWithValue(K.seq,N.uniforms)}return N.uniformsList}function Qa(N,K){const re=Ne.get(N);re.outputColorSpace=K.outputColorSpace,re.instancing=K.instancing,re.instancingColor=K.instancingColor,re.skinning=K.skinning,re.morphTargets=K.morphTargets,re.morphNormals=K.morphNormals,re.morphColors=K.morphColors,re.morphTargetsCount=K.morphTargetsCount,re.numClippingPlanes=K.numClippingPlanes,re.numIntersection=K.numClipIntersection,re.vertexAlphas=K.vertexAlphas,re.vertexTangents=K.vertexTangents,re.toneMapping=K.toneMapping}function Au(N,K,re,ae,le){K.isScene!==!0&&(K=it),ke.resetTextureUnits();const He=K.fog,Ke=ae.isMeshStandardMaterial?K.environment:null,ot=I===null?M.outputColorSpace:I.isXRRenderTarget===!0?I.texture.colorSpace:Yi,lt=(ae.isMeshStandardMaterial?gt:nt).get(ae.envMap||Ke),ht=ae.vertexColors===!0&&!!re.attributes.color&&re.attributes.color.itemSize===4,ut=!!re.attributes.tangent&&(!!ae.normalMap||ae.anisotropy>0),ft=!!re.morphAttributes.position,Xt=!!re.morphAttributes.normal,Mn=!!re.morphAttributes.color;let Vt=Vi;ae.toneMapped&&(I===null||I.isXRRenderTarget===!0)&&(Vt=M.toneMapping);const pn=re.morphAttributes.position||re.morphAttributes.normal||re.morphAttributes.color,ct=pn!==void 0?pn.length:0,qe=Ne.get(ae),oi=x.state.lights;if(H===!0&&(xe===!0||N!==A)){const gn=N===A&&ae.id===z;je.setState(ae,N,gn)}let Tt=!1;ae.version===qe.__version?(qe.needsLights&&qe.lightsStateVersion!==oi.state.version||qe.outputColorSpace!==ot||le.isInstancedMesh&&qe.instancing===!1||!le.isInstancedMesh&&qe.instancing===!0||le.isSkinnedMesh&&qe.skinning===!1||!le.isSkinnedMesh&&qe.skinning===!0||le.isInstancedMesh&&qe.instancingColor===!0&&le.instanceColor===null||le.isInstancedMesh&&qe.instancingColor===!1&&le.instanceColor!==null||qe.envMap!==lt||ae.fog===!0&&qe.fog!==He||qe.numClippingPlanes!==void 0&&(qe.numClippingPlanes!==je.numPlanes||qe.numIntersection!==je.numIntersection)||qe.vertexAlphas!==ht||qe.vertexTangents!==ut||qe.morphTargets!==ft||qe.morphNormals!==Xt||qe.morphColors!==Mn||qe.toneMapping!==Vt||we.isWebGL2===!0&&qe.morphTargetsCount!==ct)&&(Tt=!0):(Tt=!0,qe.__version=ae.version);let jt=qe.currentProgram;Tt===!0&&(jt=Rs(ae,K,le));let Li=!1,ai=!1,mn=!1;const on=jt.getUniforms(),Ii=qe.uniforms;if(ve.useProgram(jt.program)&&(Li=!0,ai=!0,mn=!0),ae.id!==z&&(z=ae.id,ai=!0),Li||A!==N){on.setValue(k,"projectionMatrix",N.projectionMatrix),on.setValue(k,"viewMatrix",N.matrixWorldInverse);const gn=on.map.cameraPosition;gn!==void 0&&gn.setValue(k,tt.setFromMatrixPosition(N.matrixWorld)),we.logarithmicDepthBuffer&&on.setValue(k,"logDepthBufFC",2/(Math.log(N.far+1)/Math.LN2)),(ae.isMeshPhongMaterial||ae.isMeshToonMaterial||ae.isMeshLambertMaterial||ae.isMeshBasicMaterial||ae.isMeshStandardMaterial||ae.isShaderMaterial)&&on.setValue(k,"isOrthographic",N.isOrthographicCamera===!0),A!==N&&(A=N,ai=!0,mn=!0)}if(le.isSkinnedMesh){on.setOptional(k,le,"bindMatrix"),on.setOptional(k,le,"bindMatrixInverse");const gn=le.skeleton;gn&&(we.floatVertexTextures?(gn.boneTexture===null&&gn.computeBoneTexture(),on.setValue(k,"boneTexture",gn.boneTexture,ke),on.setValue(k,"boneTextureSize",gn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Ps=re.morphAttributes;if((Ps.position!==void 0||Ps.normal!==void 0||Ps.color!==void 0&&we.isWebGL2===!0)&&at.update(le,re,jt),(ai||qe.receiveShadow!==le.receiveShadow)&&(qe.receiveShadow=le.receiveShadow,on.setValue(k,"receiveShadow",le.receiveShadow)),ae.isMeshGouraudMaterial&&ae.envMap!==null&&(Ii.envMap.value=lt,Ii.flipEnvMap.value=lt.isCubeTexture&&lt.isRenderTargetTexture===!1?-1:1),ai&&(on.setValue(k,"toneMappingExposure",M.toneMappingExposure),qe.needsLights&&Ru(Ii,mn),He&&ae.fog===!0&&Ee.refreshFogUniforms(Ii,He),Ee.refreshMaterialUniforms(Ii,ae,te,ie,Fe),Gc.upload(k,ja(qe),Ii,ke)),ae.isShaderMaterial&&ae.uniformsNeedUpdate===!0&&(Gc.upload(k,ja(qe),Ii,ke),ae.uniformsNeedUpdate=!1),ae.isSpriteMaterial&&on.setValue(k,"center",le.center),on.setValue(k,"modelViewMatrix",le.modelViewMatrix),on.setValue(k,"normalMatrix",le.normalMatrix),on.setValue(k,"modelMatrix",le.matrixWorld),ae.isShaderMaterial||ae.isRawShaderMaterial){const gn=ae.uniformsGroups;for(let Cs=0,jn=gn.length;Cs<jn;Cs++)if(we.isWebGL2){const Ja=gn[Cs];fe.update(Ja,jt),fe.bind(Ja,jt)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return jt}function Ru(N,K){N.ambientLightColor.needsUpdate=K,N.lightProbe.needsUpdate=K,N.directionalLights.needsUpdate=K,N.directionalLightShadows.needsUpdate=K,N.pointLights.needsUpdate=K,N.pointLightShadows.needsUpdate=K,N.spotLights.needsUpdate=K,N.spotLightShadows.needsUpdate=K,N.rectAreaLights.needsUpdate=K,N.hemisphereLights.needsUpdate=K}function Pu(N){return N.isMeshLambertMaterial||N.isMeshToonMaterial||N.isMeshPhongMaterial||N.isMeshStandardMaterial||N.isShadowMaterial||N.isShaderMaterial&&N.lights===!0}this.getActiveCubeFace=function(){return R},this.getActiveMipmapLevel=function(){return P},this.getRenderTarget=function(){return I},this.setRenderTargetTextures=function(N,K,re){Ne.get(N.texture).__webglTexture=K,Ne.get(N.depthTexture).__webglTexture=re;const ae=Ne.get(N);ae.__hasExternalTextures=!0,ae.__hasExternalTextures&&(ae.__autoAllocateDepthBuffer=re===void 0,ae.__autoAllocateDepthBuffer||de.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),ae.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(N,K){const re=Ne.get(N);re.__webglFramebuffer=K,re.__useDefaultFramebuffer=K===void 0},this.setRenderTarget=function(N,K=0,re=0){I=N,R=K,P=re;let ae=!0,le=null,He=!1,Ke=!1;if(N){const lt=Ne.get(N);lt.__useDefaultFramebuffer!==void 0?(ve.bindFramebuffer(k.FRAMEBUFFER,null),ae=!1):lt.__webglFramebuffer===void 0?ke.setupRenderTarget(N):lt.__hasExternalTextures&&ke.rebindTextures(N,Ne.get(N.texture).__webglTexture,Ne.get(N.depthTexture).__webglTexture);const ht=N.texture;(ht.isData3DTexture||ht.isDataArrayTexture||ht.isCompressedArrayTexture)&&(Ke=!0);const ut=Ne.get(N).__webglFramebuffer;N.isWebGLCubeRenderTarget?(Array.isArray(ut[K])?le=ut[K][re]:le=ut[K],He=!0):we.isWebGL2&&N.samples>0&&ke.useMultisampledRTT(N)===!1?le=Ne.get(N).__webglMultisampledFramebuffer:Array.isArray(ut)?le=ut[re]:le=ut,C.copy(N.viewport),B.copy(N.scissor),$=N.scissorTest}else C.copy(X).multiplyScalar(te).floor(),B.copy(U).multiplyScalar(te).floor(),$=Z;if(ve.bindFramebuffer(k.FRAMEBUFFER,le)&&we.drawBuffers&&ae&&ve.drawBuffers(N,le),ve.viewport(C),ve.scissor(B),ve.setScissorTest($),He){const lt=Ne.get(N.texture);k.framebufferTexture2D(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,k.TEXTURE_CUBE_MAP_POSITIVE_X+K,lt.__webglTexture,re)}else if(Ke){const lt=Ne.get(N.texture),ht=K||0;k.framebufferTextureLayer(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,lt.__webglTexture,re||0,ht)}z=-1},this.readRenderTargetPixels=function(N,K,re,ae,le,He,Ke){if(!(N&&N.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let ot=Ne.get(N).__webglFramebuffer;if(N.isWebGLCubeRenderTarget&&Ke!==void 0&&(ot=ot[Ke]),ot){ve.bindFramebuffer(k.FRAMEBUFFER,ot);try{const lt=N.texture,ht=lt.format,ut=lt.type;if(ht!==Yn&&Rt.convert(ht)!==k.getParameter(k.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const ft=ut===So&&(de.has("EXT_color_buffer_half_float")||we.isWebGL2&&de.has("EXT_color_buffer_float"));if(ut!==Gi&&Rt.convert(ut)!==k.getParameter(k.IMPLEMENTATION_COLOR_READ_TYPE)&&!(ut===ki&&(we.isWebGL2||de.has("OES_texture_float")||de.has("WEBGL_color_buffer_float")))&&!ft){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}K>=0&&K<=N.width-ae&&re>=0&&re<=N.height-le&&k.readPixels(K,re,ae,le,Rt.convert(ht),Rt.convert(ut),He)}finally{const lt=I!==null?Ne.get(I).__webglFramebuffer:null;ve.bindFramebuffer(k.FRAMEBUFFER,lt)}}},this.copyFramebufferToTexture=function(N,K,re=0){const ae=Math.pow(2,-re),le=Math.floor(K.image.width*ae),He=Math.floor(K.image.height*ae);ke.setTexture2D(K,0),k.copyTexSubImage2D(k.TEXTURE_2D,re,0,0,N.x,N.y,le,He),ve.unbindTexture()},this.copyTextureToTexture=function(N,K,re,ae=0){const le=K.image.width,He=K.image.height,Ke=Rt.convert(re.format),ot=Rt.convert(re.type);ke.setTexture2D(re,0),k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,re.flipY),k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,re.premultiplyAlpha),k.pixelStorei(k.UNPACK_ALIGNMENT,re.unpackAlignment),K.isDataTexture?k.texSubImage2D(k.TEXTURE_2D,ae,N.x,N.y,le,He,Ke,ot,K.image.data):K.isCompressedTexture?k.compressedTexSubImage2D(k.TEXTURE_2D,ae,N.x,N.y,K.mipmaps[0].width,K.mipmaps[0].height,Ke,K.mipmaps[0].data):k.texSubImage2D(k.TEXTURE_2D,ae,N.x,N.y,Ke,ot,K.image),ae===0&&re.generateMipmaps&&k.generateMipmap(k.TEXTURE_2D),ve.unbindTexture()},this.copyTextureToTexture3D=function(N,K,re,ae,le=0){if(M.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const He=N.max.x-N.min.x+1,Ke=N.max.y-N.min.y+1,ot=N.max.z-N.min.z+1,lt=Rt.convert(ae.format),ht=Rt.convert(ae.type);let ut;if(ae.isData3DTexture)ke.setTexture3D(ae,0),ut=k.TEXTURE_3D;else if(ae.isDataArrayTexture)ke.setTexture2DArray(ae,0),ut=k.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,ae.flipY),k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ae.premultiplyAlpha),k.pixelStorei(k.UNPACK_ALIGNMENT,ae.unpackAlignment);const ft=k.getParameter(k.UNPACK_ROW_LENGTH),Xt=k.getParameter(k.UNPACK_IMAGE_HEIGHT),Mn=k.getParameter(k.UNPACK_SKIP_PIXELS),Vt=k.getParameter(k.UNPACK_SKIP_ROWS),pn=k.getParameter(k.UNPACK_SKIP_IMAGES),ct=re.isCompressedTexture?re.mipmaps[0]:re.image;k.pixelStorei(k.UNPACK_ROW_LENGTH,ct.width),k.pixelStorei(k.UNPACK_IMAGE_HEIGHT,ct.height),k.pixelStorei(k.UNPACK_SKIP_PIXELS,N.min.x),k.pixelStorei(k.UNPACK_SKIP_ROWS,N.min.y),k.pixelStorei(k.UNPACK_SKIP_IMAGES,N.min.z),re.isDataTexture||re.isData3DTexture?k.texSubImage3D(ut,le,K.x,K.y,K.z,He,Ke,ot,lt,ht,ct.data):re.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),k.compressedTexSubImage3D(ut,le,K.x,K.y,K.z,He,Ke,ot,lt,ct.data)):k.texSubImage3D(ut,le,K.x,K.y,K.z,He,Ke,ot,lt,ht,ct),k.pixelStorei(k.UNPACK_ROW_LENGTH,ft),k.pixelStorei(k.UNPACK_IMAGE_HEIGHT,Xt),k.pixelStorei(k.UNPACK_SKIP_PIXELS,Mn),k.pixelStorei(k.UNPACK_SKIP_ROWS,Vt),k.pixelStorei(k.UNPACK_SKIP_IMAGES,pn),le===0&&ae.generateMipmaps&&k.generateMipmap(ut),ve.unbindTexture()},this.initTexture=function(N){N.isCubeTexture?ke.setTextureCube(N,0):N.isData3DTexture?ke.setTexture3D(N,0):N.isDataArrayTexture||N.isCompressedArrayTexture?ke.setTexture2DArray(N,0):ke.setTexture2D(N,0),ve.unbindTexture()},this.resetState=function(){R=0,P=0,I=null,ve.reset(),V.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Hi}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===ru?"display-p3":"srgb",t.unpackColorSpace=Ft.workingColorSpace===Va?"display-p3":"srgb"}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===hn?Or:Ad}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===Or?hn:Yi}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class t_ extends Od{}t_.prototype.isWebGL1Renderer=!0;class lu{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Be(e),this.density=t}clone(){return new lu(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class cu{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Be(e),this.near=t,this.far=n}clone(){return new cu(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Fd extends bt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}}class uu{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Ca,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=ri()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ri()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ri()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Fn=new D;class xs{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Fn.fromBufferAttribute(this,t),Fn.applyMatrix4(e),this.setXYZ(t,Fn.x,Fn.y,Fn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Fn.fromBufferAttribute(this,t),Fn.applyNormalMatrix(e),this.setXYZ(t,Fn.x,Fn.y,Fn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Fn.fromBufferAttribute(this,t),Fn.transformDirection(e),this.setXYZ(t,Fn.x,Fn.y,Fn.z);return this}setX(e,t){return this.normalized&&(t=yt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=yt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=yt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=yt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=qn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=qn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=qn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=qn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=yt(t,this.array),n=yt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=yt(t,this.array),n=yt(n,this.array),i=yt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=yt(t,this.array),n=yt(n,this.array),i=yt(i,this.array),s=yt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new kt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new xs(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class zd extends Dn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Be(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let ro;const ia=new D,so=new D,oo=new D,ao=new me,ra=new me,n_=new dt,fc=new D,sa=new D,dc=new D,bg=new me,rf=new me,Ag=new me;class i_ extends bt{constructor(e=new zd){if(super(),this.isSprite=!0,this.type="Sprite",ro===void 0){ro=new vt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new uu(t,5);ro.setIndex([0,1,2,0,2,3]),ro.setAttribute("position",new xs(n,3,0,!1)),ro.setAttribute("uv",new xs(n,2,3,!1))}this.geometry=ro,this.material=e,this.center=new me(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),so.setFromMatrixScale(this.matrixWorld),n_.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),oo.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&so.multiplyScalar(-oo.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const l=this.center;pc(fc.set(-.5,-.5,0),oo,l,so,i,s),pc(sa.set(.5,-.5,0),oo,l,so,i,s),pc(dc.set(.5,.5,0),oo,l,so,i,s),bg.set(0,0),rf.set(1,0),Ag.set(1,1);let c=e.ray.intersectTriangle(fc,sa,dc,!1,ia);if(c===null&&(pc(sa.set(-.5,.5,0),oo,l,so,i,s),rf.set(0,1),c=e.ray.intersectTriangle(fc,dc,sa,!1,ia),c===null))return;const u=e.ray.origin.distanceTo(ia);u<e.near||u>e.far||t.push({distance:u,point:ia.clone(),uv:Xn.getInterpolation(ia,fc,sa,dc,bg,rf,Ag,new me),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function pc(r,e,t,n,i,s){ao.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(ra.x=s*ao.x-i*ao.y,ra.y=i*ao.x+s*ao.y):ra.copy(ao),r.copy(e),r.x+=ra.x,r.y+=ra.y,r.applyMatrix4(n_)}const mc=new D,Rg=new D;class r_ extends bt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){mc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(mc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){mc.setFromMatrixPosition(e.matrixWorld),Rg.setFromMatrixPosition(this.matrixWorld);const n=mc.distanceTo(Rg)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let l=t[i].distance;if(t[i].object.visible&&(l-=l*t[i].hysteresis),n>=l)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const l=n[i];t.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return t}}const Pg=new D,Cg=new zt,Lg=new zt,dT=new D,Ig=new dt,gc=new D,sf=new Ri,Dg=new dt,of=new ws;class s_ extends Ve{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Cf,this.bindMatrix=new dt,this.bindMatrixInverse=new dt,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Zi),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,gc),this.boundingBox.expandByPoint(gc)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Ri),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,gc),this.boundingSphere.expandByPoint(gc)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),sf.copy(this.boundingSphere),sf.applyMatrix4(i),e.ray.intersectsSphere(sf)!==!1&&(Dg.copy(i).invert(),of.copy(e.ray).applyMatrix4(Dg),!(this.boundingBox!==null&&of.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,of)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new zt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Cf?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===pv?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;Cg.fromBufferAttribute(i.attributes.skinIndex,e),Lg.fromBufferAttribute(i.attributes.skinWeight,e),Pg.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const l=Lg.getComponent(s);if(l!==0){const c=Cg.getComponent(s);Ig.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(dT.copy(Pg).applyMatrix4(Ig),l)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(e,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(e,t)}}class Bd extends bt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class xo extends sn{constructor(e=null,t=1,n=1,i,s,l,c,u,h=nn,f=nn,p,m){super(null,l,c,u,h,f,i,s,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Ng=new dt,pT=new dt;class hu{constructor(e=[],t=[]){this.uuid=ri(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new dt)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new dt;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,l=e.length;s<l;s++){const c=e[s]?e[s].matrixWorld:pT;Ng.multiplyMatrices(c,t[s]),Ng.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new hu(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=zv(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new xo(t,e,e,Yn,ki);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let l=t[s];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),l=new Bd),this.bones.push(l),this.boneInverses.push(new dt().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const l=t[i];e.bones.push(l.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class Eo extends kt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const lo=new dt,Ug=new dt,vc=[],Og=new Zi,mT=new dt,oa=new Ve,aa=new Ri;class o_ extends Ve{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Eo(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,mT)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Zi),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,lo),Og.copy(e.boundingBox).applyMatrix4(lo),this.boundingBox.union(Og)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Ri),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,lo),aa.copy(e.boundingSphere).applyMatrix4(lo),this.boundingSphere.union(aa)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(oa.geometry=this.geometry,oa.material=this.material,oa.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),aa.copy(this.boundingSphere),aa.applyMatrix4(n),e.ray.intersectsSphere(aa)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,lo),Ug.multiplyMatrices(n,lo),oa.matrixWorld=Ug,oa.raycast(e,vc);for(let l=0,c=vc.length;l<c;l++){const u=vc[l];u.instanceId=s,u.object=this,t.push(u)}vc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Eo(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class Nn extends Dn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Be(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Fg=new D,zg=new D,Bg=new dt,af=new ws,_c=new Ri;class Et extends bt{constructor(e=new vt,t=new Nn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)Fg.fromBufferAttribute(t,i-1),zg.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Fg.distanceTo(zg);e.setAttribute("lineDistance",new Xe(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),_c.copy(n.boundingSphere),_c.applyMatrix4(i),_c.radius+=s,e.ray.intersectsSphere(_c)===!1)return;Bg.copy(i).invert(),af.copy(e.ray).applyMatrix4(Bg);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=new D,f=new D,p=new D,m=new D,v=this.isLineSegments?2:1,y=n.index,x=n.attributes.position;if(y!==null){const _=Math.max(0,l.start),E=Math.min(y.count,l.start+l.count);for(let M=_,b=E-1;M<b;M+=v){const R=y.getX(M),P=y.getX(M+1);if(h.fromBufferAttribute(x,R),f.fromBufferAttribute(x,P),af.distanceSqToSegment(h,f,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const z=e.ray.origin.distanceTo(m);z<e.near||z>e.far||t.push({distance:z,point:p.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}else{const _=Math.max(0,l.start),E=Math.min(x.count,l.start+l.count);for(let M=_,b=E-1;M<b;M+=v){if(h.fromBufferAttribute(x,M),f.fromBufferAttribute(x,M+1),af.distanceSqToSegment(h,f,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const P=e.ray.origin.distanceTo(m);P<e.near||P>e.far||t.push({distance:P,point:p.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}const kg=new D,Hg=new D;class Qi extends Et{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)kg.fromBufferAttribute(t,i),Hg.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+kg.distanceTo(Hg);e.setAttribute("lineDistance",new Xe(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class a_ extends Et{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class kd extends Dn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Be(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Vg=new dt,ad=new ws,yc=new Ri,xc=new D;class l_ extends bt{constructor(e=new vt,t=new kd){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),yc.copy(n.boundingSphere),yc.applyMatrix4(i),yc.radius+=s,e.ray.intersectsSphere(yc)===!1)return;Vg.copy(i).invert(),ad.copy(e.ray).applyMatrix4(Vg);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,l.start),v=Math.min(h.count,l.start+l.count);for(let y=m,w=v;y<w;y++){const x=h.getX(y);xc.fromBufferAttribute(p,x),Gg(xc,x,u,i,e,t,this)}}else{const m=Math.max(0,l.start),v=Math.min(p.count,l.start+l.count);for(let y=m,w=v;y<w;y++)xc.fromBufferAttribute(p,y),Gg(xc,y,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function Gg(r,e,t,n,i,s,l){const c=ad.distanceSqToPoint(r);if(c<t){const u=new D;ad.closestPointToPoint(r,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,object:l})}}class gT extends sn{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isVideoTexture=!0,this.minFilter=l!==void 0?l:rn,this.magFilter=s!==void 0?s:rn,this.generateMipmaps=!1;const f=this;function p(){f.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class vT extends sn{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=nn,this.minFilter=nn,this.generateMipmaps=!1,this.needsUpdate=!0}}class fu extends sn{constructor(e,t,n,i,s,l,c,u,h,f,p,m){super(null,l,c,u,h,f,i,s,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class _T extends fu{constructor(e,t,n,i,s,l){super(e,t,n,s,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=In}}class yT extends fu{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,pr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class xT extends sn{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Pi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let l=1;l<=e;l++)n=this.getPoint(l/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let l;t?l=t:l=e*n[s-1];let c=0,u=s-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-l,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===l)return i/(s-1);const f=n[i],m=n[i+1]-f,v=(l-f)/m;return(i+v)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const l=this.getPoint(i),c=this.getPoint(s),u=t||(l.isVector2?new me:new D);return u.copy(c).sub(l).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new D,i=[],s=[],l=[],c=new D,u=new dt;for(let v=0;v<=e;v++){const y=v/e;i[v]=this.getTangentAt(y,new D)}s[0]=new D,l[0]=new D;let h=Number.MAX_VALUE;const f=Math.abs(i[0].x),p=Math.abs(i[0].y),m=Math.abs(i[0].z);f<=h&&(h=f,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],c),l[0].crossVectors(i[0],s[0]);for(let v=1;v<=e;v++){if(s[v]=s[v-1].clone(),l[v]=l[v-1].clone(),c.crossVectors(i[v-1],i[v]),c.length()>Number.EPSILON){c.normalize();const y=Math.acos(Kt(i[v-1].dot(i[v]),-1,1));s[v].applyMatrix4(u.makeRotationAxis(c,y))}l[v].crossVectors(i[v],s[v])}if(t===!0){let v=Math.acos(Kt(s[0].dot(s[e]),-1,1));v/=e,i[0].dot(c.crossVectors(s[0],s[e]))>0&&(v=-v);for(let y=1;y<=e;y++)s[y].applyMatrix4(u.makeRotationAxis(i[y],v*y)),l[y].crossVectors(i[y],s[y])}return{tangents:i,normals:s,binormals:l}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class du extends Pi{constructor(e=0,t=0,n=1,i=1,s=0,l=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=l,this.aClockwise=c,this.aRotation=u}getPoint(e,t){const n=t||new me,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const l=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(l?s=0:s=i),this.aClockwise===!0&&!l&&(s===i?s=-i:s=s-i);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const f=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=u-this.aX,v=h-this.aY;u=m*f-v*p+this.aX,h=m*p+v*f+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class c_ extends du{constructor(e,t,n,i,s,l){super(e,t,n,n,i,s,l),this.isArcCurve=!0,this.type="ArcCurve"}}function Hd(){let r=0,e=0,t=0,n=0;function i(s,l,c,u){r=s,e=c,t=-3*s+3*l-2*c-u,n=2*s-2*l+c+u}return{initCatmullRom:function(s,l,c,u,h){i(l,c,h*(c-s),h*(u-l))},initNonuniformCatmullRom:function(s,l,c,u,h,f,p){let m=(l-s)/h-(c-s)/(h+f)+(c-l)/f,v=(c-l)/f-(u-l)/(f+p)+(u-c)/p;m*=f,v*=f,i(l,c,m,v)},calc:function(s){const l=s*s,c=l*s;return r+e*s+t*l+n*c}}}const Sc=new D,lf=new Hd,cf=new Hd,uf=new Hd;class u_ extends Pi{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new D){const n=t,i=this.points,s=i.length,l=(s-(this.closed?0:1))*e;let c=Math.floor(l),u=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,f;this.closed||c>0?h=i[(c-1)%s]:(Sc.subVectors(i[0],i[1]).add(i[0]),h=Sc);const p=i[c%s],m=i[(c+1)%s];if(this.closed||c+2<s?f=i[(c+2)%s]:(Sc.subVectors(i[s-1],i[s-2]).add(i[s-1]),f=Sc),this.curveType==="centripetal"||this.curveType==="chordal"){const v=this.curveType==="chordal"?.5:.25;let y=Math.pow(h.distanceToSquared(p),v),w=Math.pow(p.distanceToSquared(m),v),x=Math.pow(m.distanceToSquared(f),v);w<1e-4&&(w=1),y<1e-4&&(y=w),x<1e-4&&(x=w),lf.initNonuniformCatmullRom(h.x,p.x,m.x,f.x,y,w,x),cf.initNonuniformCatmullRom(h.y,p.y,m.y,f.y,y,w,x),uf.initNonuniformCatmullRom(h.z,p.z,m.z,f.z,y,w,x)}else this.curveType==="catmullrom"&&(lf.initCatmullRom(h.x,p.x,m.x,f.x,this.tension),cf.initCatmullRom(h.y,p.y,m.y,f.y,this.tension),uf.initCatmullRom(h.z,p.z,m.z,f.z,this.tension));return n.set(lf.calc(u),cf.calc(u),uf.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new D().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Wg(r,e,t,n,i){const s=(n-e)*.5,l=(i-t)*.5,c=r*r,u=r*c;return(2*t-2*n+s+l)*u+(-3*t+3*n-2*s-l)*c+s*r+t}function ST(r,e){const t=1-r;return t*t*e}function MT(r,e){return 2*(1-r)*r*e}function wT(r,e){return r*r*e}function va(r,e,t,n){return ST(r,e)+MT(r,t)+wT(r,n)}function ET(r,e){const t=1-r;return t*t*t*e}function TT(r,e){const t=1-r;return 3*t*t*r*e}function bT(r,e){return 3*(1-r)*r*r*e}function AT(r,e){return r*r*r*e}function _a(r,e,t,n,i){return ET(r,e)+TT(r,t)+bT(r,n)+AT(r,i)}class Vd extends Pi{constructor(e=new me,t=new me,n=new me,i=new me){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new me){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(_a(e,i.x,s.x,l.x,c.x),_a(e,i.y,s.y,l.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class h_ extends Pi{constructor(e=new D,t=new D,n=new D,i=new D){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(_a(e,i.x,s.x,l.x,c.x),_a(e,i.y,s.y,l.y,c.y),_a(e,i.z,s.z,l.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Gd extends Pi{constructor(e=new me,t=new me){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new me){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new me){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class f_ extends Pi{constructor(e=new D,t=new D){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new D){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new D){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Wd extends Pi{constructor(e=new me,t=new me,n=new me){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new me){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(va(e,i.x,s.x,l.x),va(e,i.y,s.y,l.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Xd extends Pi{constructor(e=new D,t=new D,n=new D){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(va(e,i.x,s.x,l.x),va(e,i.y,s.y,l.y),va(e,i.z,s.z,l.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Yd extends Pi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new me){const n=t,i=this.points,s=(i.length-1)*e,l=Math.floor(s),c=s-l,u=i[l===0?l:l-1],h=i[l],f=i[l>i.length-2?i.length-1:l+1],p=i[l>i.length-3?i.length-1:l+2];return n.set(Wg(c,u.x,h.x,f.x,p.x),Wg(c,u.y,h.y,f.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new me().fromArray(i))}return this}}var Qc=Object.freeze({__proto__:null,ArcCurve:c_,CatmullRomCurve3:u_,CubicBezierCurve:Vd,CubicBezierCurve3:h_,EllipseCurve:du,LineCurve:Gd,LineCurve3:f_,QuadraticBezierCurve:Wd,QuadraticBezierCurve3:Xd,SplineCurve:Yd});class d_ extends Pi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Qc[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const l=i[s]-n,c=this.curves[s],u=c.getLength(),h=u===0?0:1-l/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const l=s[i],c=l.isEllipseCurve?e*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?e*l.points.length:e,u=l.getPoints(c);for(let h=0;h<u.length;h++){const f=u[h];n&&n.equals(f)||(t.push(f),n=f)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Qc[i.type]().fromJSON(i))}return this}}class Da extends d_{constructor(e){super(),this.type="Path",this.currentPoint=new me,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Gd(this.currentPoint.clone(),new me(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new Wd(this.currentPoint.clone(),new me(e,t),new me(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,l){const c=new Vd(this.currentPoint.clone(),new me(e,t),new me(n,i),new me(s,l));return this.curves.push(c),this.currentPoint.set(s,l),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Yd(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,s,l),this}absarc(e,t,n,i,s,l){return this.absellipse(e,t,n,n,i,s,l),this}ellipse(e,t,n,i,s,l,c,u){const h=this.currentPoint.x,f=this.currentPoint.y;return this.absellipse(e+h,t+f,n,i,s,l,c,u),this}absellipse(e,t,n,i,s,l,c,u){const h=new du(e,t,n,i,s,l,c,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const f=h.getPoint(1);return this.currentPoint.copy(f),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Xa extends vt{constructor(e=[new me(0,-.5),new me(.5,0),new me(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Kt(i,0,Math.PI*2);const s=[],l=[],c=[],u=[],h=[],f=1/t,p=new D,m=new me,v=new D,y=new D,w=new D;let x=0,_=0;for(let E=0;E<=e.length-1;E++)switch(E){case 0:x=e[E+1].x-e[E].x,_=e[E+1].y-e[E].y,v.x=_*1,v.y=-x,v.z=_*0,w.copy(v),v.normalize(),u.push(v.x,v.y,v.z);break;case e.length-1:u.push(w.x,w.y,w.z);break;default:x=e[E+1].x-e[E].x,_=e[E+1].y-e[E].y,v.x=_*1,v.y=-x,v.z=_*0,y.copy(v),v.x+=w.x,v.y+=w.y,v.z+=w.z,v.normalize(),u.push(v.x,v.y,v.z),w.copy(y)}for(let E=0;E<=t;E++){const M=n+E*f*i,b=Math.sin(M),R=Math.cos(M);for(let P=0;P<=e.length-1;P++){p.x=e[P].x*b,p.y=e[P].y,p.z=e[P].x*R,l.push(p.x,p.y,p.z),m.x=E/t,m.y=P/(e.length-1),c.push(m.x,m.y);const I=u[3*P+0]*b,z=u[3*P+1],A=u[3*P+0]*R;h.push(I,z,A)}}for(let E=0;E<t;E++)for(let M=0;M<e.length-1;M++){const b=M+E*e.length,R=b,P=b+e.length,I=b+e.length+1,z=b+1;s.push(R,P,z),s.push(I,z,P)}this.setIndex(s),this.setAttribute("position",new Xe(l,3)),this.setAttribute("uv",new Xe(c,2)),this.setAttribute("normal",new Xe(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Xa(e.points,e.segments,e.phiStart,e.phiLength)}}class pu extends Xa{constructor(e=1,t=1,n=4,i=8){const s=new Da;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new pu(e.radius,e.length,e.capSegments,e.radialSegments)}}class mu extends vt{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],l=[],c=[],u=[],h=new D,f=new me;l.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const v=n+p/t*i;h.x=e*Math.cos(v),h.y=e*Math.sin(v),l.push(h.x,h.y,h.z),c.push(0,0,1),f.x=(l[m]/e+1)/2,f.y=(l[m+1]/e+1)/2,u.push(f.x,f.y)}for(let p=1;p<=t;p++)s.push(p,p+1,0);this.setIndex(s),this.setAttribute("position",new Xe(l,3)),this.setAttribute("normal",new Xe(c,3)),this.setAttribute("uv",new Xe(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new mu(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class En extends vt{constructor(e=1,t=1,n=1,i=32,s=1,l=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:l,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),s=Math.floor(s);const f=[],p=[],m=[],v=[];let y=0;const w=[],x=n/2;let _=0;E(),l===!1&&(e>0&&M(!0),t>0&&M(!1)),this.setIndex(f),this.setAttribute("position",new Xe(p,3)),this.setAttribute("normal",new Xe(m,3)),this.setAttribute("uv",new Xe(v,2));function E(){const b=new D,R=new D;let P=0;const I=(t-e)/n;for(let z=0;z<=s;z++){const A=[],C=z/s,B=C*(t-e)+e;for(let $=0;$<=i;$++){const oe=$/i,G=oe*u+c,q=Math.sin(G),ie=Math.cos(G);R.x=B*q,R.y=-C*n+x,R.z=B*ie,p.push(R.x,R.y,R.z),b.set(q,I,ie).normalize(),m.push(b.x,b.y,b.z),v.push(oe,1-C),A.push(y++)}w.push(A)}for(let z=0;z<i;z++)for(let A=0;A<s;A++){const C=w[A][z],B=w[A+1][z],$=w[A+1][z+1],oe=w[A][z+1];f.push(C,B,oe),f.push(B,$,oe),P+=6}h.addGroup(_,P,0),_+=P}function M(b){const R=y,P=new me,I=new D;let z=0;const A=b===!0?e:t,C=b===!0?1:-1;for(let $=1;$<=i;$++)p.push(0,x*C,0),m.push(0,C,0),v.push(.5,.5),y++;const B=y;for(let $=0;$<=i;$++){const G=$/i*u+c,q=Math.cos(G),ie=Math.sin(G);I.x=A*ie,I.y=x*C,I.z=A*q,p.push(I.x,I.y,I.z),m.push(0,C,0),P.x=q*.5+.5,P.y=ie*.5*C+.5,v.push(P.x,P.y),y++}for(let $=0;$<i;$++){const oe=R+$,G=B+$;b===!0?f.push(G,G+1,oe):f.push(G+1,G,oe),z+=3}h.addGroup(_,z,b===!0?1:2),_+=z}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new En(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class gu extends En{constructor(e=1,t=1,n=32,i=1,s=!1,l=0,c=Math.PI*2){super(0,e,t,n,i,s,l,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:l,thetaLength:c}}static fromJSON(e){return new gu(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class kr extends vt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],l=[];c(i),h(n),f(),this.setAttribute("position",new Xe(s,3)),this.setAttribute("normal",new Xe(s.slice(),3)),this.setAttribute("uv",new Xe(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(E){const M=new D,b=new D,R=new D;for(let P=0;P<t.length;P+=3)v(t[P+0],M),v(t[P+1],b),v(t[P+2],R),u(M,b,R,E)}function u(E,M,b,R){const P=R+1,I=[];for(let z=0;z<=P;z++){I[z]=[];const A=E.clone().lerp(b,z/P),C=M.clone().lerp(b,z/P),B=P-z;for(let $=0;$<=B;$++)$===0&&z===P?I[z][$]=A:I[z][$]=A.clone().lerp(C,$/B)}for(let z=0;z<P;z++)for(let A=0;A<2*(P-z)-1;A++){const C=Math.floor(A/2);A%2===0?(m(I[z][C+1]),m(I[z+1][C]),m(I[z][C])):(m(I[z][C+1]),m(I[z+1][C+1]),m(I[z+1][C]))}}function h(E){const M=new D;for(let b=0;b<s.length;b+=3)M.x=s[b+0],M.y=s[b+1],M.z=s[b+2],M.normalize().multiplyScalar(E),s[b+0]=M.x,s[b+1]=M.y,s[b+2]=M.z}function f(){const E=new D;for(let M=0;M<s.length;M+=3){E.x=s[M+0],E.y=s[M+1],E.z=s[M+2];const b=x(E)/2/Math.PI+.5,R=_(E)/Math.PI+.5;l.push(b,1-R)}y(),p()}function p(){for(let E=0;E<l.length;E+=6){const M=l[E+0],b=l[E+2],R=l[E+4],P=Math.max(M,b,R),I=Math.min(M,b,R);P>.9&&I<.1&&(M<.2&&(l[E+0]+=1),b<.2&&(l[E+2]+=1),R<.2&&(l[E+4]+=1))}}function m(E){s.push(E.x,E.y,E.z)}function v(E,M){const b=E*3;M.x=e[b+0],M.y=e[b+1],M.z=e[b+2]}function y(){const E=new D,M=new D,b=new D,R=new D,P=new me,I=new me,z=new me;for(let A=0,C=0;A<s.length;A+=9,C+=6){E.set(s[A+0],s[A+1],s[A+2]),M.set(s[A+3],s[A+4],s[A+5]),b.set(s[A+6],s[A+7],s[A+8]),P.set(l[C+0],l[C+1]),I.set(l[C+2],l[C+3]),z.set(l[C+4],l[C+5]),R.copy(E).add(M).add(b).divideScalar(3);const B=x(R);w(P,C+0,E,B),w(I,C+2,M,B),w(z,C+4,b,B)}}function w(E,M,b,R){R<0&&E.x===1&&(l[M]=E.x-1),b.x===0&&b.z===0&&(l[M]=R/2/Math.PI+.5)}function x(E){return Math.atan2(E.z,-E.x)}function _(E){return Math.atan2(-E.y,Math.sqrt(E.x*E.x+E.z*E.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new kr(e.vertices,e.indices,e.radius,e.details)}}class vu extends kr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,l,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new vu(e.radius,e.detail)}}const Mc=new D,wc=new D,hf=new D,Ec=new Xn;class p_ extends vt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(gs*t),l=e.getIndex(),c=e.getAttribute("position"),u=l?l.count:c.count,h=[0,0,0],f=["a","b","c"],p=new Array(3),m={},v=[];for(let y=0;y<u;y+=3){l?(h[0]=l.getX(y),h[1]=l.getX(y+1),h[2]=l.getX(y+2)):(h[0]=y,h[1]=y+1,h[2]=y+2);const{a:w,b:x,c:_}=Ec;if(w.fromBufferAttribute(c,h[0]),x.fromBufferAttribute(c,h[1]),_.fromBufferAttribute(c,h[2]),Ec.getNormal(hf),p[0]=`${Math.round(w.x*i)},${Math.round(w.y*i)},${Math.round(w.z*i)}`,p[1]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,p[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let E=0;E<3;E++){const M=(E+1)%3,b=p[E],R=p[M],P=Ec[f[E]],I=Ec[f[M]],z=`${b}_${R}`,A=`${R}_${b}`;A in m&&m[A]?(hf.dot(m[A].normal)<=s&&(v.push(P.x,P.y,P.z),v.push(I.x,I.y,I.z)),m[A]=null):z in m||(m[z]={index0:h[E],index1:h[M],normal:hf.clone()})}}for(const y in m)if(m[y]){const{index0:w,index1:x}=m[y];Mc.fromBufferAttribute(c,w),wc.fromBufferAttribute(c,x),v.push(Mc.x,Mc.y,Mc.z),v.push(wc.x,wc.y,wc.z)}this.setAttribute("position",new Xe(v,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class _s extends Da{constructor(e){super(e),this.uuid=ri(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Da().fromJSON(i))}return this}}const RT={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=m_(r,0,i,t,!0);const l=[];if(!s||s.next===s.prev)return l;let c,u,h,f,p,m,v;if(n&&(s=DT(r,e,s,t)),r.length>80*t){c=h=r[0],u=f=r[1];for(let y=t;y<i;y+=t)p=r[y],m=r[y+1],p<c&&(c=p),m<u&&(u=m),p>h&&(h=p),m>f&&(f=m);v=Math.max(h-c,f-u),v=v!==0?32767/v:0}return Na(s,l,t,c,u,v,0),l}};function m_(r,e,t,n,i){let s,l;if(i===WT(r,e,t,n)>0)for(s=e;s<t;s+=n)l=Xg(s,r[s],r[s+1],l);else for(s=t-n;s>=e;s-=n)l=Xg(s,r[s],r[s+1],l);return l&&_u(l,l.next)&&(Oa(l),l=l.next),l}function Ss(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(_u(t,t.next)||Zt(t.prev,t,t.next)===0)){if(Oa(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Na(r,e,t,n,i,s,l){if(!r)return;!l&&s&&zT(r,n,i,s);let c=r,u,h;for(;r.prev!==r.next;){if(u=r.prev,h=r.next,s?CT(r,n,i,s):PT(r)){e.push(u.i/t|0),e.push(r.i/t|0),e.push(h.i/t|0),Oa(r),r=h.next,c=h.next;continue}if(r=h,r===c){l?l===1?(r=LT(Ss(r),e,t),Na(r,e,t,n,i,s,2)):l===2&&IT(r,e,t,n,i,s):Na(Ss(r),e,t,n,i,s,1);break}}}function PT(r){const e=r.prev,t=r,n=r.next;if(Zt(e,t,n)>=0)return!1;const i=e.x,s=t.x,l=n.x,c=e.y,u=t.y,h=n.y,f=i<s?i<l?i:l:s<l?s:l,p=c<u?c<h?c:h:u<h?u:h,m=i>s?i>l?i:l:s>l?s:l,v=c>u?c>h?c:h:u>h?u:h;let y=n.next;for(;y!==e;){if(y.x>=f&&y.x<=m&&y.y>=p&&y.y<=v&&vo(i,c,s,u,l,h,y.x,y.y)&&Zt(y.prev,y,y.next)>=0)return!1;y=y.next}return!0}function CT(r,e,t,n){const i=r.prev,s=r,l=r.next;if(Zt(i,s,l)>=0)return!1;const c=i.x,u=s.x,h=l.x,f=i.y,p=s.y,m=l.y,v=c<u?c<h?c:h:u<h?u:h,y=f<p?f<m?f:m:p<m?p:m,w=c>u?c>h?c:h:u>h?u:h,x=f>p?f>m?f:m:p>m?p:m,_=ld(v,y,e,t,n),E=ld(w,x,e,t,n);let M=r.prevZ,b=r.nextZ;for(;M&&M.z>=_&&b&&b.z<=E;){if(M.x>=v&&M.x<=w&&M.y>=y&&M.y<=x&&M!==i&&M!==l&&vo(c,f,u,p,h,m,M.x,M.y)&&Zt(M.prev,M,M.next)>=0||(M=M.prevZ,b.x>=v&&b.x<=w&&b.y>=y&&b.y<=x&&b!==i&&b!==l&&vo(c,f,u,p,h,m,b.x,b.y)&&Zt(b.prev,b,b.next)>=0))return!1;b=b.nextZ}for(;M&&M.z>=_;){if(M.x>=v&&M.x<=w&&M.y>=y&&M.y<=x&&M!==i&&M!==l&&vo(c,f,u,p,h,m,M.x,M.y)&&Zt(M.prev,M,M.next)>=0)return!1;M=M.prevZ}for(;b&&b.z<=E;){if(b.x>=v&&b.x<=w&&b.y>=y&&b.y<=x&&b!==i&&b!==l&&vo(c,f,u,p,h,m,b.x,b.y)&&Zt(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function LT(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!_u(i,s)&&g_(i,n,n.next,s)&&Ua(i,s)&&Ua(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),Oa(n),Oa(n.next),n=r=s),n=n.next}while(n!==r);return Ss(n)}function IT(r,e,t,n,i,s){let l=r;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&HT(l,c)){let u=v_(l,c);l=Ss(l,l.next),u=Ss(u,u.next),Na(l,e,t,n,i,s,0),Na(u,e,t,n,i,s,0);return}c=c.next}l=l.next}while(l!==r)}function DT(r,e,t,n){const i=[];let s,l,c,u,h;for(s=0,l=e.length;s<l;s++)c=e[s]*n,u=s<l-1?e[s+1]*n:r.length,h=m_(r,c,u,n,!1),h===h.next&&(h.steiner=!0),i.push(kT(h));for(i.sort(NT),s=0;s<i.length;s++)t=UT(i[s],t);return t}function NT(r,e){return r.x-e.x}function UT(r,e){const t=OT(r,e);if(!t)return e;const n=v_(t,r);return Ss(n,n.next),Ss(t,t.next)}function OT(r,e){let t=e,n=-1/0,i;const s=r.x,l=r.y;do{if(l<=t.y&&l>=t.next.y&&t.next.y!==t.y){const m=t.x+(l-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=s&&m>n&&(n=m,i=t.x<t.next.x?t:t.next,m===s))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,u=i.x,h=i.y;let f=1/0,p;t=i;do s>=t.x&&t.x>=u&&s!==t.x&&vo(l<h?s:n,l,u,h,l<h?n:s,l,t.x,t.y)&&(p=Math.abs(l-t.y)/(s-t.x),Ua(t,r)&&(p<f||p===f&&(t.x>i.x||t.x===i.x&&FT(i,t)))&&(i=t,f=p)),t=t.next;while(t!==c);return i}function FT(r,e){return Zt(r.prev,r,e.prev)<0&&Zt(e.next,r,r.next)<0}function zT(r,e,t,n){let i=r;do i.z===0&&(i.z=ld(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,BT(i)}function BT(r){let e,t,n,i,s,l,c,u,h=1;do{for(t=r,r=null,s=null,l=0;t;){for(l++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(l>1);return r}function ld(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function kT(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function vo(r,e,t,n,i,s,l,c){return(i-l)*(e-c)>=(r-l)*(s-c)&&(r-l)*(n-c)>=(t-l)*(e-c)&&(t-l)*(s-c)>=(i-l)*(n-c)}function HT(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!VT(r,e)&&(Ua(r,e)&&Ua(e,r)&&GT(r,e)&&(Zt(r.prev,r,e.prev)||Zt(r,e.prev,e))||_u(r,e)&&Zt(r.prev,r,r.next)>0&&Zt(e.prev,e,e.next)>0)}function Zt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function _u(r,e){return r.x===e.x&&r.y===e.y}function g_(r,e,t,n){const i=bc(Zt(r,e,t)),s=bc(Zt(r,e,n)),l=bc(Zt(t,n,r)),c=bc(Zt(t,n,e));return!!(i!==s&&l!==c||i===0&&Tc(r,t,e)||s===0&&Tc(r,n,e)||l===0&&Tc(t,r,n)||c===0&&Tc(t,e,n))}function Tc(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function bc(r){return r>0?1:r<0?-1:0}function VT(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&g_(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function Ua(r,e){return Zt(r.prev,r,r.next)<0?Zt(r,e,r.next)>=0&&Zt(r,r.prev,e)>=0:Zt(r,e,r.prev)<0||Zt(r,r.next,e)<0}function GT(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function v_(r,e){const t=new cd(r.i,r.x,r.y),n=new cd(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function Xg(r,e,t,n){const i=new cd(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Oa(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function cd(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function WT(r,e,t,n){let i=0;for(let s=e,l=t-n;s<t;s+=n)i+=(r[l]-r[s])*(r[s+1]+r[l+1]),l=s;return i}class Xi{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Xi.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];Yg(e),qg(n,e);let l=e.length;t.forEach(Yg);for(let u=0;u<t.length;u++)i.push(l),l+=t[u].length,qg(n,t[u]);const c=RT.triangulate(n,i);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function Yg(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function qg(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class yu extends vt{constructor(e=new _s([new me(.5,.5),new me(-.5,.5),new me(-.5,-.5),new me(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];l(h)}this.setAttribute("position",new Xe(i,3)),this.setAttribute("uv",new Xe(s,2)),this.computeVertexNormals();function l(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,f=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,v=t.bevelThickness!==void 0?t.bevelThickness:.2,y=t.bevelSize!==void 0?t.bevelSize:v-.1,w=t.bevelOffset!==void 0?t.bevelOffset:0,x=t.bevelSegments!==void 0?t.bevelSegments:3;const _=t.extrudePath,E=t.UVGenerator!==void 0?t.UVGenerator:XT;let M,b=!1,R,P,I,z;_&&(M=_.getSpacedPoints(f),b=!0,m=!1,R=_.computeFrenetFrames(f,!1),P=new D,I=new D,z=new D),m||(x=0,v=0,y=0,w=0);const A=c.extractPoints(h);let C=A.shape;const B=A.holes;if(!Xi.isClockWise(C)){C=C.reverse();for(let k=0,ye=B.length;k<ye;k++){const de=B[k];Xi.isClockWise(de)&&(B[k]=de.reverse())}}const oe=Xi.triangulateShape(C,B),G=C;for(let k=0,ye=B.length;k<ye;k++){const de=B[k];C=C.concat(de)}function q(k,ye,de){return ye||console.error("THREE.ExtrudeGeometry: vec does not exist"),k.clone().addScaledVector(ye,de)}const ie=C.length,te=oe.length;function Q(k,ye,de){let we,ve,Ge;const Ne=k.x-ye.x,ke=k.y-ye.y,nt=de.x-k.x,gt=de.y-k.y,Ut=Ne*Ne+ke*ke,F=Ne*gt-ke*nt;if(Math.abs(F)>Number.EPSILON){const L=Math.sqrt(Ut),ne=Math.sqrt(nt*nt+gt*gt),Ee=ye.x-ke/L,_e=ye.y+Ne/L,be=de.x-gt/ne,je=de.y+nt/ne,Ce=((be-Ee)*gt-(je-_e)*nt)/(Ne*gt-ke*nt);we=Ee+Ne*Ce-k.x,ve=_e+ke*Ce-k.y;const Ue=we*we+ve*ve;if(Ue<=2)return new me(we,ve);Ge=Math.sqrt(Ue/2)}else{let L=!1;Ne>Number.EPSILON?nt>Number.EPSILON&&(L=!0):Ne<-Number.EPSILON?nt<-Number.EPSILON&&(L=!0):Math.sign(ke)===Math.sign(gt)&&(L=!0),L?(we=-ke,ve=Ne,Ge=Math.sqrt(Ut)):(we=Ne,ve=ke,Ge=Math.sqrt(Ut/2))}return new me(we/Ge,ve/Ge)}const j=[];for(let k=0,ye=G.length,de=ye-1,we=k+1;k<ye;k++,de++,we++)de===ye&&(de=0),we===ye&&(we=0),j[k]=Q(G[k],G[de],G[we]);const X=[];let U,Z=j.concat();for(let k=0,ye=B.length;k<ye;k++){const de=B[k];U=[];for(let we=0,ve=de.length,Ge=ve-1,Ne=we+1;we<ve;we++,Ge++,Ne++)Ge===ve&&(Ge=0),Ne===ve&&(Ne=0),U[we]=Q(de[we],de[Ge],de[Ne]);X.push(U),Z=Z.concat(U)}for(let k=0;k<x;k++){const ye=k/x,de=v*Math.cos(ye*Math.PI/2),we=y*Math.sin(ye*Math.PI/2)+w;for(let ve=0,Ge=G.length;ve<Ge;ve++){const Ne=q(G[ve],j[ve],we);Ye(Ne.x,Ne.y,-de)}for(let ve=0,Ge=B.length;ve<Ge;ve++){const Ne=B[ve];U=X[ve];for(let ke=0,nt=Ne.length;ke<nt;ke++){const gt=q(Ne[ke],U[ke],we);Ye(gt.x,gt.y,-de)}}}const ce=y+w;for(let k=0;k<ie;k++){const ye=m?q(C[k],Z[k],ce):C[k];b?(I.copy(R.normals[0]).multiplyScalar(ye.x),P.copy(R.binormals[0]).multiplyScalar(ye.y),z.copy(M[0]).add(I).add(P),Ye(z.x,z.y,z.z)):Ye(ye.x,ye.y,0)}for(let k=1;k<=f;k++)for(let ye=0;ye<ie;ye++){const de=m?q(C[ye],Z[ye],ce):C[ye];b?(I.copy(R.normals[k]).multiplyScalar(de.x),P.copy(R.binormals[k]).multiplyScalar(de.y),z.copy(M[k]).add(I).add(P),Ye(z.x,z.y,z.z)):Ye(de.x,de.y,p/f*k)}for(let k=x-1;k>=0;k--){const ye=k/x,de=v*Math.cos(ye*Math.PI/2),we=y*Math.sin(ye*Math.PI/2)+w;for(let ve=0,Ge=G.length;ve<Ge;ve++){const Ne=q(G[ve],j[ve],we);Ye(Ne.x,Ne.y,p+de)}for(let ve=0,Ge=B.length;ve<Ge;ve++){const Ne=B[ve];U=X[ve];for(let ke=0,nt=Ne.length;ke<nt;ke++){const gt=q(Ne[ke],U[ke],we);b?Ye(gt.x,gt.y+M[f-1].y,M[f-1].x+de):Ye(gt.x,gt.y,p+de)}}}H(),xe();function H(){const k=i.length/3;if(m){let ye=0,de=ie*ye;for(let we=0;we<te;we++){const ve=oe[we];Ze(ve[2]+de,ve[1]+de,ve[0]+de)}ye=f+x*2,de=ie*ye;for(let we=0;we<te;we++){const ve=oe[we];Ze(ve[0]+de,ve[1]+de,ve[2]+de)}}else{for(let ye=0;ye<te;ye++){const de=oe[ye];Ze(de[2],de[1],de[0])}for(let ye=0;ye<te;ye++){const de=oe[ye];Ze(de[0]+ie*f,de[1]+ie*f,de[2]+ie*f)}}n.addGroup(k,i.length/3-k,0)}function xe(){const k=i.length/3;let ye=0;Fe(G,ye),ye+=G.length;for(let de=0,we=B.length;de<we;de++){const ve=B[de];Fe(ve,ye),ye+=ve.length}n.addGroup(k,i.length/3-k,1)}function Fe(k,ye){let de=k.length;for(;--de>=0;){const we=de;let ve=de-1;ve<0&&(ve=k.length-1);for(let Ge=0,Ne=f+x*2;Ge<Ne;Ge++){const ke=ie*Ge,nt=ie*(Ge+1),gt=ye+we+ke,Ut=ye+ve+ke,F=ye+ve+nt,L=ye+we+nt;tt(gt,Ut,F,L)}}}function Ye(k,ye,de){u.push(k),u.push(ye),u.push(de)}function Ze(k,ye,de){it(k),it(ye),it(de);const we=i.length/3,ve=E.generateTopUV(n,i,we-3,we-2,we-1);Re(ve[0]),Re(ve[1]),Re(ve[2])}function tt(k,ye,de,we){it(k),it(ye),it(we),it(ye),it(de),it(we);const ve=i.length/3,Ge=E.generateSideWallUV(n,i,ve-6,ve-3,ve-2,ve-1);Re(Ge[0]),Re(Ge[1]),Re(Ge[3]),Re(Ge[1]),Re(Ge[2]),Re(Ge[3])}function it(k){i.push(u[k*3+0]),i.push(u[k*3+1]),i.push(u[k*3+2])}function Re(k){s.push(k.x),s.push(k.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return YT(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,l=e.shapes.length;s<l;s++){const c=t[e.shapes[s]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Qc[i.type]().fromJSON(i)),new yu(n,e.options)}}const XT={generateTopUV:function(r,e,t,n,i){const s=e[t*3],l=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],f=e[i*3+1];return[new me(s,l),new me(c,u),new me(h,f)]},generateSideWallUV:function(r,e,t,n,i,s){const l=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],f=e[n*3+1],p=e[n*3+2],m=e[i*3],v=e[i*3+1],y=e[i*3+2],w=e[s*3],x=e[s*3+1],_=e[s*3+2];return Math.abs(c-f)<Math.abs(l-h)?[new me(l,1-u),new me(h,1-p),new me(m,1-y),new me(w,1-_)]:[new me(c,1-u),new me(f,1-p),new me(v,1-y),new me(x,1-_)]}};function YT(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class xu extends kr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new xu(e.radius,e.detail)}}class vi extends kr{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new vi(e.radius,e.detail)}}class Su extends vt{constructor(e=.5,t=1,n=32,i=1,s=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],f=[];let p=e;const m=(t-e)/i,v=new D,y=new me;for(let w=0;w<=i;w++){for(let x=0;x<=n;x++){const _=s+x/n*l;v.x=p*Math.cos(_),v.y=p*Math.sin(_),u.push(v.x,v.y,v.z),h.push(0,0,1),y.x=(v.x/t+1)/2,y.y=(v.y/t+1)/2,f.push(y.x,y.y)}p+=m}for(let w=0;w<i;w++){const x=w*(n+1);for(let _=0;_<n;_++){const E=_+x,M=E,b=E+n+1,R=E+n+2,P=E+1;c.push(M,b,P),c.push(b,R,P)}}this.setIndex(c),this.setAttribute("position",new Xe(u,3)),this.setAttribute("normal",new Xe(h,3)),this.setAttribute("uv",new Xe(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Su(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Mu extends vt{constructor(e=new _s([new me(0,.5),new me(-.5,-.5),new me(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],l=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let f=0;f<e.length;f++)h(e[f]),this.addGroup(c,u,f),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new Xe(i,3)),this.setAttribute("normal",new Xe(s,3)),this.setAttribute("uv",new Xe(l,2));function h(f){const p=i.length/3,m=f.extractPoints(t);let v=m.shape;const y=m.holes;Xi.isClockWise(v)===!1&&(v=v.reverse());for(let x=0,_=y.length;x<_;x++){const E=y[x];Xi.isClockWise(E)===!0&&(y[x]=E.reverse())}const w=Xi.triangulateShape(v,y);for(let x=0,_=y.length;x<_;x++){const E=y[x];v=v.concat(E)}for(let x=0,_=v.length;x<_;x++){const E=v[x];i.push(E.x,E.y,0),s.push(0,0,1),l.push(E.x,E.y)}for(let x=0,_=w.length;x<_;x++){const E=w[x],M=E[0]+p,b=E[1]+p,R=E[2]+p;n.push(M,b,R),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return qT(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const l=t[e.shapes[i]];n.push(l)}return new Mu(n,e.curveSegments)}}function qT(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class Co extends vt{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:l,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(l+c,Math.PI);let h=0;const f=[],p=new D,m=new D,v=[],y=[],w=[],x=[];for(let _=0;_<=n;_++){const E=[],M=_/n;let b=0;_===0&&l===0?b=.5/t:_===n&&u===Math.PI&&(b=-.5/t);for(let R=0;R<=t;R++){const P=R/t;p.x=-e*Math.cos(i+P*s)*Math.sin(l+M*c),p.y=e*Math.cos(l+M*c),p.z=e*Math.sin(i+P*s)*Math.sin(l+M*c),y.push(p.x,p.y,p.z),m.copy(p).normalize(),w.push(m.x,m.y,m.z),x.push(P+b,1-M),E.push(h++)}f.push(E)}for(let _=0;_<n;_++)for(let E=0;E<t;E++){const M=f[_][E+1],b=f[_][E],R=f[_+1][E],P=f[_+1][E+1];(_!==0||l>0)&&v.push(M,b,P),(_!==n-1||u<Math.PI)&&v.push(b,R,P)}this.setIndex(v),this.setAttribute("position",new Xe(y,3)),this.setAttribute("normal",new Xe(w,3)),this.setAttribute("uv",new Xe(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Co(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class wu extends kr{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new wu(e.radius,e.detail)}}class Dr extends vt{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],u=[],h=[],f=new D,p=new D,m=new D;for(let v=0;v<=n;v++)for(let y=0;y<=i;y++){const w=y/i*s,x=v/n*Math.PI*2;p.x=(e+t*Math.cos(x))*Math.cos(w),p.y=(e+t*Math.cos(x))*Math.sin(w),p.z=t*Math.sin(x),c.push(p.x,p.y,p.z),f.x=e*Math.cos(w),f.y=e*Math.sin(w),m.subVectors(p,f).normalize(),u.push(m.x,m.y,m.z),h.push(y/i),h.push(v/n)}for(let v=1;v<=n;v++)for(let y=1;y<=i;y++){const w=(i+1)*v+y-1,x=(i+1)*(v-1)+y-1,_=(i+1)*(v-1)+y,E=(i+1)*v+y;l.push(w,x,E),l.push(x,_,E)}this.setIndex(l),this.setAttribute("position",new Xe(c,3)),this.setAttribute("normal",new Xe(u,3)),this.setAttribute("uv",new Xe(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Dr(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Eu extends vt{constructor(e=1,t=.4,n=64,i=8,s=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],f=[],p=new D,m=new D,v=new D,y=new D,w=new D,x=new D,_=new D;for(let M=0;M<=n;++M){const b=M/n*s*Math.PI*2;E(b,s,l,e,v),E(b+.01,s,l,e,y),x.subVectors(y,v),_.addVectors(y,v),w.crossVectors(x,_),_.crossVectors(w,x),w.normalize(),_.normalize();for(let R=0;R<=i;++R){const P=R/i*Math.PI*2,I=-t*Math.cos(P),z=t*Math.sin(P);p.x=v.x+(I*_.x+z*w.x),p.y=v.y+(I*_.y+z*w.y),p.z=v.z+(I*_.z+z*w.z),u.push(p.x,p.y,p.z),m.subVectors(p,v).normalize(),h.push(m.x,m.y,m.z),f.push(M/n),f.push(R/i)}}for(let M=1;M<=n;M++)for(let b=1;b<=i;b++){const R=(i+1)*(M-1)+(b-1),P=(i+1)*M+(b-1),I=(i+1)*M+b,z=(i+1)*(M-1)+b;c.push(R,P,z),c.push(P,I,z)}this.setIndex(c),this.setAttribute("position",new Xe(u,3)),this.setAttribute("normal",new Xe(h,3)),this.setAttribute("uv",new Xe(f,2));function E(M,b,R,P,I){const z=Math.cos(M),A=Math.sin(M),C=R/b*M,B=Math.cos(C);I.x=P*(2+B)*.5*z,I.y=P*(2+B)*A*.5,I.z=P*Math.sin(C)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Eu(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Tu extends vt{constructor(e=new Xd(new D(-1,-1,0),new D(-1,1,0),new D(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const l=e.computeFrenetFrames(t,s);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new D,u=new D,h=new me;let f=new D;const p=[],m=[],v=[],y=[];w(),this.setIndex(y),this.setAttribute("position",new Xe(p,3)),this.setAttribute("normal",new Xe(m,3)),this.setAttribute("uv",new Xe(v,2));function w(){for(let M=0;M<t;M++)x(M);x(s===!1?t:0),E(),_()}function x(M){f=e.getPointAt(M/t,f);const b=l.normals[M],R=l.binormals[M];for(let P=0;P<=i;P++){const I=P/i*Math.PI*2,z=Math.sin(I),A=-Math.cos(I);u.x=A*b.x+z*R.x,u.y=A*b.y+z*R.y,u.z=A*b.z+z*R.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=f.x+n*u.x,c.y=f.y+n*u.y,c.z=f.z+n*u.z,p.push(c.x,c.y,c.z)}}function _(){for(let M=1;M<=t;M++)for(let b=1;b<=i;b++){const R=(i+1)*(M-1)+(b-1),P=(i+1)*M+(b-1),I=(i+1)*M+b,z=(i+1)*(M-1)+b;y.push(R,P,z),y.push(P,I,z)}}function E(){for(let M=0;M<=t;M++)for(let b=0;b<=i;b++)h.x=M/t,h.y=b/i,v.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Tu(new Qc[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class __ extends vt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new D,s=new D;if(e.index!==null){const l=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,f=u.length;h<f;++h){const p=u[h],m=p.start,v=p.count;for(let y=m,w=m+v;y<w;y+=3)for(let x=0;x<3;x++){const _=c.getX(y+x),E=c.getX(y+(x+1)%3);i.fromBufferAttribute(l,_),s.fromBufferAttribute(l,E),Zg(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const l=e.attributes.position;for(let c=0,u=l.count/3;c<u;c++)for(let h=0;h<3;h++){const f=3*c+h,p=3*c+(h+1)%3;i.fromBufferAttribute(l,f),s.fromBufferAttribute(l,p),Zg(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Xe(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function Zg(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var jg=Object.freeze({__proto__:null,BoxGeometry:Wn,CapsuleGeometry:pu,CircleGeometry:mu,ConeGeometry:gu,CylinderGeometry:En,DodecahedronGeometry:vu,EdgesGeometry:p_,ExtrudeGeometry:yu,IcosahedronGeometry:xu,LatheGeometry:Xa,OctahedronGeometry:vi,PlaneGeometry:_i,PolyhedronGeometry:kr,RingGeometry:Su,ShapeGeometry:Mu,SphereGeometry:Co,TetrahedronGeometry:wu,TorusGeometry:Dr,TorusKnotGeometry:Eu,TubeGeometry:Tu,WireframeGeometry:__});class y_ extends Dn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Be(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class x_ extends qi{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class qd extends Dn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Be(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Br,this.normalScale=new me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class S_ extends qd{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new me(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Kt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Be(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Be(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Be(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class M_ extends Dn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Be(16777215),this.specular=new Be(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Br,this.normalScale=new me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ha,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class w_ extends Dn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Be(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Br,this.normalScale=new me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class E_ extends Dn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Br,this.normalScale=new me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class T_ extends Dn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Be(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Br,this.normalScale=new me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ha,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class b_ extends Dn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Be(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Br,this.normalScale=new me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class A_ extends Nn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function ps(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function R_(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function P_(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function ud(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,l=0;l!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)i[l++]=r[c+u]}return i}function Zd(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let l=s[n];if(l!==void 0)if(Array.isArray(l))do l=s[n],l!==void 0&&(e.push(s.time),t.push.apply(t,l)),s=r[i++];while(s!==void 0);else if(l.toArray!==void 0)do l=s[n],l!==void 0&&(e.push(s.time),l.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do l=s[n],l!==void 0&&(e.push(s.time),t.push(l)),s=r[i++];while(s!==void 0)}function ZT(r,e,t,n,i=30){const s=r.clone();s.name=e;const l=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],f=h.getValueSize(),p=[],m=[];for(let v=0;v<h.times.length;++v){const y=h.times[v]*i;if(!(y<t||y>=n)){p.push(h.times[v]);for(let w=0;w<f;++w)m.push(h.values[v*f+w])}}p.length!==0&&(h.times=ps(p,h.times.constructor),h.values=ps(m,h.values.constructor),l.push(h))}s.tracks=l;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function jT(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let l=0;l<i;++l){const c=t.tracks[l],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=r.tracks.find(function(_){return _.name===c.name&&_.ValueTypeName===u});if(h===void 0)continue;let f=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=p/3);let m=0;const v=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=v/3);const y=c.times.length-1;let w;if(s<=c.times[0]){const _=f,E=p-f;w=c.values.slice(_,E)}else if(s>=c.times[y]){const _=y*p+f,E=_+p-f;w=c.values.slice(_,E)}else{const _=c.createInterpolant(),E=f,M=p-f;_.evaluate(s),w=_.resultBuffer.slice(E,M)}u==="quaternion"&&new Nt().fromArray(w).normalize().conjugate().toArray(w);const x=h.times.length;for(let _=0;_<x;++_){const E=_*v+m;if(u==="quaternion")Nt.multiplyQuaternionsFlat(h.values,E,w,0,h.values,E);else{const M=v-m*2;for(let b=0;b<M;++b)h.values[E+b]-=w[b]}}}return r.blendMode=bd,r}const QT={convertArray:ps,isTypedArray:R_,getKeyframeOrder:P_,sortedArray:ud,flattenJSON:Zd,subclip:ZT,makeClipAdditive:jT};class Ya{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let l;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=i,i=t[++n],e<i)break t}l=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=s,s=t[--n-1],e>=s)break t}l=n,n=0;break n}break e}for(;n<l;){const c=n+l>>>1;e<t[c]?l=c:n=c+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let l=0;l!==i;++l)t[l]=n[s+l];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class C_ extends Ya{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:hs,endingEnd:hs}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,l=e+1,c=i[s],u=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case fs:s=e,c=2*t-n;break;case ba:s=i.length-2,c=t+i[s]-i[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case fs:l=e,u=2*n-t;break;case ba:l=1,u=n+i[1]-i[0];break;default:l=e-1,u=t}const h=(n-t)*.5,f=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=s*f,this._offsetNext=l*f}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,v=this._weightNext,y=(n-t)/(i-t),w=y*y,x=w*y,_=-m*x+2*m*w-m*y,E=(1+m)*x+(-1.5-2*m)*w+(-.5+m)*y+1,M=(-1-v)*x+(1.5+v)*w+.5*y,b=v*x-v*w;for(let R=0;R!==c;++R)s[R]=_*l[f+R]+E*l[h+R]+M*l[u+R]+b*l[p+R];return s}}class jd extends Ya{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=(n-t)/(i-t),p=1-f;for(let m=0;m!==c;++m)s[m]=l[h+m]*p+l[u+m]*f;return s}}class L_ extends Ya{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Ci{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=ps(t,this.TimeBufferType),this.values=ps(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:ps(e.times,Array),values:ps(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new L_(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new jd(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new C_(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Ea:t=this.InterpolantFactoryMethodDiscrete;break;case Ta:t=this.InterpolantFactoryMethodLinear;break;case Vc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ea;case this.InterpolantFactoryMethodLinear:return Ta;case this.InterpolantFactoryMethodSmooth:return Vc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,l=i-1;for(;s!==i&&n[s]<e;)++s;for(;l!==-1&&n[l]>t;)--l;if(++l,s!==0||l!==i){s>=l&&(l=Math.max(l,1),s=l-1);const c=this.getValueSize();this.times=n.slice(s,l),this.values=this.values.slice(s*c,l*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let l=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(l!==null&&l>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,l),e=!1;break}l=u}if(i!==void 0&&R_(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Vc,s=e.length-1;let l=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],f=e[c+1];if(h!==f&&(c!==1||h!==e[0]))if(i)u=!0;else{const p=c*n,m=p-n,v=p+n;for(let y=0;y!==n;++y){const w=t[p+y];if(w!==t[m+y]||w!==t[v+y]){u=!0;break}}}if(u){if(c!==l){e[l]=e[c];const p=c*n,m=l*n;for(let v=0;v!==n;++v)t[m+v]=t[p+v]}++l}}if(s>0){e[l]=e[s];for(let c=s*n,u=l*n,h=0;h!==n;++h)t[u+h]=t[c+h];++l}return l!==e.length?(this.times=e.slice(0,l),this.values=t.slice(0,l*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Ci.prototype.TimeBufferType=Float32Array;Ci.prototype.ValueBufferType=Float32Array;Ci.prototype.DefaultInterpolation=Ta;class Es extends Ci{}Es.prototype.ValueTypeName="bool";Es.prototype.ValueBufferType=Array;Es.prototype.DefaultInterpolation=Ea;Es.prototype.InterpolantFactoryMethodLinear=void 0;Es.prototype.InterpolantFactoryMethodSmooth=void 0;class Qd extends Ci{}Qd.prototype.ValueTypeName="color";class Fa extends Ci{}Fa.prototype.ValueTypeName="number";class I_ extends Ya{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let f=h+c;h!==f;h+=4)Nt.slerpFlat(s,0,l,h-c,l,h,u);return s}}class Lo extends Ci{InterpolantFactoryMethodLinear(e){return new I_(this.times,this.values,this.getValueSize(),e)}}Lo.prototype.ValueTypeName="quaternion";Lo.prototype.DefaultInterpolation=Ta;Lo.prototype.InterpolantFactoryMethodSmooth=void 0;class Ts extends Ci{}Ts.prototype.ValueTypeName="string";Ts.prototype.ValueBufferType=Array;Ts.prototype.DefaultInterpolation=Ea;Ts.prototype.InterpolantFactoryMethodLinear=void 0;Ts.prototype.InterpolantFactoryMethodSmooth=void 0;class za extends Ci{}za.prototype.ValueTypeName="vector";class Ba{constructor(e,t=-1,n,i=iu){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=ri(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let l=0,c=n.length;l!==c;++l)t.push(KT(n[l]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,l=n.length;s!==l;++s)t.push(Ci.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,l=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const f=P_(u);u=ud(u,1,f),h=ud(h,1,f),!i&&u[0]===0&&(u.push(s),h.push(h[0])),l.push(new Fa(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,l)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],f=h.name.match(s);if(f&&f.length>1){const p=f[1];let m=i[p];m||(i[p]=m=[]),m.push(h)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return l}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,v,y,w){if(v.length!==0){const x=[],_=[];Zd(v,x,_,y),x.length!==0&&w.push(new p(m,x,_))}},i=[],s=e.name||"default",l=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const v={};let y;for(y=0;y<m.length;y++)if(m[y].morphTargets)for(let w=0;w<m[y].morphTargets.length;w++)v[m[y].morphTargets[w]]=-1;for(const w in v){const x=[],_=[];for(let E=0;E!==m[y].morphTargets.length;++E){const M=m[y];x.push(M.time),_.push(M.morphTarget===w?1:0)}i.push(new Fa(".morphTargetInfluence["+w+"]",x,_))}u=v.length*l}else{const v=".bones["+t[p].name+"]";n(za,v+".position",m,"pos",i),n(Lo,v+".quaternion",m,"rot",i),n(za,v+".scale",m,"scl",i)}}return i.length===0?null:new this(s,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function JT(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Fa;case"vector":case"vector2":case"vector3":case"vector4":return za;case"color":return Qd;case"quaternion":return Lo;case"bool":case"boolean":return Es;case"string":return Ts}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function KT(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=JT(r.type);if(r.times===void 0){const t=[],n=[];Zd(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const Ms={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class Jd{constructor(e,t,n){const i=this;let s=!1,l=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(f){c++,s===!1&&i.onStart!==void 0&&i.onStart(f,l,c),s=!0},this.itemEnd=function(f){l++,i.onProgress!==void 0&&i.onProgress(f,l,c),l===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(f){i.onError!==void 0&&i.onError(f)},this.resolveURL=function(f){return u?u(f):f},this.setURLModifier=function(f){return u=f,this},this.addHandler=function(f,p){return h.push(f,p),this},this.removeHandler=function(f){const p=h.indexOf(f);return p!==-1&&h.splice(p,2),this},this.getHandler=function(f){for(let p=0,m=h.length;p<m;p+=2){const v=h[p],y=h[p+1];if(v.global&&(v.lastIndex=0),v.test(f))return y}return null}}}const D_=new Jd;class Zn{constructor(e){this.manager=e!==void 0?e:D_,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Zn.DEFAULT_MATERIAL_NAME="__DEFAULT";const lr={};class $T extends Error{constructor(e,t){super(e),this.response=t}}class mr extends Zn{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=Ms.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(lr[e]!==void 0){lr[e].push({onLoad:t,onProgress:n,onError:i});return}lr[e]=[],lr[e].push({onLoad:t,onProgress:n,onError:i});const l=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(l).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const f=lr[e],p=h.body.getReader(),m=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),v=m?parseInt(m):0,y=v!==0;let w=0;const x=new ReadableStream({start(_){E();function E(){p.read().then(({done:M,value:b})=>{if(M)_.close();else{w+=b.byteLength;const R=new ProgressEvent("progress",{lengthComputable:y,loaded:w,total:v});for(let P=0,I=f.length;P<I;P++){const z=f[P];z.onProgress&&z.onProgress(R)}_.enqueue(b),E()}})}}});return new Response(x)}else throw new $T(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(f=>new DOMParser().parseFromString(f,c));case"json":return h.json();default:if(c===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),m=p&&p[1]?p[1].toLowerCase():void 0,v=new TextDecoder(m);return h.arrayBuffer().then(y=>v.decode(y))}}}).then(h=>{Ms.add(e,h);const f=lr[e];delete lr[e];for(let p=0,m=f.length;p<m;p++){const v=f[p];v.onLoad&&v.onLoad(h)}}).catch(h=>{const f=lr[e];if(f===void 0)throw this.manager.itemError(e),h;delete lr[e];for(let p=0,m=f.length;p<m;p++){const v=f[p];v.onError&&v.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class eb extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new mr(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Ba.parse(e[n]);t.push(i)}return t}}class tb extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=[],c=new fu,u=new mr(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function f(p){u.load(e[p],function(m){const v=s.parse(m,!0);l[p]={width:v.width,height:v.height,format:v.format,mipmaps:v.mipmaps},h+=1,h===6&&(v.mipmapCount===1&&(c.minFilter=rn),c.image=l,c.format=v.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)f(p);else u.load(e,function(p){const m=s.parse(p,!0);if(m.isCubemap){const v=m.mipmaps.length/m.mipmapCount;for(let y=0;y<v;y++){l[y]={mipmaps:[]};for(let w=0;w<m.mipmapCount;w++)l[y].mipmaps.push(m.mipmaps[y*m.mipmapCount+w]),l[y].format=m.format,l[y].width=m.width,l[y].height=m.height}c.image=l}else c.image.width=m.width,c.image.height=m.height,c.mipmaps=m.mipmaps;m.mipmapCount===1&&(c.minFilter=rn),c.format=m.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class ka extends Zn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=Ms.get(e);if(l!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l;const c=Ia("img");function u(){f(),Ms.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(p){f(),i&&i(p),s.manager.itemError(e),s.manager.itemEnd(e)}function f(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class nb extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=new Wa;s.colorSpace=hn;const l=new ka(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function u(h){l.load(e[h],function(f){s.images[h]=f,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return s}}class ib extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new xo,c=new mr(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){let h;try{h=s.parse(u)}catch(f){if(i!==void 0)i(f);else{console.error(f);return}}h.image!==void 0?l.image=h.image:h.data!==void 0&&(l.image.width=h.width,l.image.height=h.height,l.image.data=h.data),l.wrapS=h.wrapS!==void 0?h.wrapS:In,l.wrapT=h.wrapT!==void 0?h.wrapT:In,l.magFilter=h.magFilter!==void 0?h.magFilter:rn,l.minFilter=h.minFilter!==void 0?h.minFilter:rn,l.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0?l.colorSpace=h.colorSpace:h.encoding!==void 0&&(l.encoding=h.encoding),h.flipY!==void 0&&(l.flipY=h.flipY),h.format!==void 0&&(l.format=h.format),h.type!==void 0&&(l.type=h.type),h.mipmaps!==void 0&&(l.mipmaps=h.mipmaps,l.minFilter=zr),h.mipmapCount===1&&(l.minFilter=rn),h.generateMipmaps!==void 0&&(l.generateMipmaps=h.generateMipmaps),l.needsUpdate=!0,t&&t(l,h)},n,i),l}}class rb extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=new sn,l=new ka(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class Hr extends bt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Be(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class N_ extends Hr{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(bt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Be(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const ff=new dt,Qg=new D,Jg=new D;class Kd{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new me(512,512),this.map=null,this.mapPass=null,this.matrix=new dt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new ou,this._frameExtents=new me(1,1),this._viewportCount=1,this._viewports=[new zt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Qg.setFromMatrixPosition(e.matrixWorld),t.position.copy(Qg),Jg.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Jg),t.updateMatrixWorld(),ff.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ff),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(ff)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class sb extends Kd{constructor(){super(new qt(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=Mo*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class U_ extends Hr{constructor(e,t,n=0,i=Math.PI/3,s=0,l=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(bt.DEFAULT_UP),this.updateMatrix(),this.target=new bt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=l,this.map=null,this.shadow=new sb}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const Kg=new dt,la=new D,df=new D;class ob extends Kd{constructor(){super(new qt(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new me(4,2),this._viewportCount=6,this._viewports=[new zt(2,1,1,1),new zt(0,1,1,1),new zt(3,1,1,1),new zt(1,1,1,1),new zt(3,0,1,1),new zt(1,0,1,1)],this._cubeDirections=[new D(1,0,0),new D(-1,0,0),new D(0,0,1),new D(0,0,-1),new D(0,1,0),new D(0,-1,0)],this._cubeUps=[new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,0,1),new D(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),la.setFromMatrixPosition(e.matrixWorld),n.position.copy(la),df.copy(n.position),df.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(df),n.updateMatrixWorld(),i.makeTranslation(-la.x,-la.y,-la.z),Kg.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Kg)}}class O_ extends Hr{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new ob}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class ab extends Kd{constructor(){super(new Wi(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class F_ extends Hr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(bt.DEFAULT_UP),this.updateMatrix(),this.target=new bt,this.shadow=new ab}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class z_ extends Hr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class B_ extends Hr{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class k_{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new D)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.282095),t.addScaledVector(l[1],.488603*i),t.addScaledVector(l[2],.488603*s),t.addScaledVector(l[3],.488603*n),t.addScaledVector(l[4],1.092548*(n*i)),t.addScaledVector(l[5],1.092548*(i*s)),t.addScaledVector(l[6],.315392*(3*s*s-1)),t.addScaledVector(l[7],1.092548*(n*s)),t.addScaledVector(l[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.886227),t.addScaledVector(l[1],2*.511664*i),t.addScaledVector(l[2],2*.511664*s),t.addScaledVector(l[3],2*.511664*n),t.addScaledVector(l[4],2*.429043*n*i),t.addScaledVector(l[5],2*.429043*i*s),t.addScaledVector(l[6],.743125*s*s-.247708),t.addScaledVector(l[7],2*.429043*n*s),t.addScaledVector(l[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class H_ extends Hr{constructor(e=new k_,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class bu extends Zn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,l=new mr(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=bu.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Be().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const l=e.uniforms[s];switch(i.uniforms[s]={},l.type){case"t":i.uniforms[s].value=n(l.value);break;case"c":i.uniforms[s].value=new Be().setHex(l.value);break;case"v2":i.uniforms[s].value=new me().fromArray(l.value);break;case"v3":i.uniforms[s].value=new D().fromArray(l.value);break;case"v4":i.uniforms[s].value=new zt().fromArray(l.value);break;case"m3":i.uniforms[s].value=new Mt().fromArray(l.value);break;case"m4":i.uniforms[s].value=new dt().fromArray(l.value);break;default:i.uniforms[s].value=l.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new me().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new me().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:y_,SpriteMaterial:zd,RawShaderMaterial:x_,ShaderMaterial:qi,PointsMaterial:kd,MeshPhysicalMaterial:S_,MeshStandardMaterial:qd,MeshPhongMaterial:M_,MeshToonMaterial:w_,MeshNormalMaterial:E_,MeshLambertMaterial:T_,MeshDepthMaterial:Nd,MeshDistanceMaterial:Ud,MeshBasicMaterial:ji,MeshMatcapMaterial:b_,LineDashedMaterial:A_,LineBasicMaterial:Nn,Material:Dn};return new t[e]}}class hd{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class V_ extends vt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class G_ extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new mr(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(v,y){if(t[y]!==void 0)return t[y];const x=v.interleavedBuffers[y],_=s(v,x.buffer),E=po(x.type,_),M=new uu(E,x.stride);return M.uuid=x.uuid,t[y]=M,M}function s(v,y){if(n[y]!==void 0)return n[y];const x=v.arrayBuffers[y],_=new Uint32Array(x).buffer;return n[y]=_,_}const l=e.isInstancedBufferGeometry?new V_:new vt,c=e.data.index;if(c!==void 0){const v=po(c.type,c.array);l.setIndex(new kt(v,1))}const u=e.data.attributes;for(const v in u){const y=u[v];let w;if(y.isInterleavedBufferAttribute){const x=i(e.data,y.data);w=new xs(x,y.itemSize,y.offset,y.normalized)}else{const x=po(y.type,y.array),_=y.isInstancedBufferAttribute?Eo:kt;w=new _(x,y.itemSize,y.normalized)}y.name!==void 0&&(w.name=y.name),y.usage!==void 0&&w.setUsage(y.usage),y.updateRange!==void 0&&(w.updateRange.offset=y.updateRange.offset,w.updateRange.count=y.updateRange.count),l.setAttribute(v,w)}const h=e.data.morphAttributes;if(h)for(const v in h){const y=h[v],w=[];for(let x=0,_=y.length;x<_;x++){const E=y[x];let M;if(E.isInterleavedBufferAttribute){const b=i(e.data,E.data);M=new xs(b,E.itemSize,E.offset,E.normalized)}else{const b=po(E.type,E.array);M=new kt(b,E.itemSize,E.normalized)}E.name!==void 0&&(M.name=E.name),w.push(M)}l.morphAttributes[v]=w}e.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let v=0,y=p.length;v!==y;++v){const w=p[v];l.addGroup(w.start,w.count,w.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const v=new D;m.center!==void 0&&v.fromArray(m.center),l.boundingSphere=new Ri(v,m.radius)}return e.name&&(l.name=e.name),e.userData&&(l.userData=e.userData),l}}class lb extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=this.path===""?hd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||l;const c=new mr(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const f=h.metadata;if(f===void 0||f.type===void 0||f.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?hd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new mr(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const l=await s.loadAsync(e,t),c=JSON.parse(l),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),l=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,l),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,n),f=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,f),t!==void 0){let p=!1;for(const m in l)if(l[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),l=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,l),u=this.parseObject(e.object,i,c,l,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new _s().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=new hu().fromJSON(e[s],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new G_;for(let s=0,l=e.length;s<l;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in jg?c=jg[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new bu;s.setTextures(t);for(let l=0,c=e.length;l<c;l++){const u=e[l];n[u.uuid]===void 0&&(n[u.uuid]=s.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=Ba.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function l(u){return n.manager.itemStart(u),s.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return l(f)}else return u.data?{data:po(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new Jd(t);s=new ka(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,f=e.length;h<f;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const v=[];for(let y=0,w=m.length;y<w;y++){const x=m[y],_=c(x);_!==null&&(_ instanceof HTMLImageElement?v.push(_):v.push(new xo(_.data,_.width,_.height)))}i[p.uuid]=new ds(v)}else{const v=c(p.url);i[p.uuid]=new ds(v)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return l.data?{data:po(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){i=new ka(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=e.length;l<c;l++){const u=e[l],h=u.url;if(Array.isArray(h)){const f=[];for(let p=0,m=h.length;p<m;p++){const v=h[p],y=await s(v);y!==null&&(y instanceof HTMLImageElement?f.push(y):f.push(new xo(y.data,y.width,y.height)))}n[u.uuid]=new ds(f)}else{const f=await s(u.url);n[u.uuid]=new ds(f)}}}return n}parseTextures(e,t){function n(s,l){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),l[s])}const i={};if(e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=e[s];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let f;Array.isArray(h)?(f=new Wa,h.length===6&&(f.needsUpdate=!0)):(h&&h.data?f=new xo:f=new sn,h&&(f.needsUpdate=!0)),f.source=u,f.uuid=c.uuid,c.name!==void 0&&(f.name=c.name),c.mapping!==void 0&&(f.mapping=n(c.mapping,cb)),c.channel!==void 0&&(f.channel=c.channel),c.offset!==void 0&&f.offset.fromArray(c.offset),c.repeat!==void 0&&f.repeat.fromArray(c.repeat),c.center!==void 0&&f.center.fromArray(c.center),c.rotation!==void 0&&(f.rotation=c.rotation),c.wrap!==void 0&&(f.wrapS=n(c.wrap[0],$g),f.wrapT=n(c.wrap[1],$g)),c.format!==void 0&&(f.format=c.format),c.internalFormat!==void 0&&(f.internalFormat=c.internalFormat),c.type!==void 0&&(f.type=c.type),c.colorSpace!==void 0&&(f.colorSpace=c.colorSpace),c.encoding!==void 0&&(f.encoding=c.encoding),c.minFilter!==void 0&&(f.minFilter=n(c.minFilter,e0)),c.magFilter!==void 0&&(f.magFilter=n(c.magFilter,e0)),c.anisotropy!==void 0&&(f.anisotropy=c.anisotropy),c.flipY!==void 0&&(f.flipY=c.flipY),c.generateMipmaps!==void 0&&(f.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(f.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(f.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(f.compareFunction=c.compareFunction),c.userData!==void 0&&(f.userData=c.userData),i[c.uuid]=f}return i}parseObject(e,t,n,i,s){let l;function c(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function u(m){if(m!==void 0){if(Array.isArray(m)){const v=[];for(let y=0,w=m.length;y<w;y++){const x=m[y];n[x]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",x),v.push(n[x])}return v}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),i[m]}let f,p;switch(e.type){case"Scene":l=new Fd,e.background!==void 0&&(Number.isInteger(e.background)?l.background=new Be(e.background):l.background=h(e.background)),e.environment!==void 0&&(l.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?l.fog=new cu(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(l.fog=new lu(e.fog.color,e.fog.density)),e.fog.name!==""&&(l.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(l.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":l=new qt(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(l.focus=e.focus),e.zoom!==void 0&&(l.zoom=e.zoom),e.filmGauge!==void 0&&(l.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(l.filmOffset=e.filmOffset),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"OrthographicCamera":l=new Wi(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(l.zoom=e.zoom),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"AmbientLight":l=new z_(e.color,e.intensity);break;case"DirectionalLight":l=new F_(e.color,e.intensity);break;case"PointLight":l=new O_(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":l=new B_(e.color,e.intensity,e.width,e.height);break;case"SpotLight":l=new U_(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":l=new N_(e.color,e.groundColor,e.intensity);break;case"LightProbe":l=new H_().fromJSON(e);break;case"SkinnedMesh":f=c(e.geometry),p=u(e.material),l=new s_(f,p),e.bindMode!==void 0&&(l.bindMode=e.bindMode),e.bindMatrix!==void 0&&l.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(l.skeleton=e.skeleton);break;case"Mesh":f=c(e.geometry),p=u(e.material),l=new Ve(f,p);break;case"InstancedMesh":f=c(e.geometry),p=u(e.material);const m=e.count,v=e.instanceMatrix,y=e.instanceColor;l=new o_(f,p,m),l.instanceMatrix=new Eo(new Float32Array(v.array),16),y!==void 0&&(l.instanceColor=new Eo(new Float32Array(y.array),y.itemSize));break;case"LOD":l=new r_;break;case"Line":l=new Et(c(e.geometry),u(e.material));break;case"LineLoop":l=new a_(c(e.geometry),u(e.material));break;case"LineSegments":l=new Qi(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":l=new l_(c(e.geometry),u(e.material));break;case"Sprite":l=new i_(u(e.material));break;case"Group":l=new go;break;case"Bone":l=new Bd;break;default:l=new bt}if(l.uuid=e.uuid,e.name!==void 0&&(l.name=e.name),e.matrix!==void 0?(l.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=e.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(e.position!==void 0&&l.position.fromArray(e.position),e.rotation!==void 0&&l.rotation.fromArray(e.rotation),e.quaternion!==void 0&&l.quaternion.fromArray(e.quaternion),e.scale!==void 0&&l.scale.fromArray(e.scale)),e.up!==void 0&&l.up.fromArray(e.up),e.castShadow!==void 0&&(l.castShadow=e.castShadow),e.receiveShadow!==void 0&&(l.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(l.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(l.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(l.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(l.visible=e.visible),e.frustumCulled!==void 0&&(l.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(l.renderOrder=e.renderOrder),e.userData!==void 0&&(l.userData=e.userData),e.layers!==void 0&&(l.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let v=0;v<m.length;v++)l.add(this.parseObject(m[v],t,n,i,s))}if(e.animations!==void 0){const m=e.animations;for(let v=0;v<m.length;v++){const y=m[v];l.animations.push(s[y])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(l.autoUpdate=e.autoUpdate);const m=e.levels;for(let v=0;v<m.length;v++){const y=m[v],w=l.getObjectByProperty("uuid",y.object);w!==void 0&&l.addLevel(w,y.distance,y.hysteresis)}}return l}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const cb={UVMapping:tu,CubeReflectionMapping:pr,CubeRefractionMapping:Fr,EquirectangularReflectionMapping:xa,EquirectangularRefractionMapping:Sa,CubeUVReflectionMapping:Ao},$g={RepeatWrapping:Ma,ClampToEdgeWrapping:In,MirroredRepeatWrapping:wa},e0={NearestFilter:nn,NearestMipmapNearestFilter:qc,NearestMipmapLinearFilter:pa,LinearFilter:rn,LinearMipmapNearestFilter:yd,LinearMipmapLinearFilter:zr};class ub extends Zn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=Ms.get(e);if(l!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l;const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader,fetch(e,c).then(function(u){return u.blob()}).then(function(u){return createImageBitmap(u,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(u){Ms.add(e,u),t&&t(u),s.manager.itemEnd(e)}).catch(function(u){i&&i(u),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}let Ac;class $d{static getContext(){return Ac===void 0&&(Ac=new(window.AudioContext||window.webkitAudioContext)),Ac}static setContext(e){Ac=e}}class hb extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new mr(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(u){try{const h=u.slice(0);$d.getContext().decodeAudioData(h,function(p){t(p)},c)}catch(h){c(h)}},n,i);function c(u){i?i(u):console.error(u),s.manager.itemError(e)}}}const t0=new dt,n0=new dt,ts=new dt;class fb{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new qt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new qt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,ts.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,l=t.near*Math.tan(gs*t.fov*.5)/t.zoom;let c,u;n0.elements[12]=-i,t0.elements[12]=i,c=-l*t.aspect+s,u=l*t.aspect+s,ts.elements[0]=2*t.near/(u-c),ts.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(ts),c=-l*t.aspect-s,u=l*t.aspect-s,ts.elements[0]=2*t.near/(u-c),ts.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(ts)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(n0),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(t0)}}class ep{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=i0(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=i0();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function i0(){return(typeof performance>"u"?Date:performance).now()}const ns=new D,r0=new Nt,db=new D,is=new D;class pb extends bt{constructor(){super(),this.type="AudioListener",this.context=$d.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new ep}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(ns,r0,db),is.set(0,0,-1).applyQuaternion(r0),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(ns.x,i),t.positionY.linearRampToValueAtTime(ns.y,i),t.positionZ.linearRampToValueAtTime(ns.z,i),t.forwardX.linearRampToValueAtTime(is.x,i),t.forwardY.linearRampToValueAtTime(is.y,i),t.forwardZ.linearRampToValueAtTime(is.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(ns.x,ns.y,ns.z),t.setOrientation(is.x,is.y,is.z,n.x,n.y,n.z)}}class W_ extends bt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const rs=new D,s0=new Nt,mb=new D,ss=new D;class gb extends W_{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(rs,s0,mb),ss.set(0,0,1).applyQuaternion(s0);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(rs.x,n),t.positionY.linearRampToValueAtTime(rs.y,n),t.positionZ.linearRampToValueAtTime(rs.z,n),t.orientationX.linearRampToValueAtTime(ss.x,n),t.orientationY.linearRampToValueAtTime(ss.y,n),t.orientationZ.linearRampToValueAtTime(ss.z,n)}else t.setPosition(rs.x,rs.y,rs.z),t.setOrientation(ss.x,ss.y,ss.z)}}class vb{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class X_{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,l;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[s+c]=n[c];l=t}else{l+=t;const c=t/l;this._mixBufferRegion(n,s,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-s,t)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,l=i;s!==l;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let l=0;l!==s;++l)e[t+l]=e[n+l]}_slerp(e,t,n,i){Nt.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const l=this._workIndex*s;Nt.multiplyQuaternionsFlat(e,l,e,t,e,n),Nt.slerpFlat(e,t,e,t,e,l,i)}_lerp(e,t,n,i,s){const l=1-i;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*l+e[n+c]*i}}_lerpAdditive(e,t,n,i,s){for(let l=0;l!==s;++l){const c=t+l;e[c]=e[c]+e[n+l]*i}}}const tp="\\[\\]\\.:\\/",_b=new RegExp("["+tp+"]","g"),np="[^"+tp+"]",yb="[^"+tp.replace("\\.","")+"]",xb=/((?:WC+[\/:])*)/.source.replace("WC",np),Sb=/(WCOD+)?/.source.replace("WCOD",yb),Mb=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",np),wb=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",np),Eb=new RegExp("^"+xb+Sb+Mb+wb+"$"),Tb=["material","materials","bones","map"];class bb{constructor(e,t,n){const i=n||Ct.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Ct{constructor(e,t,n){this.path=t,this.parsedPath=n||Ct.parseTrackName(t),this.node=Ct.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Ct.Composite(e,t,n):new Ct(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(_b,"")}static parseTrackName(e){const t=Eb.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);Tb.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let l=0;l<s.length;l++){const c=s[l];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=Ct.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let f=0;f<e.length;f++)if(e[f].name===h){h=f;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const l=e[i];if(l===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=s}else l.fromArray!==void 0&&l.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(u=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Ct.Composite=bb;Ct.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Ct.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Ct.prototype.GetterByBindingType=[Ct.prototype._getValue_direct,Ct.prototype._getValue_array,Ct.prototype._getValue_arrayElement,Ct.prototype._getValue_toArray];Ct.prototype.SetterByBindingTypeAndVersioning=[[Ct.prototype._setValue_direct,Ct.prototype._setValue_direct_setNeedsUpdate,Ct.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ct.prototype._setValue_array,Ct.prototype._setValue_array_setNeedsUpdate,Ct.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ct.prototype._setValue_arrayElement,Ct.prototype._setValue_arrayElement_setNeedsUpdate,Ct.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ct.prototype._setValue_fromArray,Ct.prototype._setValue_fromArray_setNeedsUpdate,Ct.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Ab{constructor(){this.isAnimationObjectGroup=!0,this.uuid=ri(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,l=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let f=0,p=arguments.length;f!==p;++f){const m=arguments[f],v=m.uuid;let y=t[v];if(y===void 0){y=u++,t[v]=y,e.push(m);for(let w=0,x=l;w!==x;++w)s[w].push(new Ct(m,n[w],i[w]))}else if(y<h){c=e[y];const w=--h,x=e[w];t[x.uuid]=y,e[y]=x,t[v]=w,e[w]=m;for(let _=0,E=l;_!==E;++_){const M=s[_],b=M[w];let R=M[y];M[y]=b,R===void 0&&(R=new Ct(m,n[_],i[_])),M[w]=R}}else e[y]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const u=arguments[l],h=u.uuid,f=t[h];if(f!==void 0&&f>=s){const p=s++,m=e[p];t[m.uuid]=f,e[f]=m,t[h]=p,e[p]=u;for(let v=0,y=i;v!==y;++v){const w=n[v],x=w[p],_=w[f];w[f]=x,w[p]=_}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,l=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],f=h.uuid,p=t[f];if(p!==void 0)if(delete t[f],p<s){const m=--s,v=e[m],y=--l,w=e[y];t[v.uuid]=p,e[p]=v,t[w.uuid]=m,e[m]=w,e.pop();for(let x=0,_=i;x!==_;++x){const E=n[x],M=E[m],b=E[y];E[p]=M,E[m]=b,E.pop()}}else{const m=--l,v=e[m];m>0&&(t[v.uuid]=p),e[p]=v,e.pop();for(let y=0,w=i;y!==w;++y){const x=n[y];x[p]=x[m],x.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const l=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,f=this.nCachedObjects_,p=new Array(h);i=s.length,n[e]=i,l.push(e),c.push(t),s.push(p);for(let m=f,v=u.length;m!==v;++m){const y=u[m];p[m]=new Ct(y,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,l=this._bindings,c=l.length-1,u=l[c],h=e[c];t[h]=n,l[n]=u,l.pop(),s[n]=s[c],s.pop(),i[n]=i[c],i.pop()}}}class Y_{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,l=s.length,c=new Array(l),u={endingStart:hs,endingEnd:hs};for(let h=0;h!==l;++h){const f=s[h].createInterpolant(null);c[h]=f,f.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Tv,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,l=s/i,c=i/s;e.warp(1,l,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+n,h[0]=e/l,h[1]=t/l,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const l=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case bd:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(l),h[f].accumulateAdditive(c);break;case iu:default:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(l),h[f].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const l=n===bv;if(e===0)return s===-1?i:l&&(s&1)===1?t-i:i;if(n===Ev){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,l)}else this._setEndings(!1,!1,l);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=fs,i.endingEnd=fs):(e?i.endingStart=this.zeroSlopeAtStart?fs:hs:i.endingStart=ba,t?i.endingEnd=this.zeroSlopeAtEnd?fs:hs:i.endingEnd=ba)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,u=l.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=n,this}}const Rb=new Float32Array(1);class Pb extends gr{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,l=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let f=h[u];f===void 0&&(f={},h[u]=f);for(let p=0;p!==s;++p){const m=i[p],v=m.name;let y=f[v];if(y!==void 0)++y.referenceCount,l[p]=y;else{if(y=l[p],y!==void 0){y._cacheIndex===null&&(++y.referenceCount,this._addInactiveBinding(y,u,v));continue}const w=t&&t._propertyBindings[p].binding.parsedPath;y=new X_(Ct.create(n,v,w),m.ValueTypeName,m.getValueSize()),++y.referenceCount,this._addInactiveBinding(y,u,v),l[p]=y}c[p].resultBuffer=y.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let l=s[t];if(l===void 0)l={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=l;else{const c=l.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),l.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,l=this._actionsByClip,c=l[s],u=c.knownActions,h=u[u.length-1],f=e._byClipCacheIndex;h._byClipCacheIndex=f,u[f]=h,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],u.length===0&&delete l[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let l=i[t];l===void 0&&(l={},i[t]=l),l[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,l=this._bindingsByRootAndName,c=l[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete l[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new jd(new Float32Array(2),new Float32Array(2),1,Rb),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let l=typeof e=="string"?Ba.findByName(i,e):e;const c=l!==null?l.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(l!==null?n=l.blendMode:n=iu),u!==void 0){const p=u.actionByRoot[s];if(p!==void 0&&p.blendMode===n)return p;h=u.knownActions[0],l===null&&(l=h._clip)}if(l===null)return null;const f=new Y_(this,l,t,n);return this._bindAction(f,h),this._addInactiveAction(f,c,s),f}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?Ba.findByName(n,e):e,l=s?s.uuid:e,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),l=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,l);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(l);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const l=s.knownActions;for(let c=0,u=l.length;c!==u;++c){const h=l[c];this._deactivateAction(h);const f=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=f,t[f]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const l in s){const c=s[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class ip{constructor(e){this.value=e}clone(){return new ip(this.value.clone===void 0?this.value:this.value.clone())}}let Cb=0;class Lb extends gr{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:Cb++}),this.name="",this.usage=Ca,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class Ib extends uu{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class Db{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class rp{constructor(e,t,n=0,i=1/0){this.ray=new ws(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new vs,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return fd(e,this,n,t),n.sort(o0),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)fd(e[i],this,n,t);return n.sort(o0),n}}function o0(r,e){return r.distance-e.distance}function fd(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,l=i.length;s<l;s++)fd(i[s],e,t,!0)}}class dd{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Kt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class Nb{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const a0=new me;class Ub{constructor(e=new me(1/0,1/0),t=new me(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=a0.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,a0).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const l0=new D,Rc=new D;class Ob{constructor(e=new D,t=new D){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){l0.subVectors(e,this.start),Rc.subVectors(this.end,this.start);const n=Rc.dot(Rc);let s=Rc.dot(l0)/n;return t&&(s=Kt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const c0=new D;class Fb extends bt{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new vt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,u=32;l<u;l++,c++){const h=l/u*Math.PI*2,f=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(f),Math.sin(f),1)}n.setAttribute("position",new Xe(i,3));const s=new Nn({fog:!1,toneMapped:!1});this.cone=new Qi(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),c0.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(c0),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Lr=new D,Pc=new dt,pf=new dt;class zb extends Qi{constructor(e){const t=q_(e),n=new vt,i=[],s=[],l=new Be(0,0,1),c=new Be(0,1,0);for(let h=0;h<t.length;h++){const f=t[h];f.parent&&f.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(l.r,l.g,l.b),s.push(c.r,c.g,c.b))}n.setAttribute("position",new Xe(i,3)),n.setAttribute("color",new Xe(s,3));const u=new Nn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");pf.copy(this.root.matrixWorld).invert();for(let s=0,l=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(Pc.multiplyMatrices(pf,c.matrixWorld),Lr.setFromMatrixPosition(Pc),i.setXYZ(l,Lr.x,Lr.y,Lr.z),Pc.multiplyMatrices(pf,c.parent.matrixWorld),Lr.setFromMatrixPosition(Pc),i.setXYZ(l+1,Lr.x,Lr.y,Lr.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function q_(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,q_(r.children[t]));return e}class Bb extends Ve{constructor(e,t,n){const i=new Co(t,4,2),s=new ji({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const kb=new D,u0=new Be,h0=new Be;class Hb extends bt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new vi(t);i.rotateY(Math.PI*.5),this.material=new ji({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),l=new Float32Array(s.count*3);i.setAttribute("color",new kt(l,3)),this.add(new Ve(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");u0.copy(this.light.color),h0.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?u0:h0;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(kb.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Vb extends Qi{constructor(e=10,t=10,n=4473924,i=8947848){n=new Be(n),i=new Be(i);const s=t/2,l=e/t,c=e/2,u=[],h=[];for(let m=0,v=0,y=-c;m<=t;m++,y+=l){u.push(-c,0,y,c,0,y),u.push(y,0,-c,y,0,c);const w=m===s?n:i;w.toArray(h,v),v+=3,w.toArray(h,v),v+=3,w.toArray(h,v),v+=3,w.toArray(h,v),v+=3}const f=new vt;f.setAttribute("position",new Xe(u,3)),f.setAttribute("color",new Xe(h,3));const p=new Nn({vertexColors:!0,toneMapped:!1});super(f,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class Gb extends Qi{constructor(e=10,t=16,n=8,i=64,s=4473924,l=8947848){s=new Be(s),l=new Be(l);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),v=Math.sin(m)*e,y=Math.cos(m)*e;c.push(0,0,0),c.push(v,0,y);const w=p&1?s:l;u.push(w.r,w.g,w.b),u.push(w.r,w.g,w.b)}for(let p=0;p<n;p++){const m=p&1?s:l,v=e-e/n*p;for(let y=0;y<i;y++){let w=y/i*(Math.PI*2),x=Math.sin(w)*v,_=Math.cos(w)*v;c.push(x,0,_),u.push(m.r,m.g,m.b),w=(y+1)/i*(Math.PI*2),x=Math.sin(w)*v,_=Math.cos(w)*v,c.push(x,0,_),u.push(m.r,m.g,m.b)}}const h=new vt;h.setAttribute("position",new Xe(c,3)),h.setAttribute("color",new Xe(u,3));const f=new Nn({vertexColors:!0,toneMapped:!1});super(h,f),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const f0=new D,Cc=new D,d0=new D;class Wb extends bt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new vt;i.setAttribute("position",new Xe([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Nn({fog:!1,toneMapped:!1});this.lightPlane=new Et(i,s),this.add(this.lightPlane),i=new vt,i.setAttribute("position",new Xe([0,0,0,0,0,1],3)),this.targetLine=new Et(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),f0.setFromMatrixPosition(this.light.matrixWorld),Cc.setFromMatrixPosition(this.light.target.matrixWorld),d0.subVectors(Cc,f0),this.lightPlane.lookAt(Cc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Cc),this.targetLine.scale.z=d0.length()}}const Lc=new D,Jt=new Ga;class Xb extends Qi{constructor(e){const t=new vt,n=new Nn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(y,w){u(y),u(w)}function u(y){i.push(0,0,0),s.push(0,0,0),l[y]===void 0&&(l[y]=[]),l[y].push(i.length/3-1)}t.setAttribute("position",new Xe(i,3)),t.setAttribute("color",new Xe(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const h=new Be(16755200),f=new Be(16711680),p=new Be(43775),m=new Be(16777215),v=new Be(3355443);this.setColors(h,f,p,m,v)}setColors(e,t,n,i,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;Jt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),tn("c",t,e,Jt,0,0,-1),tn("t",t,e,Jt,0,0,1),tn("n1",t,e,Jt,-n,-i,-1),tn("n2",t,e,Jt,n,-i,-1),tn("n3",t,e,Jt,-n,i,-1),tn("n4",t,e,Jt,n,i,-1),tn("f1",t,e,Jt,-n,-i,1),tn("f2",t,e,Jt,n,-i,1),tn("f3",t,e,Jt,-n,i,1),tn("f4",t,e,Jt,n,i,1),tn("u1",t,e,Jt,n*.7,i*1.1,-1),tn("u2",t,e,Jt,-n*.7,i*1.1,-1),tn("u3",t,e,Jt,0,i*2,-1),tn("cf1",t,e,Jt,-n,0,1),tn("cf2",t,e,Jt,n,0,1),tn("cf3",t,e,Jt,0,-i,1),tn("cf4",t,e,Jt,0,i,1),tn("cn1",t,e,Jt,-n,0,-1),tn("cn2",t,e,Jt,n,0,-1),tn("cn3",t,e,Jt,0,-i,-1),tn("cn4",t,e,Jt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function tn(r,e,t,n,i,s,l){Lc.set(i,s,l).unproject(n);const c=e[r];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,f=c.length;h<f;h++)u.setXYZ(c[h],Lc.x,Lc.y,Lc.z)}}const Ic=new Zi;class Yb extends Qi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new vt;s.setIndex(new kt(n,1)),s.setAttribute("position",new kt(i,3)),super(s,new Nn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Ic.setFromObject(this.object),Ic.isEmpty())return;const t=Ic.min,n=Ic.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class qb extends Qi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new vt;s.setIndex(new kt(n,1)),s.setAttribute("position",new Xe(i,3)),super(s,new Nn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class Zb extends Et{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new vt;l.setAttribute("position",new Xe(s,3)),l.computeBoundingSphere(),super(l,new Nn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new vt;u.setAttribute("position",new Xe(c,3)),u.computeBoundingSphere(),this.add(new Ve(u,new ji({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const p0=new D;let Dc,mf;class jb extends bt{constructor(e=new D(0,0,1),t=new D(0,0,0),n=1,i=16776960,s=n*.2,l=s*.2){super(),this.type="ArrowHelper",Dc===void 0&&(Dc=new vt,Dc.setAttribute("position",new Xe([0,0,0,0,1,0],3)),mf=new En(0,.5,1,5,1),mf.translate(0,-.5,0)),this.position.copy(t),this.line=new Et(Dc,new Nn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Ve(mf,new ji({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,l)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{p0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(p0,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class Qb extends Qi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new vt;i.setAttribute("position",new Xe(t,3)),i.setAttribute("color",new Xe(n,3));const s=new Nn({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new Be,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Jb{constructor(){this.type="ShapePath",this.color=new Be,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Da,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,l){return this.currentPath.bezierCurveTo(e,t,n,i,s,l),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(_){const E=[];for(let M=0,b=_.length;M<b;M++){const R=_[M],P=new _s;P.curves=R.curves,E.push(P)}return E}function n(_,E){const M=E.length;let b=!1;for(let R=M-1,P=0;P<M;R=P++){let I=E[R],z=E[P],A=z.x-I.x,C=z.y-I.y;if(Math.abs(C)>Number.EPSILON){if(C<0&&(I=E[P],A=-A,z=E[R],C=-C),_.y<I.y||_.y>z.y)continue;if(_.y===I.y){if(_.x===I.x)return!0}else{const B=C*(_.x-I.x)-A*(_.y-I.y);if(B===0)return!0;if(B<0)continue;b=!b}}else{if(_.y!==I.y)continue;if(z.x<=_.x&&_.x<=I.x||I.x<=_.x&&_.x<=z.x)return!0}}return b}const i=Xi.isClockWise,s=this.subPaths;if(s.length===0)return[];let l,c,u;const h=[];if(s.length===1)return c=s[0],u=new _s,u.curves=c.curves,h.push(u),h;let f=!i(s[0].getPoints());f=e?!f:f;const p=[],m=[];let v=[],y=0,w;m[y]=void 0,v[y]=[];for(let _=0,E=s.length;_<E;_++)c=s[_],w=c.getPoints(),l=i(w),l=e?!l:l,l?(!f&&m[y]&&y++,m[y]={s:new _s,p:w},m[y].s.curves=c.curves,f&&y++,v[y]=[]):v[y].push({h:c,p:w[0]});if(!m[0])return t(s);if(m.length>1){let _=!1,E=0;for(let M=0,b=m.length;M<b;M++)p[M]=[];for(let M=0,b=m.length;M<b;M++){const R=v[M];for(let P=0;P<R.length;P++){const I=R[P];let z=!0;for(let A=0;A<m.length;A++)n(I.p,m[A].p)&&(M!==A&&E++,z?(z=!1,p[A].push(I)):_=!0);z&&p[M].push(I)}}E>0&&_===!1&&(v=p)}let x;for(let _=0,E=m.length;_<E;_++){u=m[_].s,h.push(u),x=v[_];for(let M=0,b=x.length;M<b;M++)u.holes.push(x[M].h)}return h}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:$c}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=$c);const Kb=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:_d,AddEquation:Ir,AddOperation:cv,AdditiveAnimationBlendMode:bd,AdditiveBlending:Tf,AlphaFormat:vv,AlwaysCompare:Fv,AlwaysDepth:nv,AlwaysStencilFunc:nd,AmbientLight:z_,AnimationAction:Y_,AnimationClip:Ba,AnimationLoader:eb,AnimationMixer:Pb,AnimationObjectGroup:Ab,AnimationUtils:QT,ArcCurve:c_,ArrayCamera:$v,ArrowHelper:jb,AttachedBindMode:Cf,Audio:W_,AudioAnalyser:vb,AudioContext:$d,AudioListener:pb,AudioLoader:hb,AxesHelper:Qb,BackSide:Bn,BasicDepthPacking:Av,BasicShadowMap:z0,Bone:Bd,BooleanKeyframeTrack:Es,Box2:Ub,Box3:Zi,Box3Helper:qb,BoxGeometry:Wn,BoxHelper:Yb,BufferAttribute:kt,BufferGeometry:vt,BufferGeometryLoader:G_,ByteType:mv,Cache:Ms,Camera:Ga,CameraHelper:Xb,CanvasTexture:xT,CapsuleGeometry:pu,CatmullRomCurve3:u_,CineonToneMapping:fv,CircleGeometry:mu,ClampToEdgeWrapping:In,Clock:ep,Color:Be,ColorKeyframeTrack:Qd,ColorManagement:Ft,CompressedArrayTexture:_T,CompressedCubeTexture:yT,CompressedTexture:fu,CompressedTextureLoader:tb,ConeGeometry:gu,ConstantAlphaFactor:$0,ConstantColorFactor:J0,CubeCamera:Xv,CubeReflectionMapping:pr,CubeRefractionMapping:Fr,CubeTexture:Wa,CubeTextureLoader:nb,CubeUVReflectionMapping:Ao,CubicBezierCurve:Vd,CubicBezierCurve3:h_,CubicInterpolant:C_,CullFaceBack:Ef,CullFaceFront:F0,CullFaceFrontBack:gx,CullFaceNone:O0,Curve:Pi,CurvePath:d_,CustomBlending:B0,CustomToneMapping:dv,CylinderGeometry:En,Cylindrical:Nb,Data3DTexture:Cd,DataArrayTexture:su,DataTexture:xo,DataTextureLoader:ib,DataUtils:TS,DecrementStencilOp:Rx,DecrementWrapStencilOp:Cx,DefaultLoadingManager:D_,DepthFormat:Ur,DepthStencilFormat:ys,DepthTexture:e_,DetachedBindMode:pv,DirectionalLight:F_,DirectionalLightHelper:Wb,DiscreteInterpolant:L_,DisplayP3ColorSpace:ru,DodecahedronGeometry:vu,DoubleSide:ni,DstAlphaFactor:Y0,DstColorFactor:Z0,DynamicCopyUsage:Xx,DynamicDrawUsage:Bx,DynamicReadUsage:Vx,EdgesGeometry:p_,EllipseCurve:du,EqualCompare:Iv,EqualDepth:rv,EqualStencilFunc:Nx,EquirectangularReflectionMapping:xa,EquirectangularRefractionMapping:Sa,Euler:Ro,EventDispatcher:gr,ExtrudeGeometry:yu,FileLoader:mr,Float16BufferAttribute:LS,Float32BufferAttribute:Xe,Float64BufferAttribute:IS,FloatType:ki,Fog:cu,FogExp2:lu,FramebufferTexture:vT,FrontSide:dr,Frustum:ou,GLBufferAttribute:Db,GLSL1:qx,GLSL3:id,GreaterCompare:Nv,GreaterDepth:ov,GreaterEqualCompare:Ov,GreaterEqualDepth:sv,GreaterEqualStencilFunc:zx,GreaterStencilFunc:Ox,GridHelper:Vb,Group:go,HalfFloatType:So,HemisphereLight:N_,HemisphereLightHelper:Hb,IcosahedronGeometry:xu,ImageBitmapLoader:ub,ImageLoader:ka,ImageUtils:Pd,IncrementStencilOp:Ax,IncrementWrapStencilOp:Px,InstancedBufferAttribute:Eo,InstancedBufferGeometry:V_,InstancedInterleavedBuffer:Ib,InstancedMesh:o_,Int16BufferAttribute:PS,Int32BufferAttribute:CS,Int8BufferAttribute:bS,IntType:xd,InterleavedBuffer:uu,InterleavedBufferAttribute:xs,Interpolant:Ya,InterpolateDiscrete:Ea,InterpolateLinear:Ta,InterpolateSmooth:Vc,InvertStencilOp:Lx,KeepStencilOp:ls,KeyframeTrack:Ci,LOD:r_,LatheGeometry:Xa,Layers:vs,LessCompare:Lv,LessDepth:iv,LessEqualCompare:Dv,LessEqualDepth:ya,LessEqualStencilFunc:Ux,LessStencilFunc:Dx,Light:Hr,LightProbe:H_,Line:Et,Line3:Ob,LineBasicMaterial:Nn,LineCurve:Gd,LineCurve3:f_,LineDashedMaterial:A_,LineLoop:a_,LineSegments:Qi,LinearDisplayP3ColorSpace:Va,LinearEncoding:Ad,LinearFilter:rn,LinearInterpolant:jd,LinearMipMapLinearFilter:Sx,LinearMipMapNearestFilter:xx,LinearMipmapLinearFilter:zr,LinearMipmapNearestFilter:yd,LinearSRGBColorSpace:Yi,LinearToneMapping:uv,LinearTransfer:Aa,Loader:Zn,LoaderUtils:hd,LoadingManager:Jd,LoopOnce:Ev,LoopPingPong:bv,LoopRepeat:Tv,LuminanceAlphaFormat:yv,LuminanceFormat:_v,MOUSE:os,Material:Dn,MaterialLoader:bu,MathUtils:aS,Matrix3:Mt,Matrix4:dt,MaxEquation:Pf,Mesh:Ve,MeshBasicMaterial:ji,MeshDepthMaterial:Nd,MeshDistanceMaterial:Ud,MeshLambertMaterial:T_,MeshMatcapMaterial:b_,MeshNormalMaterial:E_,MeshPhongMaterial:M_,MeshPhysicalMaterial:S_,MeshStandardMaterial:qd,MeshToonMaterial:w_,MinEquation:Rf,MirroredRepeatWrapping:wa,MixOperation:lv,MultiplyBlending:Af,MultiplyOperation:Ha,NearestFilter:nn,NearestMipMapLinearFilter:yx,NearestMipMapNearestFilter:_x,NearestMipmapLinearFilter:pa,NearestMipmapNearestFilter:qc,NeverCompare:Cv,NeverDepth:tv,NeverStencilFunc:Ix,NoBlending:fr,NoColorSpace:ii,NoToneMapping:Vi,NormalAnimationBlendMode:iu,NormalBlending:ms,NotEqualCompare:Uv,NotEqualDepth:av,NotEqualStencilFunc:Fx,NumberKeyframeTrack:Fa,Object3D:bt,ObjectLoader:lb,ObjectSpaceNormalMap:Pv,OctahedronGeometry:vi,OneFactor:G0,OneMinusConstantAlphaFactor:ev,OneMinusConstantColorFactor:K0,OneMinusDstAlphaFactor:q0,OneMinusDstColorFactor:j0,OneMinusSrcAlphaFactor:Yc,OneMinusSrcColorFactor:X0,OrthographicCamera:Wi,P3Primaries:Pa,PCFShadowMap:eu,PCFSoftShadowMap:da,PMREMGenerator:sd,Path:Da,PerspectiveCamera:qt,Plane:cr,PlaneGeometry:_i,PlaneHelper:Zb,PointLight:O_,PointLightHelper:Bb,Points:l_,PointsMaterial:kd,PolarGridHelper:Gb,PolyhedronGeometry:kr,PositionalAudio:gb,PropertyBinding:Ct,PropertyMixer:X_,QuadraticBezierCurve:Wd,QuadraticBezierCurve3:Xd,Quaternion:Nt,QuaternionKeyframeTrack:Lo,QuaternionLinearInterpolant:I_,RED_GREEN_RGTC2_Format:ed,RED_RGTC1_Format:wv,REVISION:$c,RGBADepthPacking:Rv,RGBAFormat:Yn,RGBAIntegerFormat:Td,RGBA_ASTC_10x10_Format:Zf,RGBA_ASTC_10x5_Format:Xf,RGBA_ASTC_10x6_Format:Yf,RGBA_ASTC_10x8_Format:qf,RGBA_ASTC_12x10_Format:jf,RGBA_ASTC_12x12_Format:Qf,RGBA_ASTC_4x4_Format:Ff,RGBA_ASTC_5x4_Format:zf,RGBA_ASTC_5x5_Format:Bf,RGBA_ASTC_6x5_Format:kf,RGBA_ASTC_6x6_Format:Hf,RGBA_ASTC_8x5_Format:Vf,RGBA_ASTC_8x6_Format:Gf,RGBA_ASTC_8x8_Format:Wf,RGBA_BPTC_Format:Hc,RGBA_ETC2_EAC_Format:Of,RGBA_PVRTC_2BPPV1_Format:Nf,RGBA_PVRTC_4BPPV1_Format:Df,RGBA_S3TC_DXT1_Format:zc,RGBA_S3TC_DXT3_Format:Bc,RGBA_S3TC_DXT5_Format:kc,RGB_BPTC_SIGNED_Format:Jf,RGB_BPTC_UNSIGNED_Format:Kf,RGB_ETC1_Format:Mv,RGB_ETC2_Format:Uf,RGB_PVRTC_2BPPV1_Format:If,RGB_PVRTC_4BPPV1_Format:Lf,RGB_S3TC_DXT1_Format:Fc,RGFormat:Sv,RGIntegerFormat:Ed,RawShaderMaterial:x_,Ray:ws,Raycaster:rp,Rec709Primaries:Ra,RectAreaLight:B_,RedFormat:xv,RedIntegerFormat:wd,ReinhardToneMapping:hv,RenderTarget:Hv,RepeatWrapping:Ma,ReplaceStencilOp:bx,ReverseSubtractEquation:H0,RingGeometry:Su,SIGNED_RED_GREEN_RGTC2_Format:td,SIGNED_RED_RGTC1_Format:$f,SRGBColorSpace:hn,SRGBTransfer:Ht,Scene:Fd,ShaderChunk:_t,ShaderLib:bi,ShaderMaterial:qi,ShadowMaterial:y_,Shape:_s,ShapeGeometry:Mu,ShapePath:Jb,ShapeUtils:Xi,ShortType:gv,Skeleton:hu,SkeletonHelper:zb,SkinnedMesh:s_,Source:ds,Sphere:Ri,SphereGeometry:Co,Spherical:dd,SphericalHarmonics3:k_,SplineCurve:Yd,SpotLight:U_,SpotLightHelper:Fb,Sprite:i_,SpriteMaterial:zd,SrcAlphaFactor:Xc,SrcAlphaSaturateFactor:Q0,SrcColorFactor:W0,StaticCopyUsage:Wx,StaticDrawUsage:Ca,StaticReadUsage:Hx,StereoCamera:fb,StreamCopyUsage:Yx,StreamDrawUsage:kx,StreamReadUsage:Gx,StringKeyframeTrack:Ts,SubtractEquation:k0,SubtractiveBlending:bf,TOUCH:as,TangentSpaceNormalMap:Br,TetrahedronGeometry:wu,Texture:sn,TextureLoader:rb,TorusGeometry:Dr,TorusKnotGeometry:Eu,Triangle:Xn,TriangleFanDrawMode:Ex,TriangleStripDrawMode:wx,TrianglesDrawMode:Mx,TubeGeometry:Tu,TwoPassDoubleSide:vx,UVMapping:tu,Uint16BufferAttribute:Ld,Uint32BufferAttribute:Id,Uint8BufferAttribute:AS,Uint8ClampedBufferAttribute:RS,Uniform:ip,UniformsGroup:Lb,UniformsLib:De,UniformsUtils:Wv,UnsignedByteType:Gi,UnsignedInt248Type:Nr,UnsignedIntType:hr,UnsignedShort4444Type:Sd,UnsignedShort5551Type:Md,UnsignedShortType:nu,VSMShadowMap:Ei,Vector2:me,Vector3:D,Vector4:zt,VectorKeyframeTrack:za,VideoTexture:gT,WebGL1Renderer:t_,WebGL3DRenderTarget:dS,WebGLArrayRenderTarget:fS,WebGLCoordinateSystem:Hi,WebGLCubeRenderTarget:Yv,WebGLMultipleRenderTargets:pS,WebGLRenderTarget:Ai,WebGLRenderer:Od,WebGLUtils:Kv,WebGPUCoordinateSystem:La,WireframeGeometry:__,WrapAroundEnding:ba,ZeroCurvatureEnding:hs,ZeroFactor:V0,ZeroSlopeEnding:fs,ZeroStencilOp:Tx,_SRGBAFormat:Zc,createCanvasElement:kv,sRGBEncoding:Or},Symbol.toStringTag,{value:"Module"}));var Z_={exports:{}},bs={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */bs.ConcurrentRoot=1;bs.ContinuousEventPriority=4;bs.DefaultEventPriority=16;bs.DiscreteEventPriority=1;bs.IdleEventPriority=536870912;bs.LegacyRoot=0;Z_.exports=bs;var _o=Z_.exports;function $b(r){let e;const t=new Set,n=(h,f)=>{const p=typeof h=="function"?h(e):h;if(p!==e){const m=e;e=f?p:Object.assign({},e,p),t.forEach(v=>v(e,m))}},i=()=>e,s=(h,f=i,p=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let m=f(e);function v(){const y=f(e);if(!p(m,y)){const w=m;h(m=y,w)}}return t.add(v),()=>t.delete(v)},u={setState:n,getState:i,subscribe:(h,f,p)=>f||p?s(h,f,p):(t.add(h),()=>t.delete(h)),destroy:()=>t.clear()};return e=r(n,i,u),u}const eA=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),m0=eA?ge.useEffect:ge.useLayoutEffect;function tA(r){const e=typeof r=="function"?$b(r):r,t=(n=e.getState,i=Object.is)=>{const[,s]=ge.useReducer(x=>x+1,0),l=e.getState(),c=ge.useRef(l),u=ge.useRef(n),h=ge.useRef(i),f=ge.useRef(!1),p=ge.useRef();p.current===void 0&&(p.current=n(l));let m,v=!1;(c.current!==l||u.current!==n||h.current!==i||f.current)&&(m=n(l),v=!i(p.current,m)),m0(()=>{v&&(p.current=m),c.current=l,u.current=n,h.current=i,f.current=!1});const y=ge.useRef(l);m0(()=>{const x=()=>{try{const E=e.getState(),M=u.current(E);h.current(p.current,M)||(c.current=E,p.current=M,s())}catch{f.current=!0,s()}},_=e.subscribe(x);return e.getState()!==y.current&&x(),_},[]);const w=v?m:p.current;return ge.useDebugValue(w),w};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}var j_={exports:{}},Q_={exports:{}},J_={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(r){function e(Q,j){var X=Q.length;Q.push(j);e:for(;0<X;){var U=X-1>>>1,Z=Q[U];if(0<i(Z,j))Q[U]=j,Q[X]=Z,X=U;else break e}}function t(Q){return Q.length===0?null:Q[0]}function n(Q){if(Q.length===0)return null;var j=Q[0],X=Q.pop();if(X!==j){Q[0]=X;e:for(var U=0,Z=Q.length,ce=Z>>>1;U<ce;){var H=2*(U+1)-1,xe=Q[H],Fe=H+1,Ye=Q[Fe];if(0>i(xe,X))Fe<Z&&0>i(Ye,xe)?(Q[U]=Ye,Q[Fe]=X,U=Fe):(Q[U]=xe,Q[H]=X,U=H);else if(Fe<Z&&0>i(Ye,X))Q[U]=Ye,Q[Fe]=X,U=Fe;else break e}}return j}function i(Q,j){var X=Q.sortIndex-j.sortIndex;return X!==0?X:Q.id-j.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;r.unstable_now=function(){return s.now()}}else{var l=Date,c=l.now();r.unstable_now=function(){return l.now()-c}}var u=[],h=[],f=1,p=null,m=3,v=!1,y=!1,w=!1,x=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function M(Q){for(var j=t(h);j!==null;){if(j.callback===null)n(h);else if(j.startTime<=Q)n(h),j.sortIndex=j.expirationTime,e(u,j);else break;j=t(h)}}function b(Q){if(w=!1,M(Q),!y)if(t(u)!==null)y=!0,ie(R);else{var j=t(h);j!==null&&te(b,j.startTime-Q)}}function R(Q,j){y=!1,w&&(w=!1,_(z),z=-1),v=!0;var X=m;try{for(M(j),p=t(u);p!==null&&(!(p.expirationTime>j)||Q&&!B());){var U=p.callback;if(typeof U=="function"){p.callback=null,m=p.priorityLevel;var Z=U(p.expirationTime<=j);j=r.unstable_now(),typeof Z=="function"?p.callback=Z:p===t(u)&&n(u),M(j)}else n(u);p=t(u)}if(p!==null)var ce=!0;else{var H=t(h);H!==null&&te(b,H.startTime-j),ce=!1}return ce}finally{p=null,m=X,v=!1}}var P=!1,I=null,z=-1,A=5,C=-1;function B(){return!(r.unstable_now()-C<A)}function $(){if(I!==null){var Q=r.unstable_now();C=Q;var j=!0;try{j=I(!0,Q)}finally{j?oe():(P=!1,I=null)}}else P=!1}var oe;if(typeof E=="function")oe=function(){E($)};else if(typeof MessageChannel<"u"){var G=new MessageChannel,q=G.port2;G.port1.onmessage=$,oe=function(){q.postMessage(null)}}else oe=function(){x($,0)};function ie(Q){I=Q,P||(P=!0,oe())}function te(Q,j){z=x(function(){Q(r.unstable_now())},j)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(Q){Q.callback=null},r.unstable_continueExecution=function(){y||v||(y=!0,ie(R))},r.unstable_forceFrameRate=function(Q){0>Q||125<Q?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):A=0<Q?Math.floor(1e3/Q):5},r.unstable_getCurrentPriorityLevel=function(){return m},r.unstable_getFirstCallbackNode=function(){return t(u)},r.unstable_next=function(Q){switch(m){case 1:case 2:case 3:var j=3;break;default:j=m}var X=m;m=j;try{return Q()}finally{m=X}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(Q,j){switch(Q){case 1:case 2:case 3:case 4:case 5:break;default:Q=3}var X=m;m=Q;try{return j()}finally{m=X}},r.unstable_scheduleCallback=function(Q,j,X){var U=r.unstable_now();switch(typeof X=="object"&&X!==null?(X=X.delay,X=typeof X=="number"&&0<X?U+X:U):X=U,Q){case 1:var Z=-1;break;case 2:Z=250;break;case 5:Z=1073741823;break;case 4:Z=1e4;break;default:Z=5e3}return Z=X+Z,Q={id:f++,callback:j,priorityLevel:Q,startTime:X,expirationTime:Z,sortIndex:-1},X>U?(Q.sortIndex=X,e(h,Q),t(u)===null&&Q===t(h)&&(w?(_(z),z=-1):w=!0,te(b,X-U))):(Q.sortIndex=Z,e(u,Q),y||v||(y=!0,ie(R))),Q},r.unstable_shouldYield=B,r.unstable_wrapCallback=function(Q){var j=m;return function(){var X=m;m=j;try{return Q.apply(this,arguments)}finally{m=X}}}})(J_);Q_.exports=J_;var pd=Q_.exports;/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var nA=function(e){var t={},n=ge,i=pd,s=Object.assign;function l(o){for(var a="https://reactjs.org/docs/error-decoder.html?invariant="+o,d=1;d<arguments.length;d++)a+="&args[]="+encodeURIComponent(arguments[d]);return"Minified React error #"+o+"; visit "+a+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var c=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),h=Symbol.for("react.portal"),f=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),m=Symbol.for("react.profiler"),v=Symbol.for("react.provider"),y=Symbol.for("react.context"),w=Symbol.for("react.forward_ref"),x=Symbol.for("react.suspense"),_=Symbol.for("react.suspense_list"),E=Symbol.for("react.memo"),M=Symbol.for("react.lazy"),b=Symbol.for("react.offscreen"),R=Symbol.iterator;function P(o){return o===null||typeof o!="object"?null:(o=R&&o[R]||o["@@iterator"],typeof o=="function"?o:null)}function I(o){if(o==null)return null;if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case f:return"Fragment";case h:return"Portal";case m:return"Profiler";case p:return"StrictMode";case x:return"Suspense";case _:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case y:return(o.displayName||"Context")+".Consumer";case v:return(o._context.displayName||"Context")+".Provider";case w:var a=o.render;return o=o.displayName,o||(o=a.displayName||a.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case E:return a=o.displayName||null,a!==null?a:I(o.type)||"Memo";case M:a=o._payload,o=o._init;try{return I(o(a))}catch{}}return null}function z(o){var a=o.type;switch(o.tag){case 24:return"Cache";case 9:return(a.displayName||"Context")+".Consumer";case 10:return(a._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return o=a.render,o=o.displayName||o.name||"",a.displayName||(o!==""?"ForwardRef("+o+")":"ForwardRef");case 7:return"Fragment";case 5:return a;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return I(a);case 8:return a===p?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof a=="function")return a.displayName||a.name||null;if(typeof a=="string")return a}return null}function A(o){var a=o,d=o;if(o.alternate)for(;a.return;)a=a.return;else{o=a;do a=o,a.flags&4098&&(d=a.return),o=a.return;while(o)}return a.tag===3?d:null}function C(o){if(A(o)!==o)throw Error(l(188))}function B(o){var a=o.alternate;if(!a){if(a=A(o),a===null)throw Error(l(188));return a!==o?null:o}for(var d=o,g=a;;){var S=d.return;if(S===null)break;var T=S.alternate;if(T===null){if(g=S.return,g!==null){d=g;continue}break}if(S.child===T.child){for(T=S.child;T;){if(T===d)return C(S),o;if(T===g)return C(S),a;T=T.sibling}throw Error(l(188))}if(d.return!==g.return)d=S,g=T;else{for(var O=!1,Y=S.child;Y;){if(Y===d){O=!0,d=S,g=T;break}if(Y===g){O=!0,g=S,d=T;break}Y=Y.sibling}if(!O){for(Y=T.child;Y;){if(Y===d){O=!0,d=T,g=S;break}if(Y===g){O=!0,g=T,d=S;break}Y=Y.sibling}if(!O)throw Error(l(189))}}if(d.alternate!==g)throw Error(l(190))}if(d.tag!==3)throw Error(l(188));return d.stateNode.current===d?o:a}function $(o){return o=B(o),o!==null?oe(o):null}function oe(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){var a=oe(o);if(a!==null)return a;o=o.sibling}return null}function G(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){if(o.tag!==4){var a=G(o);if(a!==null)return a}o=o.sibling}return null}var q=Array.isArray,ie=e.getPublicInstance,te=e.getRootHostContext,Q=e.getChildHostContext,j=e.prepareForCommit,X=e.resetAfterCommit,U=e.createInstance,Z=e.appendInitialChild,ce=e.finalizeInitialChildren,H=e.prepareUpdate,xe=e.shouldSetTextContent,Fe=e.createTextInstance,Ye=e.scheduleTimeout,Ze=e.cancelTimeout,tt=e.noTimeout,it=e.isPrimaryRenderer,Re=e.supportsMutation,k=e.supportsPersistence,ye=e.supportsHydration,de=e.getInstanceFromNode,we=e.preparePortalMount,ve=e.getCurrentEventPriority,Ge=e.detachDeletedInstance,Ne=e.supportsMicrotasks,ke=e.scheduleMicrotask,nt=e.supportsTestSelectors,gt=e.findFiberRoot,Ut=e.getBoundingRect,F=e.getTextContent,L=e.isHiddenSubtree,ne=e.matchAccessibilityRole,Ee=e.setFocusIfFocusable,_e=e.setupIntersectionObserver,be=e.appendChild,je=e.appendChildToContainer,Ce=e.commitTextUpdate,Ue=e.commitMount,at=e.commitUpdate,At=e.insertBefore,Ae=e.insertInContainerBefore,Rt=e.removeChild,V=e.removeChildFromContainer,fe=e.resetTextContent,Me=e.hideInstance,Se=e.hideTextInstance,et=e.unhideInstance,W=e.unhideTextInstance,Ie=e.clearContainer,Le=e.cloneInstance,pe=e.createContainerChildSet,Te=e.appendChildToContainerChildSet,Qe=e.finalizeContainerChildren,xt=e.replaceContainerChildren,Ot=e.cloneHiddenInstance,$t=e.cloneHiddenTextInstance,Pt=e.canHydrateInstance,Sn=e.canHydrateTextInstance,si=e.canHydrateSuspenseInstance,Io=e.isSuspenseInstancePending,Do=e.isSuspenseInstanceFallback,As=e.registerSuspenseInstanceRetry,vr=e.getNextHydratableSibling,Rs=e.getFirstHydratableChild,ja=e.getFirstHydratableChildWithinContainer,Qa=e.getFirstHydratableChildWithinSuspenseInstance,Au=e.hydrateInstance,Ru=e.hydrateTextInstance,Pu=e.hydrateSuspenseInstance,N=e.getNextHydratableInstanceAfterSuspenseInstance,K=e.commitHydratedContainer,re=e.commitHydratedSuspenseInstance,ae=e.clearSuspenseBoundary,le=e.clearSuspenseBoundaryFromContainer,He=e.shouldDeleteUnhydratedTailInstances,Ke=e.didNotMatchHydratedContainerTextInstance,ot=e.didNotMatchHydratedTextInstance,lt;function ht(o){if(lt===void 0)try{throw Error()}catch(d){var a=d.stack.trim().match(/\n( *(at )?)/);lt=a&&a[1]||""}return`
`+lt+o}var ut=!1;function ft(o,a){if(!o||ut)return"";ut=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(a)if(a=function(){throw Error()},Object.defineProperty(a.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(a,[])}catch(Pe){var g=Pe}Reflect.construct(o,[],a)}else{try{a.call()}catch(Pe){g=Pe}o.call(a.prototype)}else{try{throw Error()}catch(Pe){g=Pe}o()}}catch(Pe){if(Pe&&g&&typeof Pe.stack=="string"){for(var S=Pe.stack.split(`
`),T=g.stack.split(`
`),O=S.length-1,Y=T.length-1;1<=O&&0<=Y&&S[O]!==T[Y];)Y--;for(;1<=O&&0<=Y;O--,Y--)if(S[O]!==T[Y]){if(O!==1||Y!==1)do if(O--,Y--,0>Y||S[O]!==T[Y]){var ue=`
`+S[O].replace(" at new "," at ");return o.displayName&&ue.includes("<anonymous>")&&(ue=ue.replace("<anonymous>",o.displayName)),ue}while(1<=O&&0<=Y);break}}}finally{ut=!1,Error.prepareStackTrace=d}return(o=o?o.displayName||o.name:"")?ht(o):""}var Xt=Object.prototype.hasOwnProperty,Mn=[],Vt=-1;function pn(o){return{current:o}}function ct(o){0>Vt||(o.current=Mn[Vt],Mn[Vt]=null,Vt--)}function qe(o,a){Vt++,Mn[Vt]=o.current,o.current=a}var oi={},Tt=pn(oi),jt=pn(!1),Li=oi;function ai(o,a){var d=o.type.contextTypes;if(!d)return oi;var g=o.stateNode;if(g&&g.__reactInternalMemoizedUnmaskedChildContext===a)return g.__reactInternalMemoizedMaskedChildContext;var S={},T;for(T in d)S[T]=a[T];return g&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=a,o.__reactInternalMemoizedMaskedChildContext=S),S}function mn(o){return o=o.childContextTypes,o!=null}function on(){ct(jt),ct(Tt)}function Ii(o,a,d){if(Tt.current!==oi)throw Error(l(168));qe(Tt,a),qe(jt,d)}function Ps(o,a,d){var g=o.stateNode;if(a=a.childContextTypes,typeof g.getChildContext!="function")return d;g=g.getChildContext();for(var S in g)if(!(S in a))throw Error(l(108,z(o)||"Unknown",S));return s({},d,g)}function gn(o){return o=(o=o.stateNode)&&o.__reactInternalMemoizedMergedChildContext||oi,Li=Tt.current,qe(Tt,o),qe(jt,jt.current),!0}function Cs(o,a,d){var g=o.stateNode;if(!g)throw Error(l(169));d?(o=Ps(o,a,Li),g.__reactInternalMemoizedMergedChildContext=o,ct(jt),ct(Tt),qe(Tt,o)):ct(jt),qe(jt,d)}var jn=Math.clz32?Math.clz32:vy,Ja=Math.log,gy=Math.LN2;function vy(o){return o>>>=0,o===0?32:31-(Ja(o)/gy|0)|0}var Ka=64,$a=4194304;function No(o){switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return o&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return o}}function el(o,a){var d=o.pendingLanes;if(d===0)return 0;var g=0,S=o.suspendedLanes,T=o.pingedLanes,O=d&268435455;if(O!==0){var Y=O&~S;Y!==0?g=No(Y):(T&=O,T!==0&&(g=No(T)))}else O=d&~S,O!==0?g=No(O):T!==0&&(g=No(T));if(g===0)return 0;if(a!==0&&a!==g&&!(a&S)&&(S=g&-g,T=a&-a,S>=T||S===16&&(T&4194240)!==0))return a;if(g&4&&(g|=d&16),a=o.entangledLanes,a!==0)for(o=o.entanglements,a&=g;0<a;)d=31-jn(a),S=1<<d,g|=o[d],a&=~S;return g}function _y(o,a){switch(o){case 1:case 2:case 4:return a+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function yy(o,a){for(var d=o.suspendedLanes,g=o.pingedLanes,S=o.expirationTimes,T=o.pendingLanes;0<T;){var O=31-jn(T),Y=1<<O,ue=S[O];ue===-1?(!(Y&d)||Y&g)&&(S[O]=_y(Y,a)):ue<=a&&(o.expiredLanes|=Y),T&=~Y}}function Cu(o){return o=o.pendingLanes&-1073741825,o!==0?o:o&1073741824?1073741824:0}function Lu(o){for(var a=[],d=0;31>d;d++)a.push(o);return a}function Uo(o,a,d){o.pendingLanes|=a,a!==536870912&&(o.suspendedLanes=0,o.pingedLanes=0),o=o.eventTimes,a=31-jn(a),o[a]=d}function xy(o,a){var d=o.pendingLanes&~a;o.pendingLanes=a,o.suspendedLanes=0,o.pingedLanes=0,o.expiredLanes&=a,o.mutableReadLanes&=a,o.entangledLanes&=a,a=o.entanglements;var g=o.eventTimes;for(o=o.expirationTimes;0<d;){var S=31-jn(d),T=1<<S;a[S]=0,g[S]=-1,o[S]=-1,d&=~T}}function Iu(o,a){var d=o.entangledLanes|=a;for(o=o.entanglements;d;){var g=31-jn(d),S=1<<g;S&a|o[g]&a&&(o[g]|=a),d&=~S}}var Lt=0;function lp(o){return o&=-o,1<o?4<o?o&268435455?16:536870912:4:1}var Du=i.unstable_scheduleCallback,cp=i.unstable_cancelCallback,Sy=i.unstable_shouldYield,My=i.unstable_requestPaint,vn=i.unstable_now,Nu=i.unstable_ImmediatePriority,wy=i.unstable_UserBlockingPriority,Uu=i.unstable_NormalPriority,Ey=i.unstable_IdlePriority,tl=null,Di=null;function Ty(o){if(Di&&typeof Di.onCommitFiberRoot=="function")try{Di.onCommitFiberRoot(tl,o,void 0,(o.current.flags&128)===128)}catch{}}function by(o,a){return o===a&&(o!==0||1/o===1/a)||o!==o&&a!==a}var Ni=typeof Object.is=="function"?Object.is:by,Ji=null,nl=!1,Ou=!1;function up(o){Ji===null?Ji=[o]:Ji.push(o)}function Ay(o){nl=!0,up(o)}function Ui(){if(!Ou&&Ji!==null){Ou=!0;var o=0,a=Lt;try{var d=Ji;for(Lt=1;o<d.length;o++){var g=d[o];do g=g(!0);while(g!==null)}Ji=null,nl=!1}catch(S){throw Ji!==null&&(Ji=Ji.slice(o+1)),Du(Nu,Ui),S}finally{Lt=a,Ou=!1}}return null}var Ry=c.ReactCurrentBatchConfig;function il(o,a){if(Ni(o,a))return!0;if(typeof o!="object"||o===null||typeof a!="object"||a===null)return!1;var d=Object.keys(o),g=Object.keys(a);if(d.length!==g.length)return!1;for(g=0;g<d.length;g++){var S=d[g];if(!Xt.call(a,S)||!Ni(o[S],a[S]))return!1}return!0}function Py(o){switch(o.tag){case 5:return ht(o.type);case 16:return ht("Lazy");case 13:return ht("Suspense");case 19:return ht("SuspenseList");case 0:case 2:case 15:return o=ft(o.type,!1),o;case 11:return o=ft(o.type.render,!1),o;case 1:return o=ft(o.type,!0),o;default:return""}}function yi(o,a){if(o&&o.defaultProps){a=s({},a),o=o.defaultProps;for(var d in o)a[d]===void 0&&(a[d]=o[d]);return a}return a}var rl=pn(null),sl=null,Ls=null,Fu=null;function zu(){Fu=Ls=sl=null}function hp(o,a,d){it?(qe(rl,a._currentValue),a._currentValue=d):(qe(rl,a._currentValue2),a._currentValue2=d)}function Bu(o){var a=rl.current;ct(rl),it?o._currentValue=a:o._currentValue2=a}function ku(o,a,d){for(;o!==null;){var g=o.alternate;if((o.childLanes&a)!==a?(o.childLanes|=a,g!==null&&(g.childLanes|=a)):g!==null&&(g.childLanes&a)!==a&&(g.childLanes|=a),o===d)break;o=o.return}}function Is(o,a){sl=o,Fu=Ls=null,o=o.dependencies,o!==null&&o.firstContext!==null&&(o.lanes&a&&(Kn=!0),o.firstContext=null)}function li(o){var a=it?o._currentValue:o._currentValue2;if(Fu!==o)if(o={context:o,memoizedValue:a,next:null},Ls===null){if(sl===null)throw Error(l(308));Ls=o,sl.dependencies={lanes:0,firstContext:o}}else Ls=Ls.next=o;return a}var Oi=null,_r=!1;function Hu(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function fp(o,a){o=o.updateQueue,a.updateQueue===o&&(a.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,effects:o.effects})}function Ki(o,a){return{eventTime:o,lane:a,tag:0,payload:null,callback:null,next:null}}function yr(o,a){var d=o.updateQueue;d!==null&&(d=d.shared,an!==null&&o.mode&1&&!(wt&2)?(o=d.interleaved,o===null?(a.next=a,Oi===null?Oi=[d]:Oi.push(d)):(a.next=o.next,o.next=a),d.interleaved=a):(o=d.pending,o===null?a.next=a:(a.next=o.next,o.next=a),d.pending=a))}function ol(o,a,d){if(a=a.updateQueue,a!==null&&(a=a.shared,(d&4194240)!==0)){var g=a.lanes;g&=o.pendingLanes,d|=g,a.lanes=d,Iu(o,d)}}function dp(o,a){var d=o.updateQueue,g=o.alternate;if(g!==null&&(g=g.updateQueue,d===g)){var S=null,T=null;if(d=d.firstBaseUpdate,d!==null){do{var O={eventTime:d.eventTime,lane:d.lane,tag:d.tag,payload:d.payload,callback:d.callback,next:null};T===null?S=T=O:T=T.next=O,d=d.next}while(d!==null);T===null?S=T=a:T=T.next=a}else S=T=a;d={baseState:g.baseState,firstBaseUpdate:S,lastBaseUpdate:T,shared:g.shared,effects:g.effects},o.updateQueue=d;return}o=d.lastBaseUpdate,o===null?d.firstBaseUpdate=a:o.next=a,d.lastBaseUpdate=a}function al(o,a,d,g){var S=o.updateQueue;_r=!1;var T=S.firstBaseUpdate,O=S.lastBaseUpdate,Y=S.shared.pending;if(Y!==null){S.shared.pending=null;var ue=Y,Pe=ue.next;ue.next=null,O===null?T=Pe:O.next=Pe,O=ue;var We=o.alternate;We!==null&&(We=We.updateQueue,Y=We.lastBaseUpdate,Y!==O&&(Y===null?We.firstBaseUpdate=Pe:Y.next=Pe,We.lastBaseUpdate=ue))}if(T!==null){var pt=S.baseState;O=0,We=Pe=ue=null,Y=T;do{var rt=Y.lane,Bt=Y.eventTime;if((g&rt)===rt){We!==null&&(We=We.next={eventTime:Bt,lane:0,tag:Y.tag,payload:Y.payload,callback:Y.callback,next:null});e:{var $e=o,Rn=Y;switch(rt=a,Bt=d,Rn.tag){case 1:if($e=Rn.payload,typeof $e=="function"){pt=$e.call(Bt,pt,rt);break e}pt=$e;break e;case 3:$e.flags=$e.flags&-65537|128;case 0:if($e=Rn.payload,rt=typeof $e=="function"?$e.call(Bt,pt,rt):$e,rt==null)break e;pt=s({},pt,rt);break e;case 2:_r=!0}}Y.callback!==null&&Y.lane!==0&&(o.flags|=64,rt=S.effects,rt===null?S.effects=[Y]:rt.push(Y))}else Bt={eventTime:Bt,lane:rt,tag:Y.tag,payload:Y.payload,callback:Y.callback,next:null},We===null?(Pe=We=Bt,ue=pt):We=We.next=Bt,O|=rt;if(Y=Y.next,Y===null){if(Y=S.shared.pending,Y===null)break;rt=Y,Y=rt.next,rt.next=null,S.lastBaseUpdate=rt,S.shared.pending=null}}while(!0);if(We===null&&(ue=pt),S.baseState=ue,S.firstBaseUpdate=Pe,S.lastBaseUpdate=We,a=S.shared.interleaved,a!==null){S=a;do O|=S.lane,S=S.next;while(S!==a)}else T===null&&(S.shared.lanes=0);Hs|=O,o.lanes=O,o.memoizedState=pt}}function pp(o,a,d){if(o=a.effects,a.effects=null,o!==null)for(a=0;a<o.length;a++){var g=o[a],S=g.callback;if(S!==null){if(g.callback=null,g=d,typeof S!="function")throw Error(l(191,S));S.call(g)}}}var mp=new n.Component().refs;function Vu(o,a,d,g){a=o.memoizedState,d=d(g,a),d=d==null?a:s({},a,d),o.memoizedState=d,o.lanes===0&&(o.updateQueue.baseState=d)}var ll={isMounted:function(o){return(o=o._reactInternals)?A(o)===o:!1},enqueueSetState:function(o,a,d){o=o._reactInternals;var g=On(),S=Mr(o),T=Ki(g,S);T.payload=a,d!=null&&(T.callback=d),yr(o,T),a=di(o,S,g),a!==null&&ol(a,o,S)},enqueueReplaceState:function(o,a,d){o=o._reactInternals;var g=On(),S=Mr(o),T=Ki(g,S);T.tag=1,T.payload=a,d!=null&&(T.callback=d),yr(o,T),a=di(o,S,g),a!==null&&ol(a,o,S)},enqueueForceUpdate:function(o,a){o=o._reactInternals;var d=On(),g=Mr(o),S=Ki(d,g);S.tag=2,a!=null&&(S.callback=a),yr(o,S),a=di(o,g,d),a!==null&&ol(a,o,g)}};function gp(o,a,d,g,S,T,O){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(g,T,O):a.prototype&&a.prototype.isPureReactComponent?!il(d,g)||!il(S,T):!0}function vp(o,a,d){var g=!1,S=oi,T=a.contextType;return typeof T=="object"&&T!==null?T=li(T):(S=mn(a)?Li:Tt.current,g=a.contextTypes,T=(g=g!=null)?ai(o,S):oi),a=new a(d,T),o.memoizedState=a.state!==null&&a.state!==void 0?a.state:null,a.updater=ll,o.stateNode=a,a._reactInternals=o,g&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=S,o.__reactInternalMemoizedMaskedChildContext=T),a}function _p(o,a,d,g){o=a.state,typeof a.componentWillReceiveProps=="function"&&a.componentWillReceiveProps(d,g),typeof a.UNSAFE_componentWillReceiveProps=="function"&&a.UNSAFE_componentWillReceiveProps(d,g),a.state!==o&&ll.enqueueReplaceState(a,a.state,null)}function Gu(o,a,d,g){var S=o.stateNode;S.props=d,S.state=o.memoizedState,S.refs=mp,Hu(o);var T=a.contextType;typeof T=="object"&&T!==null?S.context=li(T):(T=mn(a)?Li:Tt.current,S.context=ai(o,T)),S.state=o.memoizedState,T=a.getDerivedStateFromProps,typeof T=="function"&&(Vu(o,a,T,d),S.state=o.memoizedState),typeof a.getDerivedStateFromProps=="function"||typeof S.getSnapshotBeforeUpdate=="function"||typeof S.UNSAFE_componentWillMount!="function"&&typeof S.componentWillMount!="function"||(a=S.state,typeof S.componentWillMount=="function"&&S.componentWillMount(),typeof S.UNSAFE_componentWillMount=="function"&&S.UNSAFE_componentWillMount(),a!==S.state&&ll.enqueueReplaceState(S,S.state,null),al(o,d,S,g),S.state=o.memoizedState),typeof S.componentDidMount=="function"&&(o.flags|=4194308)}var Ds=[],Ns=0,cl=null,ul=0,ci=[],ui=0,Vr=null,$i=1,er="";function Gr(o,a){Ds[Ns++]=ul,Ds[Ns++]=cl,cl=o,ul=a}function yp(o,a,d){ci[ui++]=$i,ci[ui++]=er,ci[ui++]=Vr,Vr=o;var g=$i;o=er;var S=32-jn(g)-1;g&=~(1<<S),d+=1;var T=32-jn(a)+S;if(30<T){var O=S-S%5;T=(g&(1<<O)-1).toString(32),g>>=O,S-=O,$i=1<<32-jn(a)+S|d<<S|g,er=T+o}else $i=1<<T|d<<S|g,er=o}function Wu(o){o.return!==null&&(Gr(o,1),yp(o,1,0))}function Xu(o){for(;o===cl;)cl=Ds[--Ns],Ds[Ns]=null,ul=Ds[--Ns],Ds[Ns]=null;for(;o===Vr;)Vr=ci[--ui],ci[ui]=null,er=ci[--ui],ci[ui]=null,$i=ci[--ui],ci[ui]=null}var Qn=null,Jn=null,Wt=!1,Oo=!1,xi=null;function xp(o,a){var d=pi(5,null,null,0);d.elementType="DELETED",d.stateNode=a,d.return=o,a=o.deletions,a===null?(o.deletions=[d],o.flags|=16):a.push(d)}function Sp(o,a){switch(o.tag){case 5:return a=Pt(a,o.type,o.pendingProps),a!==null?(o.stateNode=a,Qn=o,Jn=Rs(a),!0):!1;case 6:return a=Sn(a,o.pendingProps),a!==null?(o.stateNode=a,Qn=o,Jn=null,!0):!1;case 13:if(a=si(a),a!==null){var d=Vr!==null?{id:$i,overflow:er}:null;return o.memoizedState={dehydrated:a,treeContext:d,retryLane:1073741824},d=pi(18,null,null,0),d.stateNode=a,d.return=o,o.child=d,Qn=o,Jn=null,!0}return!1;default:return!1}}function Yu(o){return(o.mode&1)!==0&&(o.flags&128)===0}function qu(o){if(Wt){var a=Jn;if(a){var d=a;if(!Sp(o,a)){if(Yu(o))throw Error(l(418));a=vr(d);var g=Qn;a&&Sp(o,a)?xp(g,d):(o.flags=o.flags&-4097|2,Wt=!1,Qn=o)}}else{if(Yu(o))throw Error(l(418));o.flags=o.flags&-4097|2,Wt=!1,Qn=o}}}function Mp(o){for(o=o.return;o!==null&&o.tag!==5&&o.tag!==3&&o.tag!==13;)o=o.return;Qn=o}function Fo(o){if(!ye||o!==Qn)return!1;if(!Wt)return Mp(o),Wt=!0,!1;if(o.tag!==3&&(o.tag!==5||He(o.type)&&!xe(o.type,o.memoizedProps))){var a=Jn;if(a){if(Yu(o)){for(o=Jn;o;)o=vr(o);throw Error(l(418))}for(;a;)xp(o,a),a=vr(a)}}if(Mp(o),o.tag===13){if(!ye)throw Error(l(316));if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));Jn=N(o)}else Jn=Qn?vr(o.stateNode):null;return!0}function Us(){ye&&(Jn=Qn=null,Oo=Wt=!1)}function Zu(o){xi===null?xi=[o]:xi.push(o)}function zo(o,a,d){if(o=d.ref,o!==null&&typeof o!="function"&&typeof o!="object"){if(d._owner){if(d=d._owner,d){if(d.tag!==1)throw Error(l(309));var g=d.stateNode}if(!g)throw Error(l(147,o));var S=g,T=""+o;return a!==null&&a.ref!==null&&typeof a.ref=="function"&&a.ref._stringRef===T?a.ref:(a=function(O){var Y=S.refs;Y===mp&&(Y=S.refs={}),O===null?delete Y[T]:Y[T]=O},a._stringRef=T,a)}if(typeof o!="string")throw Error(l(284));if(!d._owner)throw Error(l(290,o))}return o}function hl(o,a){throw o=Object.prototype.toString.call(a),Error(l(31,o==="[object Object]"?"object with keys {"+Object.keys(a).join(", ")+"}":o))}function wp(o){var a=o._init;return a(o._payload)}function Ep(o){function a(ee,J){if(o){var se=ee.deletions;se===null?(ee.deletions=[J],ee.flags|=16):se.push(J)}}function d(ee,J){if(!o)return null;for(;J!==null;)a(ee,J),J=J.sibling;return null}function g(ee,J){for(ee=new Map;J!==null;)J.key!==null?ee.set(J.key,J):ee.set(J.index,J),J=J.sibling;return ee}function S(ee,J){return ee=Er(ee,J),ee.index=0,ee.sibling=null,ee}function T(ee,J,se){return ee.index=se,o?(se=ee.alternate,se!==null?(se=se.index,se<J?(ee.flags|=2,J):se):(ee.flags|=2,J)):(ee.flags|=1048576,J)}function O(ee){return o&&ee.alternate===null&&(ee.flags|=2),ee}function Y(ee,J,se,ze){return J===null||J.tag!==6?(J=Lh(se,ee.mode,ze),J.return=ee,J):(J=S(J,se),J.return=ee,J)}function ue(ee,J,se,ze){var Je=se.type;return Je===f?We(ee,J,se.props.children,ze,se.key):J!==null&&(J.elementType===Je||typeof Je=="object"&&Je!==null&&Je.$$typeof===M&&wp(Je)===J.type)?(ze=S(J,se.props),ze.ref=zo(ee,J,se),ze.return=ee,ze):(ze=Vl(se.type,se.key,se.props,null,ee.mode,ze),ze.ref=zo(ee,J,se),ze.return=ee,ze)}function Pe(ee,J,se,ze){return J===null||J.tag!==4||J.stateNode.containerInfo!==se.containerInfo||J.stateNode.implementation!==se.implementation?(J=Ih(se,ee.mode,ze),J.return=ee,J):(J=S(J,se.children||[]),J.return=ee,J)}function We(ee,J,se,ze,Je){return J===null||J.tag!==7?(J=Qr(se,ee.mode,ze,Je),J.return=ee,J):(J=S(J,se),J.return=ee,J)}function pt(ee,J,se){if(typeof J=="string"&&J!==""||typeof J=="number")return J=Lh(""+J,ee.mode,se),J.return=ee,J;if(typeof J=="object"&&J!==null){switch(J.$$typeof){case u:return se=Vl(J.type,J.key,J.props,null,ee.mode,se),se.ref=zo(ee,null,J),se.return=ee,se;case h:return J=Ih(J,ee.mode,se),J.return=ee,J;case M:var ze=J._init;return pt(ee,ze(J._payload),se)}if(q(J)||P(J))return J=Qr(J,ee.mode,se,null),J.return=ee,J;hl(ee,J)}return null}function rt(ee,J,se,ze){var Je=J!==null?J.key:null;if(typeof se=="string"&&se!==""||typeof se=="number")return Je!==null?null:Y(ee,J,""+se,ze);if(typeof se=="object"&&se!==null){switch(se.$$typeof){case u:return se.key===Je?ue(ee,J,se,ze):null;case h:return se.key===Je?Pe(ee,J,se,ze):null;case M:return Je=se._init,rt(ee,J,Je(se._payload),ze)}if(q(se)||P(se))return Je!==null?null:We(ee,J,se,ze,null);hl(ee,se)}return null}function Bt(ee,J,se,ze,Je){if(typeof ze=="string"&&ze!==""||typeof ze=="number")return ee=ee.get(se)||null,Y(J,ee,""+ze,Je);if(typeof ze=="object"&&ze!==null){switch(ze.$$typeof){case u:return ee=ee.get(ze.key===null?se:ze.key)||null,ue(J,ee,ze,Je);case h:return ee=ee.get(ze.key===null?se:ze.key)||null,Pe(J,ee,ze,Je);case M:var St=ze._init;return Bt(ee,J,se,St(ze._payload),Je)}if(q(ze)||P(ze))return ee=ee.get(se)||null,We(J,ee,ze,Je,null);hl(J,ze)}return null}function $e(ee,J,se,ze){for(var Je=null,St=null,mt=J,It=J=0,yn=null;mt!==null&&It<se.length;It++){mt.index>It?(yn=mt,mt=null):yn=mt.sibling;var Dt=rt(ee,mt,se[It],ze);if(Dt===null){mt===null&&(mt=yn);break}o&&mt&&Dt.alternate===null&&a(ee,mt),J=T(Dt,J,It),St===null?Je=Dt:St.sibling=Dt,St=Dt,mt=yn}if(It===se.length)return d(ee,mt),Wt&&Gr(ee,It),Je;if(mt===null){for(;It<se.length;It++)mt=pt(ee,se[It],ze),mt!==null&&(J=T(mt,J,It),St===null?Je=mt:St.sibling=mt,St=mt);return Wt&&Gr(ee,It),Je}for(mt=g(ee,mt);It<se.length;It++)yn=Bt(mt,ee,It,se[It],ze),yn!==null&&(o&&yn.alternate!==null&&mt.delete(yn.key===null?It:yn.key),J=T(yn,J,It),St===null?Je=yn:St.sibling=yn,St=yn);return o&&mt.forEach(function(Tr){return a(ee,Tr)}),Wt&&Gr(ee,It),Je}function Rn(ee,J,se,ze){var Je=P(se);if(typeof Je!="function")throw Error(l(150));if(se=Je.call(se),se==null)throw Error(l(151));for(var St=Je=null,mt=J,It=J=0,yn=null,Dt=se.next();mt!==null&&!Dt.done;It++,Dt=se.next()){mt.index>It?(yn=mt,mt=null):yn=mt.sibling;var Tr=rt(ee,mt,Dt.value,ze);if(Tr===null){mt===null&&(mt=yn);break}o&&mt&&Tr.alternate===null&&a(ee,mt),J=T(Tr,J,It),St===null?Je=Tr:St.sibling=Tr,St=Tr,mt=yn}if(Dt.done)return d(ee,mt),Wt&&Gr(ee,It),Je;if(mt===null){for(;!Dt.done;It++,Dt=se.next())Dt=pt(ee,Dt.value,ze),Dt!==null&&(J=T(Dt,J,It),St===null?Je=Dt:St.sibling=Dt,St=Dt);return Wt&&Gr(ee,It),Je}for(mt=g(ee,mt);!Dt.done;It++,Dt=se.next())Dt=Bt(mt,ee,It,Dt.value,ze),Dt!==null&&(o&&Dt.alternate!==null&&mt.delete(Dt.key===null?It:Dt.key),J=T(Dt,J,It),St===null?Je=Dt:St.sibling=Dt,St=Dt);return o&&mt.forEach(function(sx){return a(ee,sx)}),Wt&&Gr(ee,It),Je}function mi(ee,J,se,ze){if(typeof se=="object"&&se!==null&&se.type===f&&se.key===null&&(se=se.props.children),typeof se=="object"&&se!==null){switch(se.$$typeof){case u:e:{for(var Je=se.key,St=J;St!==null;){if(St.key===Je){if(Je=se.type,Je===f){if(St.tag===7){d(ee,St.sibling),J=S(St,se.props.children),J.return=ee,ee=J;break e}}else if(St.elementType===Je||typeof Je=="object"&&Je!==null&&Je.$$typeof===M&&wp(Je)===St.type){d(ee,St.sibling),J=S(St,se.props),J.ref=zo(ee,St,se),J.return=ee,ee=J;break e}d(ee,St);break}else a(ee,St);St=St.sibling}se.type===f?(J=Qr(se.props.children,ee.mode,ze,se.key),J.return=ee,ee=J):(ze=Vl(se.type,se.key,se.props,null,ee.mode,ze),ze.ref=zo(ee,J,se),ze.return=ee,ee=ze)}return O(ee);case h:e:{for(St=se.key;J!==null;){if(J.key===St)if(J.tag===4&&J.stateNode.containerInfo===se.containerInfo&&J.stateNode.implementation===se.implementation){d(ee,J.sibling),J=S(J,se.children||[]),J.return=ee,ee=J;break e}else{d(ee,J);break}else a(ee,J);J=J.sibling}J=Ih(se,ee.mode,ze),J.return=ee,ee=J}return O(ee);case M:return St=se._init,mi(ee,J,St(se._payload),ze)}if(q(se))return $e(ee,J,se,ze);if(P(se))return Rn(ee,J,se,ze);hl(ee,se)}return typeof se=="string"&&se!==""||typeof se=="number"?(se=""+se,J!==null&&J.tag===6?(d(ee,J.sibling),J=S(J,se),J.return=ee,ee=J):(d(ee,J),J=Lh(se,ee.mode,ze),J.return=ee,ee=J),O(ee)):d(ee,J)}return mi}var Os=Ep(!0),Tp=Ep(!1),Bo={},hi=pn(Bo),ko=pn(Bo),Fs=pn(Bo);function Fi(o){if(o===Bo)throw Error(l(174));return o}function ju(o,a){qe(Fs,a),qe(ko,o),qe(hi,Bo),o=te(a),ct(hi),qe(hi,o)}function zs(){ct(hi),ct(ko),ct(Fs)}function bp(o){var a=Fi(Fs.current),d=Fi(hi.current);a=Q(d,o.type,a),d!==a&&(qe(ko,o),qe(hi,a))}function Qu(o){ko.current===o&&(ct(hi),ct(ko))}var Yt=pn(0);function fl(o){for(var a=o;a!==null;){if(a.tag===13){var d=a.memoizedState;if(d!==null&&(d=d.dehydrated,d===null||Io(d)||Do(d)))return a}else if(a.tag===19&&a.memoizedProps.revealOrder!==void 0){if(a.flags&128)return a}else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return null;a=a.return}a.sibling.return=a.return,a=a.sibling}return null}var Ju=[];function Ku(){for(var o=0;o<Ju.length;o++){var a=Ju[o];it?a._workInProgressVersionPrimary=null:a._workInProgressVersionSecondary=null}Ju.length=0}var dl=c.ReactCurrentDispatcher,fi=c.ReactCurrentBatchConfig,Bs=0,Qt=null,Tn=null,_n=null,pl=!1,Ho=!1,Vo=0,Cy=0;function bn(){throw Error(l(321))}function $u(o,a){if(a===null)return!1;for(var d=0;d<a.length&&d<o.length;d++)if(!Ni(o[d],a[d]))return!1;return!0}function eh(o,a,d,g,S,T){if(Bs=T,Qt=a,a.memoizedState=null,a.updateQueue=null,a.lanes=0,dl.current=o===null||o.memoizedState===null?Ny:Uy,o=d(g,S),Ho){T=0;do{if(Ho=!1,Vo=0,25<=T)throw Error(l(301));T+=1,_n=Tn=null,a.updateQueue=null,dl.current=Oy,o=d(g,S)}while(Ho)}if(dl.current=yl,a=Tn!==null&&Tn.next!==null,Bs=0,_n=Tn=Qt=null,pl=!1,a)throw Error(l(300));return o}function th(){var o=Vo!==0;return Vo=0,o}function tr(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return _n===null?Qt.memoizedState=_n=o:_n=_n.next=o,_n}function zi(){if(Tn===null){var o=Qt.alternate;o=o!==null?o.memoizedState:null}else o=Tn.next;var a=_n===null?Qt.memoizedState:_n.next;if(a!==null)_n=a,Tn=o;else{if(o===null)throw Error(l(310));Tn=o,o={memoizedState:Tn.memoizedState,baseState:Tn.baseState,baseQueue:Tn.baseQueue,queue:Tn.queue,next:null},_n===null?Qt.memoizedState=_n=o:_n=_n.next=o}return _n}function Wr(o,a){return typeof a=="function"?a(o):a}function ml(o){var a=zi(),d=a.queue;if(d===null)throw Error(l(311));d.lastRenderedReducer=o;var g=Tn,S=g.baseQueue,T=d.pending;if(T!==null){if(S!==null){var O=S.next;S.next=T.next,T.next=O}g.baseQueue=S=T,d.pending=null}if(S!==null){T=S.next,g=g.baseState;var Y=O=null,ue=null,Pe=T;do{var We=Pe.lane;if((Bs&We)===We)ue!==null&&(ue=ue.next={lane:0,action:Pe.action,hasEagerState:Pe.hasEagerState,eagerState:Pe.eagerState,next:null}),g=Pe.hasEagerState?Pe.eagerState:o(g,Pe.action);else{var pt={lane:We,action:Pe.action,hasEagerState:Pe.hasEagerState,eagerState:Pe.eagerState,next:null};ue===null?(Y=ue=pt,O=g):ue=ue.next=pt,Qt.lanes|=We,Hs|=We}Pe=Pe.next}while(Pe!==null&&Pe!==T);ue===null?O=g:ue.next=Y,Ni(g,a.memoizedState)||(Kn=!0),a.memoizedState=g,a.baseState=O,a.baseQueue=ue,d.lastRenderedState=g}if(o=d.interleaved,o!==null){S=o;do T=S.lane,Qt.lanes|=T,Hs|=T,S=S.next;while(S!==o)}else S===null&&(d.lanes=0);return[a.memoizedState,d.dispatch]}function gl(o){var a=zi(),d=a.queue;if(d===null)throw Error(l(311));d.lastRenderedReducer=o;var g=d.dispatch,S=d.pending,T=a.memoizedState;if(S!==null){d.pending=null;var O=S=S.next;do T=o(T,O.action),O=O.next;while(O!==S);Ni(T,a.memoizedState)||(Kn=!0),a.memoizedState=T,a.baseQueue===null&&(a.baseState=T),d.lastRenderedState=T}return[T,g]}function Ap(){}function Rp(o,a){var d=Qt,g=zi(),S=a(),T=!Ni(g.memoizedState,S);if(T&&(g.memoizedState=S,Kn=!0),g=g.queue,Wo(Lp.bind(null,d,g,o),[o]),g.getSnapshot!==a||T||_n!==null&&_n.memoizedState.tag&1){if(d.flags|=2048,Go(9,Cp.bind(null,d,g,S,a),void 0,null),an===null)throw Error(l(349));Bs&30||Pp(d,a,S)}return S}function Pp(o,a,d){o.flags|=16384,o={getSnapshot:a,value:d},a=Qt.updateQueue,a===null?(a={lastEffect:null,stores:null},Qt.updateQueue=a,a.stores=[o]):(d=a.stores,d===null?a.stores=[o]:d.push(o))}function Cp(o,a,d,g){a.value=d,a.getSnapshot=g,Ip(a)&&di(o,1,-1)}function Lp(o,a,d){return d(function(){Ip(a)&&di(o,1,-1)})}function Ip(o){var a=o.getSnapshot;o=o.value;try{var d=a();return!Ni(o,d)}catch{return!0}}function nh(o){var a=tr();return typeof o=="function"&&(o=o()),a.memoizedState=a.baseState=o,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Wr,lastRenderedState:o},a.queue=o,o=o.dispatch=Dy.bind(null,Qt,o),[a.memoizedState,o]}function Go(o,a,d,g){return o={tag:o,create:a,destroy:d,deps:g,next:null},a=Qt.updateQueue,a===null?(a={lastEffect:null,stores:null},Qt.updateQueue=a,a.lastEffect=o.next=o):(d=a.lastEffect,d===null?a.lastEffect=o.next=o:(g=d.next,d.next=o,o.next=g,a.lastEffect=o)),o}function Dp(){return zi().memoizedState}function vl(o,a,d,g){var S=tr();Qt.flags|=o,S.memoizedState=Go(1|a,d,void 0,g===void 0?null:g)}function _l(o,a,d,g){var S=zi();g=g===void 0?null:g;var T=void 0;if(Tn!==null){var O=Tn.memoizedState;if(T=O.destroy,g!==null&&$u(g,O.deps)){S.memoizedState=Go(a,d,T,g);return}}Qt.flags|=o,S.memoizedState=Go(1|a,d,T,g)}function ih(o,a){return vl(8390656,8,o,a)}function Wo(o,a){return _l(2048,8,o,a)}function Np(o,a){return _l(4,2,o,a)}function Up(o,a){return _l(4,4,o,a)}function Op(o,a){if(typeof a=="function")return o=o(),a(o),function(){a(null)};if(a!=null)return o=o(),a.current=o,function(){a.current=null}}function Fp(o,a,d){return d=d!=null?d.concat([o]):null,_l(4,4,Op.bind(null,a,o),d)}function rh(){}function zp(o,a){var d=zi();a=a===void 0?null:a;var g=d.memoizedState;return g!==null&&a!==null&&$u(a,g[1])?g[0]:(d.memoizedState=[o,a],o)}function Bp(o,a){var d=zi();a=a===void 0?null:a;var g=d.memoizedState;return g!==null&&a!==null&&$u(a,g[1])?g[0]:(o=o(),d.memoizedState=[o,a],o)}function Ly(o,a){var d=Lt;Lt=d!==0&&4>d?d:4,o(!0);var g=fi.transition;fi.transition={};try{o(!1),a()}finally{Lt=d,fi.transition=g}}function kp(){return zi().memoizedState}function Iy(o,a,d){var g=Mr(o);d={lane:g,action:d,hasEagerState:!1,eagerState:null,next:null},Hp(o)?Vp(a,d):(Gp(o,a,d),d=On(),o=di(o,g,d),o!==null&&Wp(o,a,g))}function Dy(o,a,d){var g=Mr(o),S={lane:g,action:d,hasEagerState:!1,eagerState:null,next:null};if(Hp(o))Vp(a,S);else{Gp(o,a,S);var T=o.alternate;if(o.lanes===0&&(T===null||T.lanes===0)&&(T=a.lastRenderedReducer,T!==null))try{var O=a.lastRenderedState,Y=T(O,d);if(S.hasEagerState=!0,S.eagerState=Y,Ni(Y,O))return}catch{}finally{}d=On(),o=di(o,g,d),o!==null&&Wp(o,a,g)}}function Hp(o){var a=o.alternate;return o===Qt||a!==null&&a===Qt}function Vp(o,a){Ho=pl=!0;var d=o.pending;d===null?a.next=a:(a.next=d.next,d.next=a),o.pending=a}function Gp(o,a,d){an!==null&&o.mode&1&&!(wt&2)?(o=a.interleaved,o===null?(d.next=d,Oi===null?Oi=[a]:Oi.push(a)):(d.next=o.next,o.next=d),a.interleaved=d):(o=a.pending,o===null?d.next=d:(d.next=o.next,o.next=d),a.pending=d)}function Wp(o,a,d){if(d&4194240){var g=a.lanes;g&=o.pendingLanes,d|=g,a.lanes=d,Iu(o,d)}}var yl={readContext:li,useCallback:bn,useContext:bn,useEffect:bn,useImperativeHandle:bn,useInsertionEffect:bn,useLayoutEffect:bn,useMemo:bn,useReducer:bn,useRef:bn,useState:bn,useDebugValue:bn,useDeferredValue:bn,useTransition:bn,useMutableSource:bn,useSyncExternalStore:bn,useId:bn,unstable_isNewReconciler:!1},Ny={readContext:li,useCallback:function(o,a){return tr().memoizedState=[o,a===void 0?null:a],o},useContext:li,useEffect:ih,useImperativeHandle:function(o,a,d){return d=d!=null?d.concat([o]):null,vl(4194308,4,Op.bind(null,a,o),d)},useLayoutEffect:function(o,a){return vl(4194308,4,o,a)},useInsertionEffect:function(o,a){return vl(4,2,o,a)},useMemo:function(o,a){var d=tr();return a=a===void 0?null:a,o=o(),d.memoizedState=[o,a],o},useReducer:function(o,a,d){var g=tr();return a=d!==void 0?d(a):a,g.memoizedState=g.baseState=a,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:a},g.queue=o,o=o.dispatch=Iy.bind(null,Qt,o),[g.memoizedState,o]},useRef:function(o){var a=tr();return o={current:o},a.memoizedState=o},useState:nh,useDebugValue:rh,useDeferredValue:function(o){var a=nh(o),d=a[0],g=a[1];return ih(function(){var S=fi.transition;fi.transition={};try{g(o)}finally{fi.transition=S}},[o]),d},useTransition:function(){var o=nh(!1),a=o[0];return o=Ly.bind(null,o[1]),tr().memoizedState=o,[a,o]},useMutableSource:function(){},useSyncExternalStore:function(o,a,d){var g=Qt,S=tr();if(Wt){if(d===void 0)throw Error(l(407));d=d()}else{if(d=a(),an===null)throw Error(l(349));Bs&30||Pp(g,a,d)}S.memoizedState=d;var T={value:d,getSnapshot:a};return S.queue=T,ih(Lp.bind(null,g,T,o),[o]),g.flags|=2048,Go(9,Cp.bind(null,g,T,d,a),void 0,null),d},useId:function(){var o=tr(),a=an.identifierPrefix;if(Wt){var d=er,g=$i;d=(g&~(1<<32-jn(g)-1)).toString(32)+d,a=":"+a+"R"+d,d=Vo++,0<d&&(a+="H"+d.toString(32)),a+=":"}else d=Cy++,a=":"+a+"r"+d.toString(32)+":";return o.memoizedState=a},unstable_isNewReconciler:!1},Uy={readContext:li,useCallback:zp,useContext:li,useEffect:Wo,useImperativeHandle:Fp,useInsertionEffect:Np,useLayoutEffect:Up,useMemo:Bp,useReducer:ml,useRef:Dp,useState:function(){return ml(Wr)},useDebugValue:rh,useDeferredValue:function(o){var a=ml(Wr),d=a[0],g=a[1];return Wo(function(){var S=fi.transition;fi.transition={};try{g(o)}finally{fi.transition=S}},[o]),d},useTransition:function(){var o=ml(Wr)[0],a=zi().memoizedState;return[o,a]},useMutableSource:Ap,useSyncExternalStore:Rp,useId:kp,unstable_isNewReconciler:!1},Oy={readContext:li,useCallback:zp,useContext:li,useEffect:Wo,useImperativeHandle:Fp,useInsertionEffect:Np,useLayoutEffect:Up,useMemo:Bp,useReducer:gl,useRef:Dp,useState:function(){return gl(Wr)},useDebugValue:rh,useDeferredValue:function(o){var a=gl(Wr),d=a[0],g=a[1];return Wo(function(){var S=fi.transition;fi.transition={};try{g(o)}finally{fi.transition=S}},[o]),d},useTransition:function(){var o=gl(Wr)[0],a=zi().memoizedState;return[o,a]},useMutableSource:Ap,useSyncExternalStore:Rp,useId:kp,unstable_isNewReconciler:!1};function sh(o,a){try{var d="",g=a;do d+=Py(g),g=g.return;while(g);var S=d}catch(T){S=`
Error generating stack: `+T.message+`
`+T.stack}return{value:o,source:a,stack:S}}function oh(o,a){try{console.error(a.value)}catch(d){setTimeout(function(){throw d})}}var Fy=typeof WeakMap=="function"?WeakMap:Map;function Xp(o,a,d){d=Ki(-1,d),d.tag=3,d.payload={element:null};var g=a.value;return d.callback=function(){Ul||(Ul=!0,Eh=g),oh(o,a)},d}function Yp(o,a,d){d=Ki(-1,d),d.tag=3;var g=o.type.getDerivedStateFromError;if(typeof g=="function"){var S=a.value;d.payload=function(){return g(S)},d.callback=function(){oh(o,a)}}var T=o.stateNode;return T!==null&&typeof T.componentDidCatch=="function"&&(d.callback=function(){oh(o,a),typeof g!="function"&&(xr===null?xr=new Set([this]):xr.add(this));var O=a.stack;this.componentDidCatch(a.value,{componentStack:O!==null?O:""})}),d}function qp(o,a,d){var g=o.pingCache;if(g===null){g=o.pingCache=new Fy;var S=new Set;g.set(a,S)}else S=g.get(a),S===void 0&&(S=new Set,g.set(a,S));S.has(d)||(S.add(d),o=Jy.bind(null,o,a,d),a.then(o,o))}function Zp(o){do{var a;if((a=o.tag===13)&&(a=o.memoizedState,a=a!==null?a.dehydrated!==null:!0),a)return o;o=o.return}while(o!==null);return null}function jp(o,a,d,g,S){return o.mode&1?(o.flags|=65536,o.lanes=S,o):(o===a?o.flags|=65536:(o.flags|=128,d.flags|=131072,d.flags&=-52805,d.tag===1&&(d.alternate===null?d.tag=17:(a=Ki(-1,1),a.tag=2,yr(d,a))),d.lanes|=1),o)}function Bi(o){o.flags|=4}function Qp(o,a){if(o!==null&&o.child===a.child)return!0;if(a.flags&16)return!1;for(o=a.child;o!==null;){if(o.flags&12854||o.subtreeFlags&12854)return!1;o=o.sibling}return!0}var Xo,Yo,xl,Sl;if(Re)Xo=function(o,a){for(var d=a.child;d!==null;){if(d.tag===5||d.tag===6)Z(o,d.stateNode);else if(d.tag!==4&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===a)break;for(;d.sibling===null;){if(d.return===null||d.return===a)return;d=d.return}d.sibling.return=d.return,d=d.sibling}},Yo=function(){},xl=function(o,a,d,g,S){if(o=o.memoizedProps,o!==g){var T=a.stateNode,O=Fi(hi.current);d=H(T,d,o,g,S,O),(a.updateQueue=d)&&Bi(a)}},Sl=function(o,a,d,g){d!==g&&Bi(a)};else if(k){Xo=function(o,a,d,g){for(var S=a.child;S!==null;){if(S.tag===5){var T=S.stateNode;d&&g&&(T=Ot(T,S.type,S.memoizedProps,S)),Z(o,T)}else if(S.tag===6)T=S.stateNode,d&&g&&(T=$t(T,S.memoizedProps,S)),Z(o,T);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)T=S.child,T!==null&&(T.return=S),Xo(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===a)break;for(;S.sibling===null;){if(S.return===null||S.return===a)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};var Jp=function(o,a,d,g){for(var S=a.child;S!==null;){if(S.tag===5){var T=S.stateNode;d&&g&&(T=Ot(T,S.type,S.memoizedProps,S)),Te(o,T)}else if(S.tag===6)T=S.stateNode,d&&g&&(T=$t(T,S.memoizedProps,S)),Te(o,T);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)T=S.child,T!==null&&(T.return=S),Jp(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===a)break;for(;S.sibling===null;){if(S.return===null||S.return===a)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};Yo=function(o,a){var d=a.stateNode;if(!Qp(o,a)){o=d.containerInfo;var g=pe(o);Jp(g,a,!1,!1),d.pendingChildren=g,Bi(a),Qe(o,g)}},xl=function(o,a,d,g,S){var T=o.stateNode,O=o.memoizedProps;if((o=Qp(o,a))&&O===g)a.stateNode=T;else{var Y=a.stateNode,ue=Fi(hi.current),Pe=null;O!==g&&(Pe=H(Y,d,O,g,S,ue)),o&&Pe===null?a.stateNode=T:(T=Le(T,Pe,d,O,g,a,o,Y),ce(T,d,g,S,ue)&&Bi(a),a.stateNode=T,o?Bi(a):Xo(T,a,!1,!1))}},Sl=function(o,a,d,g){d!==g?(o=Fi(Fs.current),d=Fi(hi.current),a.stateNode=Fe(g,o,d,a),Bi(a)):a.stateNode=o.stateNode}}else Yo=function(){},xl=function(){},Sl=function(){};function qo(o,a){if(!Wt)switch(o.tailMode){case"hidden":a=o.tail;for(var d=null;a!==null;)a.alternate!==null&&(d=a),a=a.sibling;d===null?o.tail=null:d.sibling=null;break;case"collapsed":d=o.tail;for(var g=null;d!==null;)d.alternate!==null&&(g=d),d=d.sibling;g===null?a||o.tail===null?o.tail=null:o.tail.sibling=null:g.sibling=null}}function An(o){var a=o.alternate!==null&&o.alternate.child===o.child,d=0,g=0;if(a)for(var S=o.child;S!==null;)d|=S.lanes|S.childLanes,g|=S.subtreeFlags&14680064,g|=S.flags&14680064,S.return=o,S=S.sibling;else for(S=o.child;S!==null;)d|=S.lanes|S.childLanes,g|=S.subtreeFlags,g|=S.flags,S.return=o,S=S.sibling;return o.subtreeFlags|=g,o.childLanes=d,a}function zy(o,a,d){var g=a.pendingProps;switch(Xu(a),a.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return An(a),null;case 1:return mn(a.type)&&on(),An(a),null;case 3:return g=a.stateNode,zs(),ct(jt),ct(Tt),Ku(),g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null),(o===null||o.child===null)&&(Fo(a)?Bi(a):o===null||o.memoizedState.isDehydrated&&!(a.flags&256)||(a.flags|=1024,xi!==null&&(Ah(xi),xi=null))),Yo(o,a),An(a),null;case 5:Qu(a),d=Fi(Fs.current);var S=a.type;if(o!==null&&a.stateNode!=null)xl(o,a,S,g,d),o.ref!==a.ref&&(a.flags|=512,a.flags|=2097152);else{if(!g){if(a.stateNode===null)throw Error(l(166));return An(a),null}if(o=Fi(hi.current),Fo(a)){if(!ye)throw Error(l(175));o=Au(a.stateNode,a.type,a.memoizedProps,d,o,a,!Oo),a.updateQueue=o,o!==null&&Bi(a)}else{var T=U(S,g,d,o,a);Xo(T,a,!1,!1),a.stateNode=T,ce(T,S,g,d,o)&&Bi(a)}a.ref!==null&&(a.flags|=512,a.flags|=2097152)}return An(a),null;case 6:if(o&&a.stateNode!=null)Sl(o,a,o.memoizedProps,g);else{if(typeof g!="string"&&a.stateNode===null)throw Error(l(166));if(o=Fi(Fs.current),d=Fi(hi.current),Fo(a)){if(!ye)throw Error(l(176));if(o=a.stateNode,g=a.memoizedProps,(d=Ru(o,g,a,!Oo))&&(S=Qn,S!==null))switch(T=(S.mode&1)!==0,S.tag){case 3:Ke(S.stateNode.containerInfo,o,g,T);break;case 5:ot(S.type,S.memoizedProps,S.stateNode,o,g,T)}d&&Bi(a)}else a.stateNode=Fe(g,o,d,a)}return An(a),null;case 13:if(ct(Yt),g=a.memoizedState,Wt&&Jn!==null&&a.mode&1&&!(a.flags&128)){for(o=Jn;o;)o=vr(o);return Us(),a.flags|=98560,a}if(g!==null&&g.dehydrated!==null){if(g=Fo(a),o===null){if(!g)throw Error(l(318));if(!ye)throw Error(l(344));if(o=a.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));Pu(o,a)}else Us(),!(a.flags&128)&&(a.memoizedState=null),a.flags|=4;return An(a),null}return xi!==null&&(Ah(xi),xi=null),a.flags&128?(a.lanes=d,a):(g=g!==null,d=!1,o===null?Fo(a):d=o.memoizedState!==null,g&&!d&&(a.child.flags|=8192,a.mode&1&&(o===null||Yt.current&1?un===0&&(un=3):Ph())),a.updateQueue!==null&&(a.flags|=4),An(a),null);case 4:return zs(),Yo(o,a),o===null&&we(a.stateNode.containerInfo),An(a),null;case 10:return Bu(a.type._context),An(a),null;case 17:return mn(a.type)&&on(),An(a),null;case 19:if(ct(Yt),S=a.memoizedState,S===null)return An(a),null;if(g=(a.flags&128)!==0,T=S.rendering,T===null)if(g)qo(S,!1);else{if(un!==0||o!==null&&o.flags&128)for(o=a.child;o!==null;){if(T=fl(o),T!==null){for(a.flags|=128,qo(S,!1),o=T.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),a.subtreeFlags=0,o=d,g=a.child;g!==null;)d=g,S=o,d.flags&=14680066,T=d.alternate,T===null?(d.childLanes=0,d.lanes=S,d.child=null,d.subtreeFlags=0,d.memoizedProps=null,d.memoizedState=null,d.updateQueue=null,d.dependencies=null,d.stateNode=null):(d.childLanes=T.childLanes,d.lanes=T.lanes,d.child=T.child,d.subtreeFlags=0,d.deletions=null,d.memoizedProps=T.memoizedProps,d.memoizedState=T.memoizedState,d.updateQueue=T.updateQueue,d.type=T.type,S=T.dependencies,d.dependencies=S===null?null:{lanes:S.lanes,firstContext:S.firstContext}),g=g.sibling;return qe(Yt,Yt.current&1|2),a.child}o=o.sibling}S.tail!==null&&vn()>wh&&(a.flags|=128,g=!0,qo(S,!1),a.lanes=4194304)}else{if(!g)if(o=fl(T),o!==null){if(a.flags|=128,g=!0,o=o.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),qo(S,!0),S.tail===null&&S.tailMode==="hidden"&&!T.alternate&&!Wt)return An(a),null}else 2*vn()-S.renderingStartTime>wh&&d!==1073741824&&(a.flags|=128,g=!0,qo(S,!1),a.lanes=4194304);S.isBackwards?(T.sibling=a.child,a.child=T):(o=S.last,o!==null?o.sibling=T:a.child=T,S.last=T)}return S.tail!==null?(a=S.tail,S.rendering=a,S.tail=a.sibling,S.renderingStartTime=vn(),a.sibling=null,o=Yt.current,qe(Yt,g?o&1|2:o&1),a):(An(a),null);case 22:case 23:return Rh(),g=a.memoizedState!==null,o!==null&&o.memoizedState!==null!==g&&(a.flags|=8192),g&&a.mode&1?$n&1073741824&&(An(a),Re&&a.subtreeFlags&6&&(a.flags|=8192)):An(a),null;case 24:return null;case 25:return null}throw Error(l(156,a.tag))}var By=c.ReactCurrentOwner,Kn=!1;function Un(o,a,d,g){a.child=o===null?Tp(a,null,d,g):Os(a,o.child,d,g)}function Kp(o,a,d,g,S){d=d.render;var T=a.ref;return Is(a,S),g=eh(o,a,d,g,T,S),d=th(),o!==null&&!Kn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~S,nr(o,a,S)):(Wt&&d&&Wu(a),a.flags|=1,Un(o,a,g,S),a.child)}function $p(o,a,d,g,S){if(o===null){var T=d.type;return typeof T=="function"&&!Ch(T)&&T.defaultProps===void 0&&d.compare===null&&d.defaultProps===void 0?(a.tag=15,a.type=T,em(o,a,T,g,S)):(o=Vl(d.type,null,g,a,a.mode,S),o.ref=a.ref,o.return=a,a.child=o)}if(T=o.child,!(o.lanes&S)){var O=T.memoizedProps;if(d=d.compare,d=d!==null?d:il,d(O,g)&&o.ref===a.ref)return nr(o,a,S)}return a.flags|=1,o=Er(T,g),o.ref=a.ref,o.return=a,a.child=o}function em(o,a,d,g,S){if(o!==null&&il(o.memoizedProps,g)&&o.ref===a.ref)if(Kn=!1,(o.lanes&S)!==0)o.flags&131072&&(Kn=!0);else return a.lanes=o.lanes,nr(o,a,S);return ah(o,a,d,g,S)}function tm(o,a,d){var g=a.pendingProps,S=g.children,T=o!==null?o.memoizedState:null;if(g.mode==="hidden")if(!(a.mode&1))a.memoizedState={baseLanes:0,cachePool:null},qe(ks,$n),$n|=d;else if(d&1073741824)a.memoizedState={baseLanes:0,cachePool:null},g=T!==null?T.baseLanes:d,qe(ks,$n),$n|=g;else return o=T!==null?T.baseLanes|d:d,a.lanes=a.childLanes=1073741824,a.memoizedState={baseLanes:o,cachePool:null},a.updateQueue=null,qe(ks,$n),$n|=o,null;else T!==null?(g=T.baseLanes|d,a.memoizedState=null):g=d,qe(ks,$n),$n|=g;return Un(o,a,S,d),a.child}function nm(o,a){var d=a.ref;(o===null&&d!==null||o!==null&&o.ref!==d)&&(a.flags|=512,a.flags|=2097152)}function ah(o,a,d,g,S){var T=mn(d)?Li:Tt.current;return T=ai(a,T),Is(a,S),d=eh(o,a,d,g,T,S),g=th(),o!==null&&!Kn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~S,nr(o,a,S)):(Wt&&g&&Wu(a),a.flags|=1,Un(o,a,d,S),a.child)}function im(o,a,d,g,S){if(mn(d)){var T=!0;gn(a)}else T=!1;if(Is(a,S),a.stateNode===null)o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),vp(a,d,g),Gu(a,d,g,S),g=!0;else if(o===null){var O=a.stateNode,Y=a.memoizedProps;O.props=Y;var ue=O.context,Pe=d.contextType;typeof Pe=="object"&&Pe!==null?Pe=li(Pe):(Pe=mn(d)?Li:Tt.current,Pe=ai(a,Pe));var We=d.getDerivedStateFromProps,pt=typeof We=="function"||typeof O.getSnapshotBeforeUpdate=="function";pt||typeof O.UNSAFE_componentWillReceiveProps!="function"&&typeof O.componentWillReceiveProps!="function"||(Y!==g||ue!==Pe)&&_p(a,O,g,Pe),_r=!1;var rt=a.memoizedState;O.state=rt,al(a,g,O,S),ue=a.memoizedState,Y!==g||rt!==ue||jt.current||_r?(typeof We=="function"&&(Vu(a,d,We,g),ue=a.memoizedState),(Y=_r||gp(a,d,Y,g,rt,ue,Pe))?(pt||typeof O.UNSAFE_componentWillMount!="function"&&typeof O.componentWillMount!="function"||(typeof O.componentWillMount=="function"&&O.componentWillMount(),typeof O.UNSAFE_componentWillMount=="function"&&O.UNSAFE_componentWillMount()),typeof O.componentDidMount=="function"&&(a.flags|=4194308)):(typeof O.componentDidMount=="function"&&(a.flags|=4194308),a.memoizedProps=g,a.memoizedState=ue),O.props=g,O.state=ue,O.context=Pe,g=Y):(typeof O.componentDidMount=="function"&&(a.flags|=4194308),g=!1)}else{O=a.stateNode,fp(o,a),Y=a.memoizedProps,Pe=a.type===a.elementType?Y:yi(a.type,Y),O.props=Pe,pt=a.pendingProps,rt=O.context,ue=d.contextType,typeof ue=="object"&&ue!==null?ue=li(ue):(ue=mn(d)?Li:Tt.current,ue=ai(a,ue));var Bt=d.getDerivedStateFromProps;(We=typeof Bt=="function"||typeof O.getSnapshotBeforeUpdate=="function")||typeof O.UNSAFE_componentWillReceiveProps!="function"&&typeof O.componentWillReceiveProps!="function"||(Y!==pt||rt!==ue)&&_p(a,O,g,ue),_r=!1,rt=a.memoizedState,O.state=rt,al(a,g,O,S);var $e=a.memoizedState;Y!==pt||rt!==$e||jt.current||_r?(typeof Bt=="function"&&(Vu(a,d,Bt,g),$e=a.memoizedState),(Pe=_r||gp(a,d,Pe,g,rt,$e,ue)||!1)?(We||typeof O.UNSAFE_componentWillUpdate!="function"&&typeof O.componentWillUpdate!="function"||(typeof O.componentWillUpdate=="function"&&O.componentWillUpdate(g,$e,ue),typeof O.UNSAFE_componentWillUpdate=="function"&&O.UNSAFE_componentWillUpdate(g,$e,ue)),typeof O.componentDidUpdate=="function"&&(a.flags|=4),typeof O.getSnapshotBeforeUpdate=="function"&&(a.flags|=1024)):(typeof O.componentDidUpdate!="function"||Y===o.memoizedProps&&rt===o.memoizedState||(a.flags|=4),typeof O.getSnapshotBeforeUpdate!="function"||Y===o.memoizedProps&&rt===o.memoizedState||(a.flags|=1024),a.memoizedProps=g,a.memoizedState=$e),O.props=g,O.state=$e,O.context=ue,g=Pe):(typeof O.componentDidUpdate!="function"||Y===o.memoizedProps&&rt===o.memoizedState||(a.flags|=4),typeof O.getSnapshotBeforeUpdate!="function"||Y===o.memoizedProps&&rt===o.memoizedState||(a.flags|=1024),g=!1)}return lh(o,a,d,g,T,S)}function lh(o,a,d,g,S,T){nm(o,a);var O=(a.flags&128)!==0;if(!g&&!O)return S&&Cs(a,d,!1),nr(o,a,T);g=a.stateNode,By.current=a;var Y=O&&typeof d.getDerivedStateFromError!="function"?null:g.render();return a.flags|=1,o!==null&&O?(a.child=Os(a,o.child,null,T),a.child=Os(a,null,Y,T)):Un(o,a,Y,T),a.memoizedState=g.state,S&&Cs(a,d,!0),a.child}function rm(o){var a=o.stateNode;a.pendingContext?Ii(o,a.pendingContext,a.pendingContext!==a.context):a.context&&Ii(o,a.context,!1),ju(o,a.containerInfo)}function sm(o,a,d,g,S){return Us(),Zu(S),a.flags|=256,Un(o,a,d,g),a.child}var Ml={dehydrated:null,treeContext:null,retryLane:0};function wl(o){return{baseLanes:o,cachePool:null}}function om(o,a,d){var g=a.pendingProps,S=Yt.current,T=!1,O=(a.flags&128)!==0,Y;if((Y=O)||(Y=o!==null&&o.memoizedState===null?!1:(S&2)!==0),Y?(T=!0,a.flags&=-129):(o===null||o.memoizedState!==null)&&(S|=1),qe(Yt,S&1),o===null)return qu(a),o=a.memoizedState,o!==null&&(o=o.dehydrated,o!==null)?(a.mode&1?Do(o)?a.lanes=8:a.lanes=1073741824:a.lanes=1,null):(S=g.children,o=g.fallback,T?(g=a.mode,T=a.child,S={mode:"hidden",children:S},!(g&1)&&T!==null?(T.childLanes=0,T.pendingProps=S):T=Gl(S,g,0,null),o=Qr(o,g,d,null),T.return=a,o.return=a,T.sibling=o,a.child=T,a.child.memoizedState=wl(d),a.memoizedState=Ml,o):ch(a,S));if(S=o.memoizedState,S!==null){if(Y=S.dehydrated,Y!==null){if(O)return a.flags&256?(a.flags&=-257,El(o,a,d,Error(l(422)))):a.memoizedState!==null?(a.child=o.child,a.flags|=128,null):(T=g.fallback,S=a.mode,g=Gl({mode:"visible",children:g.children},S,0,null),T=Qr(T,S,d,null),T.flags|=2,g.return=a,T.return=a,g.sibling=T,a.child=g,a.mode&1&&Os(a,o.child,null,d),a.child.memoizedState=wl(d),a.memoizedState=Ml,T);if(!(a.mode&1))a=El(o,a,d,null);else if(Do(Y))a=El(o,a,d,Error(l(419)));else if(g=(d&o.childLanes)!==0,Kn||g){if(g=an,g!==null){switch(d&-d){case 4:T=2;break;case 16:T=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:T=32;break;case 536870912:T=268435456;break;default:T=0}g=T&(g.suspendedLanes|d)?0:T,g!==0&&g!==S.retryLane&&(S.retryLane=g,di(o,g,-1))}Ph(),a=El(o,a,d,Error(l(421)))}else Io(Y)?(a.flags|=128,a.child=o.child,a=Ky.bind(null,o),As(Y,a),a=null):(d=S.treeContext,ye&&(Jn=Qa(Y),Qn=a,Wt=!0,xi=null,Oo=!1,d!==null&&(ci[ui++]=$i,ci[ui++]=er,ci[ui++]=Vr,$i=d.id,er=d.overflow,Vr=a)),a=ch(a,a.pendingProps.children),a.flags|=4096);return a}return T?(g=lm(o,a,g.children,g.fallback,d),T=a.child,S=o.child.memoizedState,T.memoizedState=S===null?wl(d):{baseLanes:S.baseLanes|d,cachePool:null},T.childLanes=o.childLanes&~d,a.memoizedState=Ml,g):(d=am(o,a,g.children,d),a.memoizedState=null,d)}return T?(g=lm(o,a,g.children,g.fallback,d),T=a.child,S=o.child.memoizedState,T.memoizedState=S===null?wl(d):{baseLanes:S.baseLanes|d,cachePool:null},T.childLanes=o.childLanes&~d,a.memoizedState=Ml,g):(d=am(o,a,g.children,d),a.memoizedState=null,d)}function ch(o,a){return a=Gl({mode:"visible",children:a},o.mode,0,null),a.return=o,o.child=a}function am(o,a,d,g){var S=o.child;return o=S.sibling,d=Er(S,{mode:"visible",children:d}),!(a.mode&1)&&(d.lanes=g),d.return=a,d.sibling=null,o!==null&&(g=a.deletions,g===null?(a.deletions=[o],a.flags|=16):g.push(o)),a.child=d}function lm(o,a,d,g,S){var T=a.mode;o=o.child;var O=o.sibling,Y={mode:"hidden",children:d};return!(T&1)&&a.child!==o?(d=a.child,d.childLanes=0,d.pendingProps=Y,a.deletions=null):(d=Er(o,Y),d.subtreeFlags=o.subtreeFlags&14680064),O!==null?g=Er(O,g):(g=Qr(g,T,S,null),g.flags|=2),g.return=a,d.return=a,d.sibling=g,a.child=d,g}function El(o,a,d,g){return g!==null&&Zu(g),Os(a,o.child,null,d),o=ch(a,a.pendingProps.children),o.flags|=2,a.memoizedState=null,o}function cm(o,a,d){o.lanes|=a;var g=o.alternate;g!==null&&(g.lanes|=a),ku(o.return,a,d)}function uh(o,a,d,g,S){var T=o.memoizedState;T===null?o.memoizedState={isBackwards:a,rendering:null,renderingStartTime:0,last:g,tail:d,tailMode:S}:(T.isBackwards=a,T.rendering=null,T.renderingStartTime=0,T.last=g,T.tail=d,T.tailMode=S)}function um(o,a,d){var g=a.pendingProps,S=g.revealOrder,T=g.tail;if(Un(o,a,g.children,d),g=Yt.current,g&2)g=g&1|2,a.flags|=128;else{if(o!==null&&o.flags&128)e:for(o=a.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&cm(o,d,a);else if(o.tag===19)cm(o,d,a);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===a)break e;for(;o.sibling===null;){if(o.return===null||o.return===a)break e;o=o.return}o.sibling.return=o.return,o=o.sibling}g&=1}if(qe(Yt,g),!(a.mode&1))a.memoizedState=null;else switch(S){case"forwards":for(d=a.child,S=null;d!==null;)o=d.alternate,o!==null&&fl(o)===null&&(S=d),d=d.sibling;d=S,d===null?(S=a.child,a.child=null):(S=d.sibling,d.sibling=null),uh(a,!1,S,d,T);break;case"backwards":for(d=null,S=a.child,a.child=null;S!==null;){if(o=S.alternate,o!==null&&fl(o)===null){a.child=S;break}o=S.sibling,S.sibling=d,d=S,S=o}uh(a,!0,d,null,T);break;case"together":uh(a,!1,null,null,void 0);break;default:a.memoizedState=null}return a.child}function nr(o,a,d){if(o!==null&&(a.dependencies=o.dependencies),Hs|=a.lanes,!(d&a.childLanes))return null;if(o!==null&&a.child!==o.child)throw Error(l(153));if(a.child!==null){for(o=a.child,d=Er(o,o.pendingProps),a.child=d,d.return=a;o.sibling!==null;)o=o.sibling,d=d.sibling=Er(o,o.pendingProps),d.return=a;d.sibling=null}return a.child}function ky(o,a,d){switch(a.tag){case 3:rm(a),Us();break;case 5:bp(a);break;case 1:mn(a.type)&&gn(a);break;case 4:ju(a,a.stateNode.containerInfo);break;case 10:hp(a,a.type._context,a.memoizedProps.value);break;case 13:var g=a.memoizedState;if(g!==null)return g.dehydrated!==null?(qe(Yt,Yt.current&1),a.flags|=128,null):d&a.child.childLanes?om(o,a,d):(qe(Yt,Yt.current&1),o=nr(o,a,d),o!==null?o.sibling:null);qe(Yt,Yt.current&1);break;case 19:if(g=(d&a.childLanes)!==0,o.flags&128){if(g)return um(o,a,d);a.flags|=128}var S=a.memoizedState;if(S!==null&&(S.rendering=null,S.tail=null,S.lastEffect=null),qe(Yt,Yt.current),g)break;return null;case 22:case 23:return a.lanes=0,tm(o,a,d)}return nr(o,a,d)}function Hy(o,a){switch(Xu(a),a.tag){case 1:return mn(a.type)&&on(),o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 3:return zs(),ct(jt),ct(Tt),Ku(),o=a.flags,o&65536&&!(o&128)?(a.flags=o&-65537|128,a):null;case 5:return Qu(a),null;case 13:if(ct(Yt),o=a.memoizedState,o!==null&&o.dehydrated!==null){if(a.alternate===null)throw Error(l(340));Us()}return o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 19:return ct(Yt),null;case 4:return zs(),null;case 10:return Bu(a.type._context),null;case 22:case 23:return Rh(),null;case 24:return null;default:return null}}var Tl=!1,Xr=!1,Vy=typeof WeakSet=="function"?WeakSet:Set,Oe=null;function bl(o,a){var d=o.ref;if(d!==null)if(typeof d=="function")try{d(null)}catch(g){Vn(o,a,g)}else d.current=null}function hh(o,a,d){try{d()}catch(g){Vn(o,a,g)}}var hm=!1;function Gy(o,a){for(j(o.containerInfo),Oe=a;Oe!==null;)if(o=Oe,a=o.child,(o.subtreeFlags&1028)!==0&&a!==null)a.return=o,Oe=a;else for(;Oe!==null;){o=Oe;try{var d=o.alternate;if(o.flags&1024)switch(o.tag){case 0:case 11:case 15:break;case 1:if(d!==null){var g=d.memoizedProps,S=d.memoizedState,T=o.stateNode,O=T.getSnapshotBeforeUpdate(o.elementType===o.type?g:yi(o.type,g),S);T.__reactInternalSnapshotBeforeUpdate=O}break;case 3:Re&&Ie(o.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(l(163))}}catch(Y){Vn(o,o.return,Y)}if(a=o.sibling,a!==null){a.return=o.return,Oe=a;break}Oe=o.return}return d=hm,hm=!1,d}function Yr(o,a,d){var g=a.updateQueue;if(g=g!==null?g.lastEffect:null,g!==null){var S=g=g.next;do{if((S.tag&o)===o){var T=S.destroy;S.destroy=void 0,T!==void 0&&hh(a,d,T)}S=S.next}while(S!==g)}}function Zo(o,a){if(a=a.updateQueue,a=a!==null?a.lastEffect:null,a!==null){var d=a=a.next;do{if((d.tag&o)===o){var g=d.create;d.destroy=g()}d=d.next}while(d!==a)}}function fh(o){var a=o.ref;if(a!==null){var d=o.stateNode;switch(o.tag){case 5:o=ie(d);break;default:o=d}typeof a=="function"?a(o):a.current=o}}function fm(o,a,d){if(Di&&typeof Di.onCommitFiberUnmount=="function")try{Di.onCommitFiberUnmount(tl,a)}catch{}switch(a.tag){case 0:case 11:case 14:case 15:if(o=a.updateQueue,o!==null&&(o=o.lastEffect,o!==null)){var g=o=o.next;do{var S=g,T=S.destroy;S=S.tag,T!==void 0&&(S&2||S&4)&&hh(a,d,T),g=g.next}while(g!==o)}break;case 1:if(bl(a,d),o=a.stateNode,typeof o.componentWillUnmount=="function")try{o.props=a.memoizedProps,o.state=a.memoizedState,o.componentWillUnmount()}catch(O){Vn(a,d,O)}break;case 5:bl(a,d);break;case 4:Re?_m(o,a,d):k&&k&&(a=a.stateNode.containerInfo,d=pe(a),xt(a,d))}}function dm(o,a,d){for(var g=a;;)if(fm(o,g,d),g.child===null||Re&&g.tag===4){if(g===a)break;for(;g.sibling===null;){if(g.return===null||g.return===a)return;g=g.return}g.sibling.return=g.return,g=g.sibling}else g.child.return=g,g=g.child}function pm(o){var a=o.alternate;a!==null&&(o.alternate=null,pm(a)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(a=o.stateNode,a!==null&&Ge(a)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}function mm(o){return o.tag===5||o.tag===3||o.tag===4}function gm(o){e:for(;;){for(;o.sibling===null;){if(o.return===null||mm(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue e;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function vm(o){if(Re){e:{for(var a=o.return;a!==null;){if(mm(a))break e;a=a.return}throw Error(l(160))}var d=a;switch(d.tag){case 5:a=d.stateNode,d.flags&32&&(fe(a),d.flags&=-33),d=gm(o),ph(o,d,a);break;case 3:case 4:a=d.stateNode.containerInfo,d=gm(o),dh(o,d,a);break;default:throw Error(l(161))}}}function dh(o,a,d){var g=o.tag;if(g===5||g===6)o=o.stateNode,a?Ae(d,o,a):je(d,o);else if(g!==4&&(o=o.child,o!==null))for(dh(o,a,d),o=o.sibling;o!==null;)dh(o,a,d),o=o.sibling}function ph(o,a,d){var g=o.tag;if(g===5||g===6)o=o.stateNode,a?At(d,o,a):be(d,o);else if(g!==4&&(o=o.child,o!==null))for(ph(o,a,d),o=o.sibling;o!==null;)ph(o,a,d),o=o.sibling}function _m(o,a,d){for(var g=a,S=!1,T,O;;){if(!S){S=g.return;e:for(;;){if(S===null)throw Error(l(160));switch(T=S.stateNode,S.tag){case 5:O=!1;break e;case 3:T=T.containerInfo,O=!0;break e;case 4:T=T.containerInfo,O=!0;break e}S=S.return}S=!0}if(g.tag===5||g.tag===6)dm(o,g,d),O?V(T,g.stateNode):Rt(T,g.stateNode);else if(g.tag===18)O?le(T,g.stateNode):ae(T,g.stateNode);else if(g.tag===4){if(g.child!==null){T=g.stateNode.containerInfo,O=!0,g.child.return=g,g=g.child;continue}}else if(fm(o,g,d),g.child!==null){g.child.return=g,g=g.child;continue}if(g===a)break;for(;g.sibling===null;){if(g.return===null||g.return===a)return;g=g.return,g.tag===4&&(S=!1)}g.sibling.return=g.return,g=g.sibling}}function mh(o,a){if(Re){switch(a.tag){case 0:case 11:case 14:case 15:Yr(3,a,a.return),Zo(3,a),Yr(5,a,a.return);return;case 1:return;case 5:var d=a.stateNode;if(d!=null){var g=a.memoizedProps;o=o!==null?o.memoizedProps:g;var S=a.type,T=a.updateQueue;a.updateQueue=null,T!==null&&at(d,T,S,o,g,a)}return;case 6:if(a.stateNode===null)throw Error(l(162));d=a.memoizedProps,Ce(a.stateNode,o!==null?o.memoizedProps:d,d);return;case 3:ye&&o!==null&&o.memoizedState.isDehydrated&&K(a.stateNode.containerInfo);return;case 12:return;case 13:Al(a);return;case 19:Al(a);return;case 17:return}throw Error(l(163))}switch(a.tag){case 0:case 11:case 14:case 15:Yr(3,a,a.return),Zo(3,a),Yr(5,a,a.return);return;case 12:return;case 13:Al(a);return;case 19:Al(a);return;case 3:ye&&o!==null&&o.memoizedState.isDehydrated&&K(a.stateNode.containerInfo);break;case 22:case 23:return}e:if(k){switch(a.tag){case 1:case 5:case 6:break e;case 3:case 4:a=a.stateNode,xt(a.containerInfo,a.pendingChildren);break e}throw Error(l(163))}}function Al(o){var a=o.updateQueue;if(a!==null){o.updateQueue=null;var d=o.stateNode;d===null&&(d=o.stateNode=new Vy),a.forEach(function(g){var S=$y.bind(null,o,g);d.has(g)||(d.add(g),g.then(S,S))})}}function Wy(o,a){for(Oe=a;Oe!==null;){a=Oe;var d=a.deletions;if(d!==null)for(var g=0;g<d.length;g++){var S=d[g];try{var T=o;Re?_m(T,S,a):dm(T,S,a);var O=S.alternate;O!==null&&(O.return=null),S.return=null}catch(Je){Vn(S,a,Je)}}if(d=a.child,a.subtreeFlags&12854&&d!==null)d.return=a,Oe=d;else for(;Oe!==null;){a=Oe;try{var Y=a.flags;if(Y&32&&Re&&fe(a.stateNode),Y&512){var ue=a.alternate;if(ue!==null){var Pe=ue.ref;Pe!==null&&(typeof Pe=="function"?Pe(null):Pe.current=null)}}if(Y&8192)switch(a.tag){case 13:if(a.memoizedState!==null){var We=a.alternate;(We===null||We.memoizedState===null)&&(Mh=vn())}break;case 22:var pt=a.memoizedState!==null,rt=a.alternate,Bt=rt!==null&&rt.memoizedState!==null;if(d=a,Re){e:if(g=d,S=pt,T=null,Re)for(var $e=g;;){if($e.tag===5){if(T===null){T=$e;var Rn=$e.stateNode;S?Me(Rn):et($e.stateNode,$e.memoizedProps)}}else if($e.tag===6){if(T===null){var mi=$e.stateNode;S?Se(mi):W(mi,$e.memoizedProps)}}else if(($e.tag!==22&&$e.tag!==23||$e.memoizedState===null||$e===g)&&$e.child!==null){$e.child.return=$e,$e=$e.child;continue}if($e===g)break;for(;$e.sibling===null;){if($e.return===null||$e.return===g)break e;T===$e&&(T=null),$e=$e.return}T===$e&&(T=null),$e.sibling.return=$e.return,$e=$e.sibling}}if(pt&&!Bt&&d.mode&1){Oe=d;for(var ee=d.child;ee!==null;){for(d=Oe=ee;Oe!==null;){g=Oe;var J=g.child;switch(g.tag){case 0:case 11:case 14:case 15:Yr(4,g,g.return);break;case 1:bl(g,g.return);var se=g.stateNode;if(typeof se.componentWillUnmount=="function"){var ze=g.return;try{se.props=g.memoizedProps,se.state=g.memoizedState,se.componentWillUnmount()}catch(Je){Vn(g,ze,Je)}}break;case 5:bl(g,g.return);break;case 22:if(g.memoizedState!==null){Sm(d);continue}}J!==null?(J.return=g,Oe=J):Sm(d)}ee=ee.sibling}}}switch(Y&4102){case 2:vm(a),a.flags&=-3;break;case 6:vm(a),a.flags&=-3,mh(a.alternate,a);break;case 4096:a.flags&=-4097;break;case 4100:a.flags&=-4097,mh(a.alternate,a);break;case 4:mh(a.alternate,a)}}catch(Je){Vn(a,a.return,Je)}if(d=a.sibling,d!==null){d.return=a.return,Oe=d;break}Oe=a.return}}}function Xy(o,a,d){Oe=o,ym(o)}function ym(o,a,d){for(var g=(o.mode&1)!==0;Oe!==null;){var S=Oe,T=S.child;if(S.tag===22&&g){var O=S.memoizedState!==null||Tl;if(!O){var Y=S.alternate,ue=Y!==null&&Y.memoizedState!==null||Xr;Y=Tl;var Pe=Xr;if(Tl=O,(Xr=ue)&&!Pe)for(Oe=S;Oe!==null;)O=Oe,ue=O.child,O.tag===22&&O.memoizedState!==null?Mm(S):ue!==null?(ue.return=O,Oe=ue):Mm(S);for(;T!==null;)Oe=T,ym(T),T=T.sibling;Oe=S,Tl=Y,Xr=Pe}xm(o)}else S.subtreeFlags&8772&&T!==null?(T.return=S,Oe=T):xm(o)}}function xm(o){for(;Oe!==null;){var a=Oe;if(a.flags&8772){var d=a.alternate;try{if(a.flags&8772)switch(a.tag){case 0:case 11:case 15:Xr||Zo(5,a);break;case 1:var g=a.stateNode;if(a.flags&4&&!Xr)if(d===null)g.componentDidMount();else{var S=a.elementType===a.type?d.memoizedProps:yi(a.type,d.memoizedProps);g.componentDidUpdate(S,d.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}var T=a.updateQueue;T!==null&&pp(a,T,g);break;case 3:var O=a.updateQueue;if(O!==null){if(d=null,a.child!==null)switch(a.child.tag){case 5:d=ie(a.child.stateNode);break;case 1:d=a.child.stateNode}pp(a,O,d)}break;case 5:var Y=a.stateNode;d===null&&a.flags&4&&Ue(Y,a.type,a.memoizedProps,a);break;case 6:break;case 4:break;case 12:break;case 13:if(ye&&a.memoizedState===null){var ue=a.alternate;if(ue!==null){var Pe=ue.memoizedState;if(Pe!==null){var We=Pe.dehydrated;We!==null&&re(We)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(l(163))}Xr||a.flags&512&&fh(a)}catch(pt){Vn(a,a.return,pt)}}if(a===o){Oe=null;break}if(d=a.sibling,d!==null){d.return=a.return,Oe=d;break}Oe=a.return}}function Sm(o){for(;Oe!==null;){var a=Oe;if(a===o){Oe=null;break}var d=a.sibling;if(d!==null){d.return=a.return,Oe=d;break}Oe=a.return}}function Mm(o){for(;Oe!==null;){var a=Oe;try{switch(a.tag){case 0:case 11:case 15:var d=a.return;try{Zo(4,a)}catch(ue){Vn(a,d,ue)}break;case 1:var g=a.stateNode;if(typeof g.componentDidMount=="function"){var S=a.return;try{g.componentDidMount()}catch(ue){Vn(a,S,ue)}}var T=a.return;try{fh(a)}catch(ue){Vn(a,T,ue)}break;case 5:var O=a.return;try{fh(a)}catch(ue){Vn(a,O,ue)}}}catch(ue){Vn(a,a.return,ue)}if(a===o){Oe=null;break}var Y=a.sibling;if(Y!==null){Y.return=a.return,Oe=Y;break}Oe=a.return}}var Rl=0,Pl=1,Cl=2,Ll=3,Il=4;if(typeof Symbol=="function"&&Symbol.for){var jo=Symbol.for;Rl=jo("selector.component"),Pl=jo("selector.has_pseudo_class"),Cl=jo("selector.role"),Ll=jo("selector.test_id"),Il=jo("selector.text")}function gh(o){var a=de(o);if(a!=null){if(typeof a.memoizedProps["data-testname"]!="string")throw Error(l(364));return a}if(o=gt(o),o===null)throw Error(l(362));return o.stateNode.current}function vh(o,a){switch(a.$$typeof){case Rl:if(o.type===a.value)return!0;break;case Pl:e:{a=a.value,o=[o,0];for(var d=0;d<o.length;){var g=o[d++],S=o[d++],T=a[S];if(g.tag!==5||!L(g)){for(;T!=null&&vh(g,T);)S++,T=a[S];if(S===a.length){a=!0;break e}else for(g=g.child;g!==null;)o.push(g,S),g=g.sibling}}a=!1}return a;case Cl:if(o.tag===5&&ne(o.stateNode,a.value))return!0;break;case Il:if((o.tag===5||o.tag===6)&&(o=F(o),o!==null&&0<=o.indexOf(a.value)))return!0;break;case Ll:if(o.tag===5&&(o=o.memoizedProps["data-testname"],typeof o=="string"&&o.toLowerCase()===a.value.toLowerCase()))return!0;break;default:throw Error(l(365))}return!1}function _h(o){switch(o.$$typeof){case Rl:return"<"+(I(o.value)||"Unknown")+">";case Pl:return":has("+(_h(o)||"")+")";case Cl:return'[role="'+o.value+'"]';case Il:return'"'+o.value+'"';case Ll:return'[data-testname="'+o.value+'"]';default:throw Error(l(365))}}function wm(o,a){var d=[];o=[o,0];for(var g=0;g<o.length;){var S=o[g++],T=o[g++],O=a[T];if(S.tag!==5||!L(S)){for(;O!=null&&vh(S,O);)T++,O=a[T];if(T===a.length)d.push(S);else for(S=S.child;S!==null;)o.push(S,T),S=S.sibling}}return d}function yh(o,a){if(!nt)throw Error(l(363));o=gh(o),o=wm(o,a),a=[],o=Array.from(o);for(var d=0;d<o.length;){var g=o[d++];if(g.tag===5)L(g)||a.push(g.stateNode);else for(g=g.child;g!==null;)o.push(g),g=g.sibling}return a}var Yy=Math.ceil,Dl=c.ReactCurrentDispatcher,xh=c.ReactCurrentOwner,en=c.ReactCurrentBatchConfig,wt=0,an=null,ln=null,wn=0,$n=0,ks=pn(0),un=0,Qo=null,Hs=0,Nl=0,Sh=0,Jo=null,kn=null,Mh=0,wh=1/0;function Vs(){wh=vn()+500}var Ul=!1,Eh=null,xr=null,Ol=!1,Sr=null,Fl=0,Ko=0,Th=null,zl=-1,Bl=0;function On(){return wt&6?vn():zl!==-1?zl:zl=vn()}function Mr(o){return o.mode&1?wt&2&&wn!==0?wn&-wn:Ry.transition!==null?(Bl===0&&(o=Ka,Ka<<=1,!(Ka&4194240)&&(Ka=64),Bl=o),Bl):(o=Lt,o!==0?o:ve()):1}function di(o,a,d){if(50<Ko)throw Ko=0,Th=null,Error(l(185));var g=kl(o,a);return g===null?null:(Uo(g,a,d),(!(wt&2)||g!==an)&&(g===an&&(!(wt&2)&&(Nl|=a),un===4&&wr(g,wn)),Hn(g,d),a===1&&wt===0&&!(o.mode&1)&&(Vs(),nl&&Ui())),g)}function kl(o,a){o.lanes|=a;var d=o.alternate;for(d!==null&&(d.lanes|=a),d=o,o=o.return;o!==null;)o.childLanes|=a,d=o.alternate,d!==null&&(d.childLanes|=a),d=o,o=o.return;return d.tag===3?d.stateNode:null}function Hn(o,a){var d=o.callbackNode;yy(o,a);var g=el(o,o===an?wn:0);if(g===0)d!==null&&cp(d),o.callbackNode=null,o.callbackPriority=0;else if(a=g&-g,o.callbackPriority!==a){if(d!=null&&cp(d),a===1)o.tag===0?Ay(Tm.bind(null,o)):up(Tm.bind(null,o)),Ne?ke(function(){wt===0&&Ui()}):Du(Nu,Ui),d=null;else{switch(lp(g)){case 1:d=Nu;break;case 4:d=wy;break;case 16:d=Uu;break;case 536870912:d=Ey;break;default:d=Uu}d=Nm(d,Em.bind(null,o))}o.callbackPriority=a,o.callbackNode=d}}function Em(o,a){if(zl=-1,Bl=0,wt&6)throw Error(l(327));var d=o.callbackNode;if(jr()&&o.callbackNode!==d)return null;var g=el(o,o===an?wn:0);if(g===0)return null;if(g&30||g&o.expiredLanes||a)a=Hl(o,g);else{a=g;var S=wt;wt|=2;var T=Rm();(an!==o||wn!==a)&&(Vs(),qr(o,a));do try{jy();break}catch(Y){Am(o,Y)}while(!0);zu(),Dl.current=T,wt=S,ln!==null?a=0:(an=null,wn=0,a=un)}if(a!==0){if(a===2&&(S=Cu(o),S!==0&&(g=S,a=bh(o,S))),a===1)throw d=Qo,qr(o,0),wr(o,g),Hn(o,vn()),d;if(a===6)wr(o,g);else{if(S=o.current.alternate,!(g&30)&&!qy(S)&&(a=Hl(o,g),a===2&&(T=Cu(o),T!==0&&(g=T,a=bh(o,T))),a===1))throw d=Qo,qr(o,0),wr(o,g),Hn(o,vn()),d;switch(o.finishedWork=S,o.finishedLanes=g,a){case 0:case 1:throw Error(l(345));case 2:Zr(o,kn);break;case 3:if(wr(o,g),(g&130023424)===g&&(a=Mh+500-vn(),10<a)){if(el(o,0)!==0)break;if(S=o.suspendedLanes,(S&g)!==g){On(),o.pingedLanes|=o.suspendedLanes&S;break}o.timeoutHandle=Ye(Zr.bind(null,o,kn),a);break}Zr(o,kn);break;case 4:if(wr(o,g),(g&4194240)===g)break;for(a=o.eventTimes,S=-1;0<g;){var O=31-jn(g);T=1<<O,O=a[O],O>S&&(S=O),g&=~T}if(g=S,g=vn()-g,g=(120>g?120:480>g?480:1080>g?1080:1920>g?1920:3e3>g?3e3:4320>g?4320:1960*Yy(g/1960))-g,10<g){o.timeoutHandle=Ye(Zr.bind(null,o,kn),g);break}Zr(o,kn);break;case 5:Zr(o,kn);break;default:throw Error(l(329))}}}return Hn(o,vn()),o.callbackNode===d?Em.bind(null,o):null}function bh(o,a){var d=Jo;return o.current.memoizedState.isDehydrated&&(qr(o,a).flags|=256),o=Hl(o,a),o!==2&&(a=kn,kn=d,a!==null&&Ah(a)),o}function Ah(o){kn===null?kn=o:kn.push.apply(kn,o)}function qy(o){for(var a=o;;){if(a.flags&16384){var d=a.updateQueue;if(d!==null&&(d=d.stores,d!==null))for(var g=0;g<d.length;g++){var S=d[g],T=S.getSnapshot;S=S.value;try{if(!Ni(T(),S))return!1}catch{return!1}}}if(d=a.child,a.subtreeFlags&16384&&d!==null)d.return=a,a=d;else{if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return!0;a=a.return}a.sibling.return=a.return,a=a.sibling}}return!0}function wr(o,a){for(a&=~Sh,a&=~Nl,o.suspendedLanes|=a,o.pingedLanes&=~a,o=o.expirationTimes;0<a;){var d=31-jn(a),g=1<<d;o[d]=-1,a&=~g}}function Tm(o){if(wt&6)throw Error(l(327));jr();var a=el(o,0);if(!(a&1))return Hn(o,vn()),null;var d=Hl(o,a);if(o.tag!==0&&d===2){var g=Cu(o);g!==0&&(a=g,d=bh(o,g))}if(d===1)throw d=Qo,qr(o,0),wr(o,a),Hn(o,vn()),d;if(d===6)throw Error(l(345));return o.finishedWork=o.current.alternate,o.finishedLanes=a,Zr(o,kn),Hn(o,vn()),null}function bm(o){Sr!==null&&Sr.tag===0&&!(wt&6)&&jr();var a=wt;wt|=1;var d=en.transition,g=Lt;try{if(en.transition=null,Lt=1,o)return o()}finally{Lt=g,en.transition=d,wt=a,!(wt&6)&&Ui()}}function Rh(){$n=ks.current,ct(ks)}function qr(o,a){o.finishedWork=null,o.finishedLanes=0;var d=o.timeoutHandle;if(d!==tt&&(o.timeoutHandle=tt,Ze(d)),ln!==null)for(d=ln.return;d!==null;){var g=d;switch(Xu(g),g.tag){case 1:g=g.type.childContextTypes,g!=null&&on();break;case 3:zs(),ct(jt),ct(Tt),Ku();break;case 5:Qu(g);break;case 4:zs();break;case 13:ct(Yt);break;case 19:ct(Yt);break;case 10:Bu(g.type._context);break;case 22:case 23:Rh()}d=d.return}if(an=o,ln=o=Er(o.current,null),wn=$n=a,un=0,Qo=null,Sh=Nl=Hs=0,kn=Jo=null,Oi!==null){for(a=0;a<Oi.length;a++)if(d=Oi[a],g=d.interleaved,g!==null){d.interleaved=null;var S=g.next,T=d.pending;if(T!==null){var O=T.next;T.next=S,g.next=O}d.pending=g}Oi=null}return o}function Am(o,a){do{var d=ln;try{if(zu(),dl.current=yl,pl){for(var g=Qt.memoizedState;g!==null;){var S=g.queue;S!==null&&(S.pending=null),g=g.next}pl=!1}if(Bs=0,_n=Tn=Qt=null,Ho=!1,Vo=0,xh.current=null,d===null||d.return===null){un=1,Qo=a,ln=null;break}e:{var T=o,O=d.return,Y=d,ue=a;if(a=wn,Y.flags|=32768,ue!==null&&typeof ue=="object"&&typeof ue.then=="function"){var Pe=ue,We=Y,pt=We.tag;if(!(We.mode&1)&&(pt===0||pt===11||pt===15)){var rt=We.alternate;rt?(We.updateQueue=rt.updateQueue,We.memoizedState=rt.memoizedState,We.lanes=rt.lanes):(We.updateQueue=null,We.memoizedState=null)}var Bt=Zp(O);if(Bt!==null){Bt.flags&=-257,jp(Bt,O,Y,T,a),Bt.mode&1&&qp(T,Pe,a),a=Bt,ue=Pe;var $e=a.updateQueue;if($e===null){var Rn=new Set;Rn.add(ue),a.updateQueue=Rn}else $e.add(ue);break e}else{if(!(a&1)){qp(T,Pe,a),Ph();break e}ue=Error(l(426))}}else if(Wt&&Y.mode&1){var mi=Zp(O);if(mi!==null){!(mi.flags&65536)&&(mi.flags|=256),jp(mi,O,Y,T,a),Zu(ue);break e}}T=ue,un!==4&&(un=2),Jo===null?Jo=[T]:Jo.push(T),ue=sh(ue,Y),Y=O;do{switch(Y.tag){case 3:Y.flags|=65536,a&=-a,Y.lanes|=a;var ee=Xp(Y,ue,a);dp(Y,ee);break e;case 1:T=ue;var J=Y.type,se=Y.stateNode;if(!(Y.flags&128)&&(typeof J.getDerivedStateFromError=="function"||se!==null&&typeof se.componentDidCatch=="function"&&(xr===null||!xr.has(se)))){Y.flags|=65536,a&=-a,Y.lanes|=a;var ze=Yp(Y,T,a);dp(Y,ze);break e}}Y=Y.return}while(Y!==null)}Cm(d)}catch(Je){a=Je,ln===d&&d!==null&&(ln=d=d.return);continue}break}while(!0)}function Rm(){var o=Dl.current;return Dl.current=yl,o===null?yl:o}function Ph(){(un===0||un===3||un===2)&&(un=4),an===null||!(Hs&268435455)&&!(Nl&268435455)||wr(an,wn)}function Hl(o,a){var d=wt;wt|=2;var g=Rm();an===o&&wn===a||qr(o,a);do try{Zy();break}catch(S){Am(o,S)}while(!0);if(zu(),wt=d,Dl.current=g,ln!==null)throw Error(l(261));return an=null,wn=0,un}function Zy(){for(;ln!==null;)Pm(ln)}function jy(){for(;ln!==null&&!Sy();)Pm(ln)}function Pm(o){var a=Dm(o.alternate,o,$n);o.memoizedProps=o.pendingProps,a===null?Cm(o):ln=a,xh.current=null}function Cm(o){var a=o;do{var d=a.alternate;if(o=a.return,a.flags&32768){if(d=Hy(d,a),d!==null){d.flags&=32767,ln=d;return}if(o!==null)o.flags|=32768,o.subtreeFlags=0,o.deletions=null;else{un=6,ln=null;return}}else if(d=zy(d,a,$n),d!==null){ln=d;return}if(a=a.sibling,a!==null){ln=a;return}ln=a=o}while(a!==null);un===0&&(un=5)}function Zr(o,a){var d=Lt,g=en.transition;try{en.transition=null,Lt=1,Qy(o,a,d)}finally{en.transition=g,Lt=d}return null}function Qy(o,a,d){do jr();while(Sr!==null);if(wt&6)throw Error(l(327));var g=o.finishedWork,S=o.finishedLanes;if(g===null)return null;if(o.finishedWork=null,o.finishedLanes=0,g===o.current)throw Error(l(177));o.callbackNode=null,o.callbackPriority=0;var T=g.lanes|g.childLanes;if(xy(o,T),o===an&&(ln=an=null,wn=0),!(g.subtreeFlags&2064)&&!(g.flags&2064)||Ol||(Ol=!0,Nm(Uu,function(){return jr(),null})),T=(g.flags&15990)!==0,g.subtreeFlags&15990||T){T=en.transition,en.transition=null;var O=Lt;Lt=1;var Y=wt;wt|=4,xh.current=null,Gy(o,g),Wy(o,g),X(o.containerInfo),o.current=g,Xy(g),My(),wt=Y,Lt=O,en.transition=T}else o.current=g;if(Ol&&(Ol=!1,Sr=o,Fl=S),T=o.pendingLanes,T===0&&(xr=null),Ty(g.stateNode),Hn(o,vn()),a!==null)for(d=o.onRecoverableError,g=0;g<a.length;g++)d(a[g]);if(Ul)throw Ul=!1,o=Eh,Eh=null,o;return Fl&1&&o.tag!==0&&jr(),T=o.pendingLanes,T&1?o===Th?Ko++:(Ko=0,Th=o):Ko=0,Ui(),null}function jr(){if(Sr!==null){var o=lp(Fl),a=en.transition,d=Lt;try{if(en.transition=null,Lt=16>o?16:o,Sr===null)var g=!1;else{if(o=Sr,Sr=null,Fl=0,wt&6)throw Error(l(331));var S=wt;for(wt|=4,Oe=o.current;Oe!==null;){var T=Oe,O=T.child;if(Oe.flags&16){var Y=T.deletions;if(Y!==null){for(var ue=0;ue<Y.length;ue++){var Pe=Y[ue];for(Oe=Pe;Oe!==null;){var We=Oe;switch(We.tag){case 0:case 11:case 15:Yr(8,We,T)}var pt=We.child;if(pt!==null)pt.return=We,Oe=pt;else for(;Oe!==null;){We=Oe;var rt=We.sibling,Bt=We.return;if(pm(We),We===Pe){Oe=null;break}if(rt!==null){rt.return=Bt,Oe=rt;break}Oe=Bt}}}var $e=T.alternate;if($e!==null){var Rn=$e.child;if(Rn!==null){$e.child=null;do{var mi=Rn.sibling;Rn.sibling=null,Rn=mi}while(Rn!==null)}}Oe=T}}if(T.subtreeFlags&2064&&O!==null)O.return=T,Oe=O;else e:for(;Oe!==null;){if(T=Oe,T.flags&2048)switch(T.tag){case 0:case 11:case 15:Yr(9,T,T.return)}var ee=T.sibling;if(ee!==null){ee.return=T.return,Oe=ee;break e}Oe=T.return}}var J=o.current;for(Oe=J;Oe!==null;){O=Oe;var se=O.child;if(O.subtreeFlags&2064&&se!==null)se.return=O,Oe=se;else e:for(O=J;Oe!==null;){if(Y=Oe,Y.flags&2048)try{switch(Y.tag){case 0:case 11:case 15:Zo(9,Y)}}catch(Je){Vn(Y,Y.return,Je)}if(Y===O){Oe=null;break e}var ze=Y.sibling;if(ze!==null){ze.return=Y.return,Oe=ze;break e}Oe=Y.return}}if(wt=S,Ui(),Di&&typeof Di.onPostCommitFiberRoot=="function")try{Di.onPostCommitFiberRoot(tl,o)}catch{}g=!0}return g}finally{Lt=d,en.transition=a}}return!1}function Lm(o,a,d){a=sh(d,a),a=Xp(o,a,1),yr(o,a),a=On(),o=kl(o,1),o!==null&&(Uo(o,1,a),Hn(o,a))}function Vn(o,a,d){if(o.tag===3)Lm(o,o,d);else for(;a!==null;){if(a.tag===3){Lm(a,o,d);break}else if(a.tag===1){var g=a.stateNode;if(typeof a.type.getDerivedStateFromError=="function"||typeof g.componentDidCatch=="function"&&(xr===null||!xr.has(g))){o=sh(d,o),o=Yp(a,o,1),yr(a,o),o=On(),a=kl(a,1),a!==null&&(Uo(a,1,o),Hn(a,o));break}}a=a.return}}function Jy(o,a,d){var g=o.pingCache;g!==null&&g.delete(a),a=On(),o.pingedLanes|=o.suspendedLanes&d,an===o&&(wn&d)===d&&(un===4||un===3&&(wn&130023424)===wn&&500>vn()-Mh?qr(o,0):Sh|=d),Hn(o,a)}function Im(o,a){a===0&&(o.mode&1?(a=$a,$a<<=1,!($a&130023424)&&($a=4194304)):a=1);var d=On();o=kl(o,a),o!==null&&(Uo(o,a,d),Hn(o,d))}function Ky(o){var a=o.memoizedState,d=0;a!==null&&(d=a.retryLane),Im(o,d)}function $y(o,a){var d=0;switch(o.tag){case 13:var g=o.stateNode,S=o.memoizedState;S!==null&&(d=S.retryLane);break;case 19:g=o.stateNode;break;default:throw Error(l(314))}g!==null&&g.delete(a),Im(o,d)}var Dm;Dm=function(o,a,d){if(o!==null)if(o.memoizedProps!==a.pendingProps||jt.current)Kn=!0;else{if(!(o.lanes&d)&&!(a.flags&128))return Kn=!1,ky(o,a,d);Kn=!!(o.flags&131072)}else Kn=!1,Wt&&a.flags&1048576&&yp(a,ul,a.index);switch(a.lanes=0,a.tag){case 2:var g=a.type;o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps;var S=ai(a,Tt.current);Is(a,d),S=eh(null,a,g,o,S,d);var T=th();return a.flags|=1,typeof S=="object"&&S!==null&&typeof S.render=="function"&&S.$$typeof===void 0?(a.tag=1,a.memoizedState=null,a.updateQueue=null,mn(g)?(T=!0,gn(a)):T=!1,a.memoizedState=S.state!==null&&S.state!==void 0?S.state:null,Hu(a),S.updater=ll,a.stateNode=S,S._reactInternals=a,Gu(a,g,o,d),a=lh(null,a,g,!0,T,d)):(a.tag=0,Wt&&T&&Wu(a),Un(null,a,S,d),a=a.child),a;case 16:g=a.elementType;e:{switch(o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps,S=g._init,g=S(g._payload),a.type=g,S=a.tag=tx(g),o=yi(g,o),S){case 0:a=ah(null,a,g,o,d);break e;case 1:a=im(null,a,g,o,d);break e;case 11:a=Kp(null,a,g,o,d);break e;case 14:a=$p(null,a,g,yi(g.type,o),d);break e}throw Error(l(306,g,""))}return a;case 0:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:yi(g,S),ah(o,a,g,S,d);case 1:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:yi(g,S),im(o,a,g,S,d);case 3:e:{if(rm(a),o===null)throw Error(l(387));g=a.pendingProps,T=a.memoizedState,S=T.element,fp(o,a),al(a,g,null,d);var O=a.memoizedState;if(g=O.element,ye&&T.isDehydrated)if(T={element:g,isDehydrated:!1,cache:O.cache,transitions:O.transitions},a.updateQueue.baseState=T,a.memoizedState=T,a.flags&256){S=Error(l(423)),a=sm(o,a,g,d,S);break e}else if(g!==S){S=Error(l(424)),a=sm(o,a,g,d,S);break e}else for(ye&&(Jn=ja(a.stateNode.containerInfo),Qn=a,Wt=!0,xi=null,Oo=!1),d=Tp(a,null,g,d),a.child=d;d;)d.flags=d.flags&-3|4096,d=d.sibling;else{if(Us(),g===S){a=nr(o,a,d);break e}Un(o,a,g,d)}a=a.child}return a;case 5:return bp(a),o===null&&qu(a),g=a.type,S=a.pendingProps,T=o!==null?o.memoizedProps:null,O=S.children,xe(g,S)?O=null:T!==null&&xe(g,T)&&(a.flags|=32),nm(o,a),Un(o,a,O,d),a.child;case 6:return o===null&&qu(a),null;case 13:return om(o,a,d);case 4:return ju(a,a.stateNode.containerInfo),g=a.pendingProps,o===null?a.child=Os(a,null,g,d):Un(o,a,g,d),a.child;case 11:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:yi(g,S),Kp(o,a,g,S,d);case 7:return Un(o,a,a.pendingProps,d),a.child;case 8:return Un(o,a,a.pendingProps.children,d),a.child;case 12:return Un(o,a,a.pendingProps.children,d),a.child;case 10:e:{if(g=a.type._context,S=a.pendingProps,T=a.memoizedProps,O=S.value,hp(a,g,O),T!==null)if(Ni(T.value,O)){if(T.children===S.children&&!jt.current){a=nr(o,a,d);break e}}else for(T=a.child,T!==null&&(T.return=a);T!==null;){var Y=T.dependencies;if(Y!==null){O=T.child;for(var ue=Y.firstContext;ue!==null;){if(ue.context===g){if(T.tag===1){ue=Ki(-1,d&-d),ue.tag=2;var Pe=T.updateQueue;if(Pe!==null){Pe=Pe.shared;var We=Pe.pending;We===null?ue.next=ue:(ue.next=We.next,We.next=ue),Pe.pending=ue}}T.lanes|=d,ue=T.alternate,ue!==null&&(ue.lanes|=d),ku(T.return,d,a),Y.lanes|=d;break}ue=ue.next}}else if(T.tag===10)O=T.type===a.type?null:T.child;else if(T.tag===18){if(O=T.return,O===null)throw Error(l(341));O.lanes|=d,Y=O.alternate,Y!==null&&(Y.lanes|=d),ku(O,d,a),O=T.sibling}else O=T.child;if(O!==null)O.return=T;else for(O=T;O!==null;){if(O===a){O=null;break}if(T=O.sibling,T!==null){T.return=O.return,O=T;break}O=O.return}T=O}Un(o,a,S.children,d),a=a.child}return a;case 9:return S=a.type,g=a.pendingProps.children,Is(a,d),S=li(S),g=g(S),a.flags|=1,Un(o,a,g,d),a.child;case 14:return g=a.type,S=yi(g,a.pendingProps),S=yi(g.type,S),$p(o,a,g,S,d);case 15:return em(o,a,a.type,a.pendingProps,d);case 17:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:yi(g,S),o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),a.tag=1,mn(g)?(o=!0,gn(a)):o=!1,Is(a,d),vp(a,g,S),Gu(a,g,S,d),lh(null,a,g,!0,o,d);case 19:return um(o,a,d);case 22:return tm(o,a,d)}throw Error(l(156,a.tag))};function Nm(o,a){return Du(o,a)}function ex(o,a,d,g){this.tag=o,this.key=d,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=a,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=g,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function pi(o,a,d,g){return new ex(o,a,d,g)}function Ch(o){return o=o.prototype,!(!o||!o.isReactComponent)}function tx(o){if(typeof o=="function")return Ch(o)?1:0;if(o!=null){if(o=o.$$typeof,o===w)return 11;if(o===E)return 14}return 2}function Er(o,a){var d=o.alternate;return d===null?(d=pi(o.tag,a,o.key,o.mode),d.elementType=o.elementType,d.type=o.type,d.stateNode=o.stateNode,d.alternate=o,o.alternate=d):(d.pendingProps=a,d.type=o.type,d.flags=0,d.subtreeFlags=0,d.deletions=null),d.flags=o.flags&14680064,d.childLanes=o.childLanes,d.lanes=o.lanes,d.child=o.child,d.memoizedProps=o.memoizedProps,d.memoizedState=o.memoizedState,d.updateQueue=o.updateQueue,a=o.dependencies,d.dependencies=a===null?null:{lanes:a.lanes,firstContext:a.firstContext},d.sibling=o.sibling,d.index=o.index,d.ref=o.ref,d}function Vl(o,a,d,g,S,T){var O=2;if(g=o,typeof o=="function")Ch(o)&&(O=1);else if(typeof o=="string")O=5;else e:switch(o){case f:return Qr(d.children,S,T,a);case p:O=8,S|=8;break;case m:return o=pi(12,d,a,S|2),o.elementType=m,o.lanes=T,o;case x:return o=pi(13,d,a,S),o.elementType=x,o.lanes=T,o;case _:return o=pi(19,d,a,S),o.elementType=_,o.lanes=T,o;case b:return Gl(d,S,T,a);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case v:O=10;break e;case y:O=9;break e;case w:O=11;break e;case E:O=14;break e;case M:O=16,g=null;break e}throw Error(l(130,o==null?o:typeof o,""))}return a=pi(O,d,a,S),a.elementType=o,a.type=g,a.lanes=T,a}function Qr(o,a,d,g){return o=pi(7,o,g,a),o.lanes=d,o}function Gl(o,a,d,g){return o=pi(22,o,g,a),o.elementType=b,o.lanes=d,o.stateNode={},o}function Lh(o,a,d){return o=pi(6,o,null,a),o.lanes=d,o}function Ih(o,a,d){return a=pi(4,o.children!==null?o.children:[],o.key,a),a.lanes=d,a.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},a}function nx(o,a,d,g,S){this.tag=a,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=tt,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Lu(0),this.expirationTimes=Lu(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Lu(0),this.identifierPrefix=g,this.onRecoverableError=S,ye&&(this.mutableSourceEagerHydrationData=null)}function Um(o,a,d,g,S,T,O,Y,ue){return o=new nx(o,a,d,Y,ue),a===1?(a=1,T===!0&&(a|=8)):a=0,T=pi(3,null,null,a),o.current=T,T.stateNode=o,T.memoizedState={element:g,isDehydrated:d,cache:null,transitions:null},Hu(T),o}function Om(o){if(!o)return oi;o=o._reactInternals;e:{if(A(o)!==o||o.tag!==1)throw Error(l(170));var a=o;do{switch(a.tag){case 3:a=a.stateNode.context;break e;case 1:if(mn(a.type)){a=a.stateNode.__reactInternalMemoizedMergedChildContext;break e}}a=a.return}while(a!==null);throw Error(l(171))}if(o.tag===1){var d=o.type;if(mn(d))return Ps(o,d,a)}return a}function Fm(o){var a=o._reactInternals;if(a===void 0)throw typeof o.render=="function"?Error(l(188)):(o=Object.keys(o).join(","),Error(l(268,o)));return o=$(a),o===null?null:o.stateNode}function zm(o,a){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var d=o.retryLane;o.retryLane=d!==0&&d<a?d:a}}function Dh(o,a){zm(o,a),(o=o.alternate)&&zm(o,a)}function ix(o){return o=$(o),o===null?null:o.stateNode}function rx(){return null}return t.attemptContinuousHydration=function(o){if(o.tag===13){var a=On();di(o,134217728,a),Dh(o,134217728)}},t.attemptHydrationAtCurrentPriority=function(o){if(o.tag===13){var a=On(),d=Mr(o);di(o,d,a),Dh(o,d)}},t.attemptSynchronousHydration=function(o){switch(o.tag){case 3:var a=o.stateNode;if(a.current.memoizedState.isDehydrated){var d=No(a.pendingLanes);d!==0&&(Iu(a,d|1),Hn(a,vn()),!(wt&6)&&(Vs(),Ui()))}break;case 13:var g=On();bm(function(){return di(o,1,g)}),Dh(o,1)}},t.batchedUpdates=function(o,a){var d=wt;wt|=1;try{return o(a)}finally{wt=d,wt===0&&(Vs(),nl&&Ui())}},t.createComponentSelector=function(o){return{$$typeof:Rl,value:o}},t.createContainer=function(o,a,d,g,S,T,O){return Um(o,a,!1,null,d,g,S,T,O)},t.createHasPseudoClassSelector=function(o){return{$$typeof:Pl,value:o}},t.createHydrationContainer=function(o,a,d,g,S,T,O,Y,ue){return o=Um(d,g,!0,o,S,T,O,Y,ue),o.context=Om(null),d=o.current,g=On(),S=Mr(d),T=Ki(g,S),T.callback=a??null,yr(d,T),o.current.lanes=S,Uo(o,S,g),Hn(o,g),o},t.createPortal=function(o,a,d){var g=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h,key:g==null?null:""+g,children:o,containerInfo:a,implementation:d}},t.createRoleSelector=function(o){return{$$typeof:Cl,value:o}},t.createTestNameSelector=function(o){return{$$typeof:Ll,value:o}},t.createTextSelector=function(o){return{$$typeof:Il,value:o}},t.deferredUpdates=function(o){var a=Lt,d=en.transition;try{return en.transition=null,Lt=16,o()}finally{Lt=a,en.transition=d}},t.discreteUpdates=function(o,a,d,g,S){var T=Lt,O=en.transition;try{return en.transition=null,Lt=1,o(a,d,g,S)}finally{Lt=T,en.transition=O,wt===0&&Vs()}},t.findAllNodes=yh,t.findBoundingRects=function(o,a){if(!nt)throw Error(l(363));a=yh(o,a),o=[];for(var d=0;d<a.length;d++)o.push(Ut(a[d]));for(a=o.length-1;0<a;a--){d=o[a];for(var g=d.x,S=g+d.width,T=d.y,O=T+d.height,Y=a-1;0<=Y;Y--)if(a!==Y){var ue=o[Y],Pe=ue.x,We=Pe+ue.width,pt=ue.y,rt=pt+ue.height;if(g>=Pe&&T>=pt&&S<=We&&O<=rt){o.splice(a,1);break}else if(g!==Pe||d.width!==ue.width||rt<T||pt>O){if(!(T!==pt||d.height!==ue.height||We<g||Pe>S)){Pe>g&&(ue.width+=Pe-g,ue.x=g),We<S&&(ue.width=S-Pe),o.splice(a,1);break}}else{pt>T&&(ue.height+=pt-T,ue.y=T),rt<O&&(ue.height=O-pt),o.splice(a,1);break}}}return o},t.findHostInstance=Fm,t.findHostInstanceWithNoPortals=function(o){return o=B(o),o=o!==null?G(o):null,o===null?null:o.stateNode},t.findHostInstanceWithWarning=function(o){return Fm(o)},t.flushControlled=function(o){var a=wt;wt|=1;var d=en.transition,g=Lt;try{en.transition=null,Lt=1,o()}finally{Lt=g,en.transition=d,wt=a,wt===0&&(Vs(),Ui())}},t.flushPassiveEffects=jr,t.flushSync=bm,t.focusWithin=function(o,a){if(!nt)throw Error(l(363));for(o=gh(o),a=wm(o,a),a=Array.from(a),o=0;o<a.length;){var d=a[o++];if(!L(d)){if(d.tag===5&&Ee(d.stateNode))return!0;for(d=d.child;d!==null;)a.push(d),d=d.sibling}}return!1},t.getCurrentUpdatePriority=function(){return Lt},t.getFindAllNodesFailureDescription=function(o,a){if(!nt)throw Error(l(363));var d=0,g=[];o=[gh(o),0];for(var S=0;S<o.length;){var T=o[S++],O=o[S++],Y=a[O];if((T.tag!==5||!L(T))&&(vh(T,Y)&&(g.push(_h(Y)),O++,O>d&&(d=O)),O<a.length))for(T=T.child;T!==null;)o.push(T,O),T=T.sibling}if(d<a.length){for(o=[];d<a.length;d++)o.push(_h(a[d]));return`findAllNodes was able to match part of the selector:
  `+(g.join(" > ")+`

No matching component was found for:
  `)+o.join(" > ")}return null},t.getPublicRootInstance=function(o){if(o=o.current,!o.child)return null;switch(o.child.tag){case 5:return ie(o.child.stateNode);default:return o.child.stateNode}},t.injectIntoDevTools=function(o){if(o={bundleType:o.bundleType,version:o.version,rendererPackageName:o.rendererPackageName,rendererConfig:o.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:ix,findFiberByHostInstance:o.findFiberByHostInstance||rx,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")o=!1;else{var a=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(a.isDisabled||!a.supportsFiber)o=!0;else{try{tl=a.inject(o),Di=a}catch{}o=!!a.checkDCE}}return o},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(o,a,d,g){if(!nt)throw Error(l(363));o=yh(o,a);var S=_e(o,d,g).disconnect;return{disconnect:function(){S()}}},t.registerMutableSourceForHydration=function(o,a){var d=a._getVersion;d=d(a._source),o.mutableSourceEagerHydrationData==null?o.mutableSourceEagerHydrationData=[a,d]:o.mutableSourceEagerHydrationData.push(a,d)},t.runWithPriority=function(o,a){var d=Lt;try{return Lt=o,a()}finally{Lt=d}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(o,a,d,g){var S=a.current,T=On(),O=Mr(S);return d=Om(d),a.context===null?a.context=d:a.pendingContext=d,a=Ki(T,O),a.payload={element:o},g=g===void 0?null:g,g!==null&&(a.callback=g),yr(S,a),o=di(S,O,T),o!==null&&ol(o,S,O),O},t};j_.exports=nA;var iA=j_.exports;const rA=ax(iA),sp={},sA=r=>void Object.assign(sp,r);function oA(r,e){function t(f,{args:p=[],attach:m,...v},y){let w=`${f[0].toUpperCase()}${f.slice(1)}`,x;if(f==="primitive"){if(v.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const _=v.object;x=ho(_,{type:f,root:y,attach:m,primitive:!0})}else{const _=sp[w];if(!_)throw new Error(`R3F: ${w} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(p))throw new Error("R3F: The args prop must be an array!");x=ho(new _(...p),{type:f,root:y,attach:m,memoizedProps:{args:p}})}return x.__r3f.attach===void 0&&(x.isBufferGeometry?x.__r3f.attach="geometry":x.isMaterial&&(x.__r3f.attach="material")),w!=="inject"&&_f(x,v),x}function n(f,p){let m=!1;if(p){var v,y;(v=p.__r3f)!=null&&v.attach?vf(f,p,p.__r3f.attach):p.isObject3D&&f.isObject3D&&(f.add(p),m=!0),m||(y=f.__r3f)==null||y.objects.push(p),p.__r3f||ho(p,{}),p.__r3f.parent=f,gd(p),fo(p)}}function i(f,p,m){let v=!1;if(p){var y,w;if((y=p.__r3f)!=null&&y.attach)vf(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){p.parent=f,p.dispatchEvent({type:"added"}),f.dispatchEvent({type:"childadded",child:p});const x=f.children.filter(E=>E!==p),_=x.indexOf(m);f.children=[...x.slice(0,_),p,...x.slice(_)],v=!0}v||(w=f.__r3f)==null||w.objects.push(p),p.__r3f||ho(p,{}),p.__r3f.parent=f,gd(p),fo(p)}}function s(f,p,m=!1){f&&[...f].forEach(v=>l(p,v,m))}function l(f,p,m){if(p){var v,y,w;if(p.__r3f&&(p.__r3f.parent=null),(v=f.__r3f)!=null&&v.objects&&(f.__r3f.objects=f.__r3f.objects.filter(b=>b!==p)),(y=p.__r3f)!=null&&y.attach)x0(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){var x;f.remove(p),(x=p.__r3f)!=null&&x.root&&dA(Wc(p),p)}const E=(w=p.__r3f)==null?void 0:w.primitive,M=!E&&(m===void 0?p.dispose!==null:m);if(!E){var _;s((_=p.__r3f)==null?void 0:_.objects,p,M),s(p.children,p,M)}if(delete p.__r3f,M&&p.dispose&&p.type!=="Scene"){const b=()=>{try{p.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT>"u"?pd.unstable_scheduleCallback(pd.unstable_IdlePriority,b):b()}fo(f)}}function c(f,p,m,v){var y;const w=(y=f.__r3f)==null?void 0:y.parent;if(!w)return;const x=t(p,m,f.__r3f.root);if(f.children){for(const _ of f.children)_.__r3f&&n(x,_);f.children=f.children.filter(_=>!_.__r3f)}f.__r3f.objects.forEach(_=>n(x,_)),f.__r3f.objects=[],f.__r3f.autoRemovedBeforeAppend||l(w,f),x.parent&&(x.__r3f.autoRemovedBeforeAppend=!0),n(w,x),x.raycast&&x.__r3f.eventCount&&Wc(x).getState().internal.interaction.push(x),[v,v.alternate].forEach(_=>{_!==null&&(_.stateNode=x,_.ref&&(typeof _.ref=="function"?_.ref(x):_.ref.current=x))})}const u=()=>{};return{reconciler:rA({createInstance:t,removeChild:l,appendChild:n,appendInitialChild:n,insertBefore:i,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(f,p)=>{if(!p)return;const m=f.getState().scene;m.__r3f&&(m.__r3f.root=f,n(m,p))},removeChildFromContainer:(f,p)=>{p&&l(f.getState().scene,p)},insertInContainerBefore:(f,p,m)=>{if(!p||!m)return;const v=f.getState().scene;v.__r3f&&i(v,p,m)},getRootHostContext:()=>null,getChildHostContext:f=>f,finalizeInitialChildren(f){var p;return!!((p=f?.__r3f)!=null?p:{}).handlers},prepareUpdate(f,p,m,v){var y;if(((y=f?.__r3f)!=null?y:{}).primitive&&v.object&&v.object!==f)return[!0];{const{args:x=[],children:_,...E}=v,{args:M=[],children:b,...R}=m;if(!Array.isArray(x))throw new Error("R3F: the args prop must be an array!");if(x.some((I,z)=>I!==M[z]))return[!0];const P=ry(f,E,R,!0);return P.changes.length?[!1,P]:null}},commitUpdate(f,[p,m],v,y,w,x){p?c(f,v,w,x):_f(f,m)},commitMount(f,p,m,v){var y;const w=(y=f.__r3f)!=null?y:{};f.raycast&&w.handlers&&w.eventCount&&Wc(f).getState().internal.interaction.push(f)},getPublicInstance:f=>f,prepareForCommit:()=>null,preparePortalMount:f=>ho(f.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(f){var p;const{attach:m,parent:v}=(p=f.__r3f)!=null?p:{};m&&v&&x0(v,f,m),f.isObject3D&&(f.visible=!1),fo(f)},unhideInstance(f,p){var m;const{attach:v,parent:y}=(m=f.__r3f)!=null?m:{};v&&y&&vf(y,f,v),(f.isObject3D&&p.visible==null||p.visible)&&(f.visible=!0),fo(f)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e?e():_o.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&Gt.fun(performance.now)?performance.now:Gt.fun(Date.now)?Date.now:()=>0,scheduleTimeout:Gt.fun(setTimeout)?setTimeout:void 0,cancelTimeout:Gt.fun(clearTimeout)?clearTimeout:void 0}),applyProps:_f}}var g0,v0;const gf=r=>"colorSpace"in r||"outputColorSpace"in r,K_=()=>{var r;return(r=sp.ColorManagement)!=null?r:null},$_=r=>r&&r.isOrthographicCamera,aA=r=>r&&r.hasOwnProperty("current"),qa=typeof window<"u"&&((g0=window.document)!=null&&g0.createElement||((v0=window.navigator)==null?void 0:v0.product)==="ReactNative")?ge.useLayoutEffect:ge.useEffect;function ey(r){const e=ge.useRef(r);return qa(()=>void(e.current=r),[r]),e}function lA({set:r}){return qa(()=>(r(new Promise(()=>null)),()=>r(!1)),[r]),null}class ty extends ge.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}ty.getDerivedStateFromError=()=>({error:!0});const ny="__default",_0=new Map,cA=r=>r&&!!r.memoized&&!!r.changes;function iy(r){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(r)?Math.min(Math.max(r[0],t),r[1]):r}const ca=r=>{var e;return(e=r.__r3f)==null?void 0:e.root.getState()};function Wc(r){let e=r.__r3f.root;for(;e.getState().previousRoot;)e=e.getState().previousRoot;return e}const Gt={obj:r=>r===Object(r)&&!Gt.arr(r)&&typeof r!="function",fun:r=>typeof r=="function",str:r=>typeof r=="string",num:r=>typeof r=="number",boo:r=>typeof r=="boolean",und:r=>r===void 0,arr:r=>Array.isArray(r),equ(r,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof r!=typeof e||!!r!=!!e)return!1;if(Gt.str(r)||Gt.num(r)||Gt.boo(r))return r===e;const s=Gt.obj(r);if(s&&n==="reference")return r===e;const l=Gt.arr(r);if(l&&t==="reference")return r===e;if((l||s)&&r===e)return!0;let c;for(c in r)if(!(c in e))return!1;if(s&&t==="shallow"&&n==="shallow"){for(c in i?e:r)if(!Gt.equ(r[c],e[c],{strict:i,objects:"reference"}))return!1}else for(c in i?e:r)if(r[c]!==e[c])return!1;if(Gt.und(c)){if(l&&r.length===0&&e.length===0||s&&Object.keys(r).length===0&&Object.keys(e).length===0)return!0;if(r!==e)return!1}return!0}};function uA(r){r.dispose&&r.type!=="Scene"&&r.dispose();for(const e in r)e.dispose==null||e.dispose(),delete r[e]}function ho(r,e){const t=r;return t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e},r}function md(r,e){let t=r;if(e.includes("-")){const n=e.split("-"),i=n.pop();return t=n.reduce((s,l)=>s[l],r),{target:t,key:i}}else return{target:t,key:e}}const y0=/-\d+$/;function vf(r,e,t){if(Gt.str(t)){if(y0.test(t)){const s=t.replace(y0,""),{target:l,key:c}=md(r,s);Array.isArray(l[c])||(l[c]=[])}const{target:n,key:i}=md(r,t);e.__r3f.previousAttach=n[i],n[i]=e}else e.__r3f.previousAttach=t(r,e)}function x0(r,e,t){var n,i;if(Gt.str(t)){const{target:s,key:l}=md(r,t),c=e.__r3f.previousAttach;c===void 0?delete s[l]:s[l]=c}else(n=e.__r3f)==null||n.previousAttach==null||n.previousAttach(r,e);(i=e.__r3f)==null||delete i.previousAttach}function ry(r,{children:e,key:t,ref:n,...i},{children:s,key:l,ref:c,...u}={},h=!1){const f=r.__r3f,p=Object.entries(i),m=[];if(h){const y=Object.keys(u);for(let w=0;w<y.length;w++)i.hasOwnProperty(y[w])||p.unshift([y[w],ny+"remove"])}p.forEach(([y,w])=>{var x;if((x=r.__r3f)!=null&&x.primitive&&y==="object"||Gt.equ(w,u[y]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(y))return m.push([y,w,!0,[]]);let _=[];y.includes("-")&&(_=y.split("-")),m.push([y,w,!1,_]);for(const E in i){const M=i[E];E.startsWith(`${y}-`)&&m.push([E,M,!1,E.split("-")])}});const v={...i};return f!=null&&f.memoizedProps&&f!=null&&f.memoizedProps.args&&(v.args=f.memoizedProps.args),f!=null&&f.memoizedProps&&f!=null&&f.memoizedProps.attach&&(v.attach=f.memoizedProps.attach),{memoized:v,changes:m}}function _f(r,e){var t;const n=r.__r3f,i=n?.root,s=i==null||i.getState==null?void 0:i.getState(),{memoized:l,changes:c}=cA(e)?e:ry(r,e),u=n?.eventCount;r.__r3f&&(r.__r3f.memoizedProps=l);for(let m=0;m<c.length;m++){let[v,y,w,x]=c[m];if(gf(r)){const b="srgb",R="srgb-linear";v==="encoding"?(v="colorSpace",y=y===3001?b:R):v==="outputEncoding"&&(v="outputColorSpace",y=y===3001?b:R)}let _=r,E=_[v];if(x.length&&(E=x.reduce((M,b)=>M[b],r),!(E&&E.set))){const[M,...b]=x.reverse();_=b.reverse().reduce((R,P)=>R[P],r),v=M}if(y===ny+"remove")if(_.constructor){let M=_0.get(_.constructor);M||(M=new _.constructor,_0.set(_.constructor,M)),y=M[v]}else y=0;if(w&&n)y?n.handlers[v]=y:delete n.handlers[v],n.eventCount=Object.keys(n.handlers).length;else if(E&&E.set&&(E.copy||E instanceof vs)){if(Array.isArray(y))E.fromArray?E.fromArray(y):E.set(...y);else if(E.copy&&y&&y.constructor&&E.constructor===y.constructor)E.copy(y);else if(y!==void 0){var h;const M=(h=E)==null?void 0:h.isColor;!M&&E.setScalar?E.setScalar(y):E instanceof vs&&y instanceof vs?E.mask=y.mask:E.set(y),!K_()&&s&&!s.linear&&M&&E.convertSRGBToLinear()}}else{var f;if(_[v]=y,(f=_[v])!=null&&f.isTexture&&_[v].format===Yn&&_[v].type===Gi&&s){const M=_[v];gf(M)&&gf(s.gl)?M.colorSpace=s.gl.outputColorSpace:M.encoding=s.gl.outputEncoding}}fo(r)}if(n&&n.parent&&r.raycast&&u!==n.eventCount){const m=Wc(r).getState().internal,v=m.interaction.indexOf(r);v>-1&&m.interaction.splice(v,1),n.eventCount&&m.interaction.push(r)}return!(c.length===1&&c[0][0]==="onUpdate")&&c.length&&(t=r.__r3f)!=null&&t.parent&&gd(r),r}function fo(r){var e,t;const n=(e=r.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();n&&n.internal.frames===0&&n.invalidate()}function gd(r){r.onUpdate==null||r.onUpdate(r)}function hA(r,e){r.manual||($_(r)?(r.left=e.width/-2,r.right=e.width/2,r.top=e.height/2,r.bottom=e.height/-2):r.aspect=e.width/e.height,r.updateProjectionMatrix(),r.updateMatrixWorld())}function Nc(r){return(r.eventObject||r.object).uuid+"/"+r.index+r.instanceId}function fA(){var r;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return _o.DefaultEventPriority;switch((r=e.event)==null?void 0:r.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return _o.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return _o.ContinuousEventPriority;default:return _o.DefaultEventPriority}}function sy(r,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(r.delete(n),i.target.releasePointerCapture(n)))}function dA(r,e){const{internal:t}=r.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{sy(t.capturedMap,e,n,i)})}function pA(r){function e(u){const{internal:h}=r.getState(),f=u.offsetX-h.initialClick[0],p=u.offsetY-h.initialClick[1];return Math.round(Math.sqrt(f*f+p*p))}function t(u){return u.filter(h=>["Move","Over","Enter","Out","Leave"].some(f=>{var p;return(p=h.__r3f)==null?void 0:p.handlers["onPointer"+f]}))}function n(u,h){const f=r.getState(),p=new Set,m=[],v=h?h(f.internal.interaction):f.internal.interaction;for(let _=0;_<v.length;_++){const E=ca(v[_]);E&&(E.raycaster.camera=void 0)}f.previousRoot||f.events.compute==null||f.events.compute(u,f);function y(_){const E=ca(_);if(!E||!E.events.enabled||E.raycaster.camera===null)return[];if(E.raycaster.camera===void 0){var M;E.events.compute==null||E.events.compute(u,E,(M=E.previousRoot)==null?void 0:M.getState()),E.raycaster.camera===void 0&&(E.raycaster.camera=null)}return E.raycaster.camera?E.raycaster.intersectObject(_,!0):[]}let w=v.flatMap(y).sort((_,E)=>{const M=ca(_.object),b=ca(E.object);return!M||!b?_.distance-E.distance:b.events.priority-M.events.priority||_.distance-E.distance}).filter(_=>{const E=Nc(_);return p.has(E)?!1:(p.add(E),!0)});f.events.filter&&(w=f.events.filter(w,f));for(const _ of w){let E=_.object;for(;E;){var x;(x=E.__r3f)!=null&&x.eventCount&&m.push({..._,eventObject:E}),E=E.parent}}if("pointerId"in u&&f.internal.capturedMap.has(u.pointerId))for(let _ of f.internal.capturedMap.get(u.pointerId).values())p.has(Nc(_.intersection))||m.push(_.intersection);return m}function i(u,h,f,p){const m=r.getState();if(u.length){const v={stopped:!1};for(const y of u){const w=ca(y.object)||m,{raycaster:x,pointer:_,camera:E,internal:M}=w,b=new D(_.x,_.y,0).unproject(E),R=C=>{var B,$;return(B=($=M.capturedMap.get(C))==null?void 0:$.has(y.eventObject))!=null?B:!1},P=C=>{const B={intersection:y,target:h.target};M.capturedMap.has(C)?M.capturedMap.get(C).set(y.eventObject,B):M.capturedMap.set(C,new Map([[y.eventObject,B]])),h.target.setPointerCapture(C)},I=C=>{const B=M.capturedMap.get(C);B&&sy(M.capturedMap,y.eventObject,B,C)};let z={};for(let C in h){let B=h[C];typeof B!="function"&&(z[C]=B)}let A={...y,...z,pointer:_,intersections:u,stopped:v.stopped,delta:f,unprojectedPoint:b,ray:x.ray,camera:E,stopPropagation(){const C="pointerId"in h&&M.capturedMap.get(h.pointerId);if((!C||C.has(y.eventObject))&&(A.stopped=v.stopped=!0,M.hovered.size&&Array.from(M.hovered.values()).find(B=>B.eventObject===y.eventObject))){const B=u.slice(0,u.indexOf(y));s([...B,y])}},target:{hasPointerCapture:R,setPointerCapture:P,releasePointerCapture:I},currentTarget:{hasPointerCapture:R,setPointerCapture:P,releasePointerCapture:I},nativeEvent:h};if(p(A),v.stopped===!0)break}}return u}function s(u){const{internal:h}=r.getState();for(const f of h.hovered.values())if(!u.length||!u.find(p=>p.object===f.object&&p.index===f.index&&p.instanceId===f.instanceId)){const m=f.eventObject.__r3f,v=m?.handlers;if(h.hovered.delete(Nc(f)),m!=null&&m.eventCount){const y={...f,intersections:u};v.onPointerOut==null||v.onPointerOut(y),v.onPointerLeave==null||v.onPointerLeave(y)}}}function l(u,h){for(let f=0;f<h.length;f++){const p=h[f].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>s([]);case"onLostPointerCapture":return h=>{const{internal:f}=r.getState();"pointerId"in h&&f.capturedMap.has(h.pointerId)&&requestAnimationFrame(()=>{f.capturedMap.has(h.pointerId)&&(f.capturedMap.delete(h.pointerId),s([]))})}}return function(f){const{onPointerMissed:p,internal:m}=r.getState();m.lastEvent.current=f;const v=u==="onPointerMove",y=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",x=n(f,v?t:void 0),_=y?e(f):0;u==="onPointerDown"&&(m.initialClick=[f.offsetX,f.offsetY],m.initialHits=x.map(M=>M.eventObject)),y&&!x.length&&_<=2&&(l(f,m.interaction),p&&p(f)),v&&s(x);function E(M){const b=M.eventObject,R=b.__r3f,P=R?.handlers;if(R!=null&&R.eventCount)if(v){if(P.onPointerOver||P.onPointerEnter||P.onPointerOut||P.onPointerLeave){const I=Nc(M),z=m.hovered.get(I);z?z.stopped&&M.stopPropagation():(m.hovered.set(I,M),P.onPointerOver==null||P.onPointerOver(M),P.onPointerEnter==null||P.onPointerEnter(M))}P.onPointerMove==null||P.onPointerMove(M)}else{const I=P[u];I?(!y||m.initialHits.includes(b))&&(l(f,m.interaction.filter(z=>!m.initialHits.includes(z))),I(M)):y&&m.initialHits.includes(b)&&l(f,m.interaction.filter(z=>!m.initialHits.includes(z)))}}i(x,f,_,E)}}return{handlePointer:c}}const oy=r=>!!(r!=null&&r.render),ay=ge.createContext(null),mA=(r,e)=>{const t=tA((c,u)=>{const h=new D,f=new D,p=new D;function m(_=u().camera,E=f,M=u().size){const{width:b,height:R,top:P,left:I}=M,z=b/R;E.isVector3?p.copy(E):p.set(...E);const A=_.getWorldPosition(h).distanceTo(p);if($_(_))return{width:b/_.zoom,height:R/_.zoom,top:P,left:I,factor:1,distance:A,aspect:z};{const C=_.fov*Math.PI/180,B=2*Math.tan(C/2)*A,$=B*(b/R);return{width:$,height:B,top:P,left:I,factor:b/$,distance:A,aspect:z}}}let v;const y=_=>c(E=>({performance:{...E.performance,current:_}})),w=new me;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:(_=1)=>r(u(),_),advance:(_,E)=>e(_,E,u()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new ep,pointer:w,mouse:w,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const _=u();v&&clearTimeout(v),_.performance.current!==_.performance.min&&y(_.performance.min),v=setTimeout(()=>y(u().performance.max),_.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:m},setEvents:_=>c(E=>({...E,events:{...E.events,..._}})),setSize:(_,E,M,b,R)=>{const P=u().camera,I={width:_,height:E,top:b||0,left:R||0,updateStyle:M};c(z=>({size:I,viewport:{...z.viewport,...m(P,f,I)}}))},setDpr:_=>c(E=>{const M=iy(_);return{viewport:{...E.viewport,dpr:M,initialDpr:E.viewport.initialDpr||M}}}),setFrameloop:(_="always")=>{const E=u().clock;E.stop(),E.elapsedTime=0,_!=="never"&&(E.start(),E.elapsedTime=0),c(()=>({frameloop:_}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:ge.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(_,E,M)=>{const b=u().internal;return b.priority=b.priority+(E>0?1:0),b.subscribers.push({ref:_,priority:E,store:M}),b.subscribers=b.subscribers.sort((R,P)=>R.priority-P.priority),()=>{const R=u().internal;R!=null&&R.subscribers&&(R.priority=R.priority-(E>0?1:0),R.subscribers=R.subscribers.filter(P=>P.ref!==_))}}}}}),n=t.getState();let i=n.size,s=n.viewport.dpr,l=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:h,gl:f,set:p}=t.getState();if(u.width!==i.width||u.height!==i.height||h.dpr!==s){var m;i=u,s=h.dpr,hA(c,u),f.setPixelRatio(h.dpr);const v=(m=u.updateStyle)!=null?m:typeof HTMLCanvasElement<"u"&&f.domElement instanceof HTMLCanvasElement;f.setSize(u.width,u.height,v)}c!==l&&(l=c,p(v=>({viewport:{...v.viewport,...v.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>r(c)),t};let Uc,gA=new Set,vA=new Set,_A=new Set;function yf(r,e){if(r.size)for(const{callback:t}of r.values())t(e)}function ua(r,e){switch(r){case"before":return yf(gA,e);case"after":return yf(vA,e);case"tail":return yf(_A,e)}}let xf,Sf;function Mf(r,e,t){let n=e.clock.getDelta();for(e.frameloop==="never"&&typeof r=="number"&&(n=r-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=r),xf=e.internal.subscribers,Uc=0;Uc<xf.length;Uc++)Sf=xf[Uc],Sf.ref.current(Sf.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function yA(r){let e=!1,t=!1,n,i,s;function l(h){i=requestAnimationFrame(l),e=!0,n=0,ua("before",h),t=!0;for(const p of r.values()){var f;s=p.store.getState(),s.internal.active&&(s.frameloop==="always"||s.internal.frames>0)&&!((f=s.gl.xr)!=null&&f.isPresenting)&&(n+=Mf(h,s))}if(t=!1,ua("after",h),n===0)return ua("tail",h),e=!1,cancelAnimationFrame(i)}function c(h,f=1){var p;if(!h)return r.forEach(m=>c(m.store.getState(),f));(p=h.gl.xr)!=null&&p.isPresenting||!h.internal.active||h.frameloop==="never"||(f>1?h.internal.frames=Math.min(60,h.internal.frames+f):t?h.internal.frames=2:h.internal.frames=1,e||(e=!0,requestAnimationFrame(l)))}function u(h,f=!0,p,m){if(f&&ua("before",h),p)Mf(h,p,m);else for(const v of r.values())Mf(h,v.store.getState());f&&ua("after",h)}return{loop:l,invalidate:c,advance:u}}function ly(){const r=ge.useContext(ay);if(!r)throw new Error("R3F: Hooks can only be used within the Canvas component!");return r}function Ln(r=t=>t,e){return ly()(r,e)}function cy(r,e=0){const t=ly(),n=t.getState().internal.subscribe,i=ey(r);return qa(()=>n(i,e,t),[e,n,t]),null}const To=new Map,{invalidate:S0,advance:M0}=yA(To),{reconciler:Jc,applyProps:co}=oA(To,fA),uo={objects:"shallow",strict:!1},xA=(r,e)=>{const t=typeof r=="function"?r(e):r;return oy(t)?t:new Od({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...r})};function SA(r,e){const t=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement;if(e){const{width:n,height:i,top:s,left:l,updateStyle:c=t}=e;return{width:n,height:i,top:s,left:l,updateStyle:c}}else if(typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement&&r.parentElement){const{width:n,height:i,top:s,left:l}=r.parentElement.getBoundingClientRect();return{width:n,height:i,top:s,left:l,updateStyle:t}}else if(typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas)return{width:r.width,height:r.height,top:0,left:0,updateStyle:t};return{width:0,height:0,top:0,left:0}}function MA(r){const e=To.get(r),t=e?.fiber,n=e?.store;e&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,s=n||mA(S0,M0),l=t||Jc.createContainer(s,_o.ConcurrentRoot,null,!1,null,"",i,null);e||To.set(r,{fiber:l,store:s});let c,u=!1,h;return{configure(f={}){let{gl:p,size:m,scene:v,events:y,onCreated:w,shadows:x=!1,linear:_=!1,flat:E=!1,legacy:M=!1,orthographic:b=!1,frameloop:R="always",dpr:P=[1,2],performance:I,raycaster:z,camera:A,onPointerMissed:C}=f,B=s.getState(),$=B.gl;B.gl||B.set({gl:$=xA(p,r)});let oe=B.raycaster;oe||B.set({raycaster:oe=new rp});const{params:G,...q}=z||{};if(Gt.equ(q,oe,uo)||co(oe,{...q}),Gt.equ(G,oe.params,uo)||co(oe,{params:{...oe.params,...G}}),!B.camera||B.camera===h&&!Gt.equ(h,A,uo)){h=A;const X=A instanceof Ga,U=X?A:b?new Wi(0,0,0,0,.1,1e3):new qt(75,0,.1,1e3);X||(U.position.z=5,A&&(co(U,A),("aspect"in A||"left"in A||"right"in A||"bottom"in A||"top"in A)&&(U.manual=!0,U.updateProjectionMatrix())),!B.camera&&!(A!=null&&A.rotation)&&U.lookAt(0,0,0)),B.set({camera:U}),oe.camera=U}if(!B.scene){let X;v!=null&&v.isScene?X=v:(X=new Fd,v&&co(X,v)),B.set({scene:ho(X)})}if(!B.xr){var ie;const X=(ce,H)=>{const xe=s.getState();xe.frameloop!=="never"&&M0(ce,!0,xe,H)},U=()=>{const ce=s.getState();ce.gl.xr.enabled=ce.gl.xr.isPresenting,ce.gl.xr.setAnimationLoop(ce.gl.xr.isPresenting?X:null),ce.gl.xr.isPresenting||S0(ce)},Z={connect(){const ce=s.getState().gl;ce.xr.addEventListener("sessionstart",U),ce.xr.addEventListener("sessionend",U)},disconnect(){const ce=s.getState().gl;ce.xr.removeEventListener("sessionstart",U),ce.xr.removeEventListener("sessionend",U)}};typeof((ie=$.xr)==null?void 0:ie.addEventListener)=="function"&&Z.connect(),B.set({xr:Z})}if($.shadowMap){const X=$.shadowMap.enabled,U=$.shadowMap.type;if($.shadowMap.enabled=!!x,Gt.boo(x))$.shadowMap.type=da;else if(Gt.str(x)){var te;const Z={basic:z0,percentage:eu,soft:da,variance:Ei};$.shadowMap.type=(te=Z[x])!=null?te:da}else Gt.obj(x)&&Object.assign($.shadowMap,x);(X!==$.shadowMap.enabled||U!==$.shadowMap.type)&&($.shadowMap.needsUpdate=!0)}const Q=K_();Q&&("enabled"in Q?Q.enabled=!M:"legacyMode"in Q&&(Q.legacyMode=M)),u||co($,{outputEncoding:_?3e3:3001,toneMapping:E?Vi:_d}),B.legacy!==M&&B.set(()=>({legacy:M})),B.linear!==_&&B.set(()=>({linear:_})),B.flat!==E&&B.set(()=>({flat:E})),p&&!Gt.fun(p)&&!oy(p)&&!Gt.equ(p,$,uo)&&co($,p),y&&!B.events.handlers&&B.set({events:y(s)});const j=SA(r,m);return Gt.equ(j,B.size,uo)||B.setSize(j.width,j.height,j.updateStyle,j.top,j.left),P&&B.viewport.dpr!==iy(P)&&B.setDpr(P),B.frameloop!==R&&B.setFrameloop(R),B.onPointerMissed||B.set({onPointerMissed:C}),I&&!Gt.equ(I,B.performance,uo)&&B.set(X=>({performance:{...X.performance,...I}})),c=w,u=!0,this},render(f){return u||this.configure(),Jc.updateContainer(Ti.jsx(wA,{store:s,children:f,onCreated:c,rootElement:r}),l,null,()=>{}),s},unmount(){uy(r)}}}function wA({store:r,children:e,onCreated:t,rootElement:n}){return qa(()=>{const i=r.getState();i.set(s=>({internal:{...s.internal,active:!0}})),t&&t(i),r.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),Ti.jsx(ay.Provider,{value:r,children:e})}function uy(r,e){const t=To.get(r),n=t?.fiber;if(n){const i=t?.store.getState();i&&(i.internal.active=!1),Jc.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var s,l,c,u;i.events.disconnect==null||i.events.disconnect(),(s=i.gl)==null||(l=s.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=i.gl)!=null&&u.xr&&i.xr.disconnect(),uA(i),To.delete(r)}catch{}},500)})}}Jc.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:ge.version});const wf={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function EA(r){const{handlePointer:e}=pA(r);return{priority:1,enabled:!0,compute(t,n,i){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(wf).reduce((t,n)=>({...t,[n]:e(n)}),{}),update:()=>{var t;const{events:n,internal:i}=r.getState();(t=i.lastEvent)!=null&&t.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:t=>{var n;const{set:i,events:s}=r.getState();s.disconnect==null||s.disconnect(),i(l=>({events:{...l.events,connected:t}})),Object.entries((n=s.handlers)!=null?n:[]).forEach(([l,c])=>{const[u,h]=wf[l];t.addEventListener(u,c,{passive:h})})},disconnect:()=>{const{set:t,events:n}=r.getState();if(n.connected){var i;Object.entries((i=n.handlers)!=null?i:[]).forEach(([s,l])=>{if(n&&n.connected instanceof HTMLElement){const[c]=wf[s];n.connected.removeEventListener(c,l)}}),t(s=>({events:{...s.events,connected:void 0}}))}}}}function w0(r,e){let t;return(...n)=>{window.clearTimeout(t),t=window.setTimeout(()=>r(...n),e)}}function TA({debounce:r,scroll:e,polyfill:t,offsetSize:n}={debounce:0,scroll:!1,offsetSize:!1}){const i=t||(typeof window>"u"?class{}:window.ResizeObserver);if(!i)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[s,l]=ge.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),c=ge.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:s,orientationHandler:null}),u=r?typeof r=="number"?r:r.scroll:null,h=r?typeof r=="number"?r:r.resize:null,f=ge.useRef(!1);ge.useEffect(()=>(f.current=!0,()=>void(f.current=!1)));const[p,m,v]=ge.useMemo(()=>{const _=()=>{if(!c.current.element)return;const{left:E,top:M,width:b,height:R,bottom:P,right:I,x:z,y:A}=c.current.element.getBoundingClientRect(),C={left:E,top:M,width:b,height:R,bottom:P,right:I,x:z,y:A};c.current.element instanceof HTMLElement&&n&&(C.height=c.current.element.offsetHeight,C.width=c.current.element.offsetWidth),Object.freeze(C),f.current&&!PA(c.current.lastBounds,C)&&l(c.current.lastBounds=C)};return[_,h?w0(_,h):_,u?w0(_,u):_]},[l,n,u,h]);function y(){c.current.scrollContainers&&(c.current.scrollContainers.forEach(_=>_.removeEventListener("scroll",v,!0)),c.current.scrollContainers=null),c.current.resizeObserver&&(c.current.resizeObserver.disconnect(),c.current.resizeObserver=null),c.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",c.current.orientationHandler))}function w(){c.current.element&&(c.current.resizeObserver=new i(v),c.current.resizeObserver.observe(c.current.element),e&&c.current.scrollContainers&&c.current.scrollContainers.forEach(_=>_.addEventListener("scroll",v,{capture:!0,passive:!0})),c.current.orientationHandler=()=>{v()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",c.current.orientationHandler))}const x=_=>{!_||_===c.current.element||(y(),c.current.element=_,c.current.scrollContainers=hy(_),w())};return AA(v,!!e),bA(m),ge.useEffect(()=>{y(),w()},[e,v,m]),ge.useEffect(()=>y,[]),[x,s,p]}function bA(r){ge.useEffect(()=>{const e=r;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[r])}function AA(r,e){ge.useEffect(()=>{if(e){const t=r;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[r,e])}function hy(r){const e=[];if(!r||r===document.body)return e;const{overflow:t,overflowX:n,overflowY:i}=window.getComputedStyle(r);return[t,n,i].some(s=>s==="auto"||s==="scroll")&&e.push(r),[...e,...hy(r.parentElement)]}const RA=["x","y","top","bottom","left","right","width","height"],PA=(r,e)=>RA.every(t=>r[t]===e[t]);var CA=Object.defineProperty,LA=Object.defineProperties,IA=Object.getOwnPropertyDescriptors,E0=Object.getOwnPropertySymbols,DA=Object.prototype.hasOwnProperty,NA=Object.prototype.propertyIsEnumerable,T0=(r,e,t)=>e in r?CA(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,b0=(r,e)=>{for(var t in e||(e={}))DA.call(e,t)&&T0(r,t,e[t]);if(E0)for(var t of E0(e))NA.call(e,t)&&T0(r,t,e[t]);return r},UA=(r,e)=>LA(r,IA(e)),A0,R0;typeof window<"u"&&((A0=window.document)!=null&&A0.createElement||((R0=window.navigator)==null?void 0:R0.product)==="ReactNative")?ge.useLayoutEffect:ge.useEffect;function fy(r,e,t){if(!r)return;if(t(r)===!0)return r;let n=r.child;for(;n;){const i=fy(n,e,t);if(i)return i;n=n.sibling}}function dy(r){try{return Object.defineProperties(r,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return r}}const P0=console.error;console.error=function(){const r=[...arguments].join("");if(r?.startsWith("Warning:")&&r.includes("useContext")){console.error=P0;return}return P0.apply(this,arguments)};const op=dy(ge.createContext(null));class py extends ge.Component{render(){return ge.createElement(op.Provider,{value:this._reactInternals},this.props.children)}}function OA(){const r=ge.useContext(op);if(r===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=ge.useId();return ge.useMemo(()=>{for(const n of[r,r?.alternate]){if(!n)continue;const i=fy(n,!1,s=>{let l=s.memoizedState;for(;l;){if(l.memoizedState===e)return!0;l=l.next}});if(i)return i}},[r,e])}function FA(){const r=OA(),[e]=ge.useState(()=>new Map);e.clear();let t=r;for(;t;){if(t.type&&typeof t.type=="object"){const i=t.type._context===void 0&&t.type.Provider===t.type?t.type:t.type._context;i&&i!==op&&!e.has(i)&&e.set(i,ge.useContext(dy(i)))}t=t.return}return e}function zA(){const r=FA();return ge.useMemo(()=>Array.from(r.keys()).reduce((e,t)=>n=>ge.createElement(e,null,ge.createElement(t.Provider,UA(b0({},n),{value:r.get(t)}))),e=>ge.createElement(py,b0({},e))),[r])}const BA=ge.forwardRef(function({children:e,fallback:t,resize:n,style:i,gl:s,events:l=EA,eventSource:c,eventPrefix:u,shadows:h,linear:f,flat:p,legacy:m,orthographic:v,frameloop:y,dpr:w,performance:x,raycaster:_,camera:E,scene:M,onPointerMissed:b,onCreated:R,...P},I){ge.useMemo(()=>sA(Kb),[]);const z=zA(),[A,C]=TA({scroll:!0,debounce:{scroll:50,resize:0},...n}),B=ge.useRef(null),$=ge.useRef(null);ge.useImperativeHandle(I,()=>B.current);const oe=ey(b),[G,q]=ge.useState(!1),[ie,te]=ge.useState(!1);if(G)throw G;if(ie)throw ie;const Q=ge.useRef(null);qa(()=>{const X=B.current;C.width>0&&C.height>0&&X&&(Q.current||(Q.current=MA(X)),Q.current.configure({gl:s,events:l,shadows:h,linear:f,flat:p,legacy:m,orthographic:v,frameloop:y,dpr:w,performance:x,raycaster:_,camera:E,scene:M,size:C,onPointerMissed:(...U)=>oe.current==null?void 0:oe.current(...U),onCreated:U=>{U.events.connect==null||U.events.connect(c?aA(c)?c.current:c:$.current),u&&U.setEvents({compute:(Z,ce)=>{const H=Z[u+"X"],xe=Z[u+"Y"];ce.pointer.set(H/ce.size.width*2-1,-(xe/ce.size.height)*2+1),ce.raycaster.setFromCamera(ce.pointer,ce.camera)}}),R?.(U)}}),Q.current.render(Ti.jsx(z,{children:Ti.jsx(ty,{set:te,children:Ti.jsx(ge.Suspense,{fallback:Ti.jsx(lA,{set:q}),children:e??null})})})))}),ge.useEffect(()=>{const X=B.current;if(X)return()=>uy(X)},[]);const j=c?"none":"auto";return Ti.jsx("div",{ref:$,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:j,...i},...P,children:Ti.jsx("div",{ref:A,style:{width:"100%",height:"100%"},children:Ti.jsx("canvas",{ref:B,style:{display:"block"},children:t})})})}),dR=ge.forwardRef(function(e,t){return Ti.jsx(py,{children:Ti.jsx(BA,{...e,ref:t})})});function bo(){return bo=Object.assign?Object.assign.bind():function(r){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)({}).hasOwnProperty.call(t,n)&&(r[n]=t[n])}return r},bo.apply(null,arguments)}const Za=new D,ap=new D,kA=new D,C0=new me;function HA(r,e,t){const n=Za.setFromMatrixPosition(r.matrixWorld);n.project(e);const i=t.width/2,s=t.height/2;return[n.x*i+i,-(n.y*s)+s]}function VA(r,e){const t=Za.setFromMatrixPosition(r.matrixWorld),n=ap.setFromMatrixPosition(e.matrixWorld),i=t.sub(n),s=e.getWorldDirection(kA);return i.angleTo(s)>Math.PI/2}function GA(r,e,t,n){const i=Za.setFromMatrixPosition(r.matrixWorld),s=i.clone();s.project(e),C0.set(s.x,s.y),t.setFromCamera(C0,e);const l=t.intersectObjects(n,!0);if(l.length){const c=l[0].distance;return i.distanceTo(t.ray.origin)<c}return!0}function WA(r,e){if(e instanceof Wi)return e.zoom;if(e instanceof qt){const t=Za.setFromMatrixPosition(r.matrixWorld),n=ap.setFromMatrixPosition(e.matrixWorld),i=e.fov*Math.PI/180,s=t.distanceTo(n);return 1/(2*Math.tan(i/2)*s)}else return 1}function XA(r,e,t){if(e instanceof qt||e instanceof Wi){const n=Za.setFromMatrixPosition(r.matrixWorld),i=ap.setFromMatrixPosition(e.matrixWorld),s=n.distanceTo(i),l=(t[1]-t[0])/(e.far-e.near),c=t[1]-l*e.far;return Math.round(l*s+c)}}const vd=r=>Math.abs(r)<1e-10?0:r;function my(r,e,t=""){let n="matrix3d(";for(let i=0;i!==16;i++)n+=vd(e[i]*r.elements[i])+(i!==15?",":")");return t+n}const YA=(r=>e=>my(e,r))([1,-1,1,1,1,-1,1,1,1,-1,1,1,1,-1,1,1]),qA=(r=>(e,t)=>my(e,r(t),"translate(-50%,-50%)"))(r=>[1/r,1/r,1/r,1,-1/r,-1/r,-1/r,-1,1/r,1/r,1/r,1,1,1,1,1]);function ZA(r){return r&&typeof r=="object"&&"current"in r}const pR=ge.forwardRef(({children:r,eps:e=.001,style:t,className:n,prepend:i,center:s,fullscreen:l,portal:c,distanceFactor:u,sprite:h=!1,transform:f=!1,occlude:p,onOcclude:m,castShadow:v,receiveShadow:y,material:w,geometry:x,zIndexRange:_=[16777271,0],calculatePosition:E=HA,as:M="div",wrapperClass:b,pointerEvents:R="auto",...P},I)=>{const{gl:z,camera:A,scene:C,size:B,raycaster:$,events:oe,viewport:G}=Ln(),[q]=ge.useState(()=>document.createElement(M)),ie=ge.useRef(),te=ge.useRef(null),Q=ge.useRef(0),j=ge.useRef([0,0]),X=ge.useRef(null),U=ge.useRef(null),Z=c?.current||oe.connected||z.domElement.parentNode,ce=ge.useRef(null),H=ge.useRef(!1),xe=ge.useMemo(()=>p&&p!=="blending"||Array.isArray(p)&&p.length&&ZA(p[0]),[p]);ge.useLayoutEffect(()=>{const it=z.domElement;p&&p==="blending"?(it.style.zIndex=`${Math.floor(_[0]/2)}`,it.style.position="absolute",it.style.pointerEvents="none"):(it.style.zIndex=null,it.style.position=null,it.style.pointerEvents=null)},[p]),ge.useLayoutEffect(()=>{if(te.current){const it=ie.current=U0(q);if(C.updateMatrixWorld(),f)q.style.cssText="position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;";else{const Re=E(te.current,A,B);q.style.cssText=`position:absolute;top:0;left:0;transform:translate3d(${Re[0]}px,${Re[1]}px,0);transform-origin:0 0;`}return Z&&(i?Z.prepend(q):Z.appendChild(q)),()=>{Z&&Z.removeChild(q),it.unmount()}}},[Z,f]),ge.useLayoutEffect(()=>{b&&(q.className=b)},[b]);const Fe=ge.useMemo(()=>f?{position:"absolute",top:0,left:0,width:B.width,height:B.height,transformStyle:"preserve-3d",pointerEvents:"none"}:{position:"absolute",transform:s?"translate3d(-50%,-50%,0)":"none",...l&&{top:-B.height/2,left:-B.width/2,width:B.width,height:B.height},...t},[t,s,l,B,f]),Ye=ge.useMemo(()=>({position:"absolute",pointerEvents:R}),[R]);ge.useLayoutEffect(()=>{if(H.current=!1,f){var it;(it=ie.current)==null||it.render(ge.createElement("div",{ref:X,style:Fe},ge.createElement("div",{ref:U,style:Ye},ge.createElement("div",{ref:I,className:n,style:t,children:r}))))}else{var Re;(Re=ie.current)==null||Re.render(ge.createElement("div",{ref:I,style:Fe,className:n,children:r}))}});const Ze=ge.useRef(!0);cy(it=>{if(te.current){A.updateMatrixWorld(),te.current.updateWorldMatrix(!0,!1);const Re=f?j.current:E(te.current,A,B);if(f||Math.abs(Q.current-A.zoom)>e||Math.abs(j.current[0]-Re[0])>e||Math.abs(j.current[1]-Re[1])>e){const k=VA(te.current,A);let ye=!1;xe&&(Array.isArray(p)?ye=p.map(Ge=>Ge.current):p!=="blending"&&(ye=[C]));const de=Ze.current;if(ye){const Ge=GA(te.current,A,$,ye);Ze.current=Ge&&!k}else Ze.current=!k;de!==Ze.current&&(m?m(!Ze.current):q.style.display=Ze.current?"block":"none");const we=Math.floor(_[0]/2),ve=p?xe?[_[0],we]:[we-1,0]:_;if(q.style.zIndex=`${XA(te.current,A,ve)}`,f){const[Ge,Ne]=[B.width/2,B.height/2],ke=A.projectionMatrix.elements[5]*Ne,{isOrthographicCamera:nt,top:gt,left:Ut,bottom:F,right:L}=A,ne=YA(A.matrixWorldInverse),Ee=nt?`scale(${ke})translate(${vd(-(L+Ut)/2)}px,${vd((gt+F)/2)}px)`:`translateZ(${ke}px)`;let _e=te.current.matrixWorld;h&&(_e=A.matrixWorldInverse.clone().transpose().copyPosition(_e).scale(te.current.scale),_e.elements[3]=_e.elements[7]=_e.elements[11]=0,_e.elements[15]=1),q.style.width=B.width+"px",q.style.height=B.height+"px",q.style.perspective=nt?"":`${ke}px`,X.current&&U.current&&(X.current.style.transform=`${Ee}${ne}translate(${Ge}px,${Ne}px)`,U.current.style.transform=qA(_e,1/((u||10)/400)))}else{const Ge=u===void 0?1:WA(te.current,A)*u;q.style.transform=`translate3d(${Re[0]}px,${Re[1]}px,0) scale(${Ge})`}j.current=Re,Q.current=A.zoom}}if(!xe&&ce.current&&!H.current)if(f){if(X.current){const Re=X.current.children[0];if(Re!=null&&Re.clientWidth&&Re!=null&&Re.clientHeight){const{isOrthographicCamera:k}=A;if(k||x)P.scale&&(Array.isArray(P.scale)?P.scale instanceof D?ce.current.scale.copy(P.scale.clone().divideScalar(1)):ce.current.scale.set(1/P.scale[0],1/P.scale[1],1/P.scale[2]):ce.current.scale.setScalar(1/P.scale));else{const ye=(u||10)/400,de=Re.clientWidth*ye,we=Re.clientHeight*ye;ce.current.scale.set(de,we,1)}H.current=!0}}}else{const Re=q.children[0];if(Re!=null&&Re.clientWidth&&Re!=null&&Re.clientHeight){const k=1/G.factor,ye=Re.clientWidth*k,de=Re.clientHeight*k;ce.current.scale.set(ye,de,1),H.current=!0}ce.current.lookAt(it.camera.position)}});const tt=ge.useMemo(()=>({vertexShader:f?void 0:`
          /*
            This shader is from the THREE's SpriteMaterial.
            We need to turn the backing plane into a Sprite
            (make it always face the camera) if "transfrom"
            is false.
          */
          #include <common>

          void main() {
            vec2 center = vec2(0., 1.);
            float rotation = 0.0;

            // This is somewhat arbitrary, but it seems to work well
            // Need to figure out how to derive this dynamically if it even matters
            float size = 0.03;

            vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
            vec2 scale;
            scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
            scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );

            bool isPerspective = isPerspectiveMatrix( projectionMatrix );
            if ( isPerspective ) scale *= - mvPosition.z;

            vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale * size;
            vec2 rotatedPosition;
            rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
            rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
            mvPosition.xy += rotatedPosition;

            gl_Position = projectionMatrix * mvPosition;
          }
      `,fragmentShader:`
        void main() {
          gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
        }
      `}),[f]);return ge.createElement("group",bo({},P,{ref:te}),p&&!xe&&ge.createElement("mesh",{castShadow:v,receiveShadow:y,ref:ce},x||ge.createElement("planeGeometry",null),w||ge.createElement("shaderMaterial",{side:ni,vertexShader:tt.vertexShader,fragmentShader:tt.fragmentShader})))});var jA=Object.defineProperty,QA=(r,e,t)=>e in r?jA(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,JA=(r,e,t)=>(QA(r,e+"",t),t);class KA{constructor(){JA(this,"_listeners")}addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,l=i.length;s<l;s++)i[s].call(this,e);e.target=null}}}var $A=Object.defineProperty,eR=(r,e,t)=>e in r?$A(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,he=(r,e,t)=>(eR(r,typeof e!="symbol"?e+"":e,t),t);let tR=class extends bt{constructor(e,t){super(),he(this,"isTransformControls",!0),he(this,"visible",!1),he(this,"domElement"),he(this,"raycaster",new rp),he(this,"gizmo"),he(this,"plane"),he(this,"tempVector",new D),he(this,"tempVector2",new D),he(this,"tempQuaternion",new Nt),he(this,"unit",{X:new D(1,0,0),Y:new D(0,1,0),Z:new D(0,0,1)}),he(this,"pointStart",new D),he(this,"pointEnd",new D),he(this,"offset",new D),he(this,"rotationAxis",new D),he(this,"startNorm",new D),he(this,"endNorm",new D),he(this,"rotationAngle",0),he(this,"cameraPosition",new D),he(this,"cameraQuaternion",new Nt),he(this,"cameraScale",new D),he(this,"parentPosition",new D),he(this,"parentQuaternion",new Nt),he(this,"parentQuaternionInv",new Nt),he(this,"parentScale",new D),he(this,"worldPositionStart",new D),he(this,"worldQuaternionStart",new Nt),he(this,"worldScaleStart",new D),he(this,"worldPosition",new D),he(this,"worldQuaternion",new Nt),he(this,"worldQuaternionInv",new Nt),he(this,"worldScale",new D),he(this,"eye",new D),he(this,"positionStart",new D),he(this,"quaternionStart",new Nt),he(this,"scaleStart",new D),he(this,"camera"),he(this,"object"),he(this,"enabled",!0),he(this,"axis",null),he(this,"mode","translate"),he(this,"translationSnap",null),he(this,"rotationSnap",null),he(this,"scaleSnap",null),he(this,"space","world"),he(this,"size",1),he(this,"dragging",!1),he(this,"showX",!0),he(this,"showY",!0),he(this,"showZ",!0),he(this,"changeEvent",{type:"change"}),he(this,"mouseDownEvent",{type:"mouseDown",mode:this.mode}),he(this,"mouseUpEvent",{type:"mouseUp",mode:this.mode}),he(this,"objectChangeEvent",{type:"objectChange"}),he(this,"intersectObjectWithRay",(i,s,l)=>{const c=s.intersectObject(i,!0);for(let u=0;u<c.length;u++)if(c[u].object.visible||l)return c[u];return!1}),he(this,"attach",i=>(this.object=i,this.visible=!0,this)),he(this,"detach",()=>(this.object=void 0,this.visible=!1,this.axis=null,this)),he(this,"reset",()=>this.enabled?(this.dragging&&this.object!==void 0&&(this.object.position.copy(this.positionStart),this.object.quaternion.copy(this.quaternionStart),this.object.scale.copy(this.scaleStart),this.dispatchEvent(this.changeEvent),this.dispatchEvent(this.objectChangeEvent),this.pointStart.copy(this.pointEnd)),this):this),he(this,"updateMatrixWorld",()=>{this.object!==void 0&&(this.object.updateMatrixWorld(),this.object.parent===null?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):this.object.parent.matrixWorld.decompose(this.parentPosition,this.parentQuaternion,this.parentScale),this.object.matrixWorld.decompose(this.worldPosition,this.worldQuaternion,this.worldScale),this.parentQuaternionInv.copy(this.parentQuaternion).invert(),this.worldQuaternionInv.copy(this.worldQuaternion).invert()),this.camera.updateMatrixWorld(),this.camera.matrixWorld.decompose(this.cameraPosition,this.cameraQuaternion,this.cameraScale),this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize(),super.updateMatrixWorld()}),he(this,"pointerHover",i=>{if(this.object===void 0||this.dragging===!0)return;this.raycaster.setFromCamera(i,this.camera);const s=this.intersectObjectWithRay(this.gizmo.picker[this.mode],this.raycaster);s?this.axis=s.object.name:this.axis=null}),he(this,"pointerDown",i=>{if(!(this.object===void 0||this.dragging===!0||i.button!==0)&&this.axis!==null){this.raycaster.setFromCamera(i,this.camera);const s=this.intersectObjectWithRay(this.plane,this.raycaster,!0);if(s){let l=this.space;if(this.mode==="scale"?l="local":(this.axis==="E"||this.axis==="XYZE"||this.axis==="XYZ")&&(l="world"),l==="local"&&this.mode==="rotate"){const c=this.rotationSnap;this.axis==="X"&&c&&(this.object.rotation.x=Math.round(this.object.rotation.x/c)*c),this.axis==="Y"&&c&&(this.object.rotation.y=Math.round(this.object.rotation.y/c)*c),this.axis==="Z"&&c&&(this.object.rotation.z=Math.round(this.object.rotation.z/c)*c)}this.object.updateMatrixWorld(),this.object.parent&&this.object.parent.updateMatrixWorld(),this.positionStart.copy(this.object.position),this.quaternionStart.copy(this.object.quaternion),this.scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this.worldScaleStart),this.pointStart.copy(s.point).sub(this.worldPositionStart)}this.dragging=!0,this.mouseDownEvent.mode=this.mode,this.dispatchEvent(this.mouseDownEvent)}}),he(this,"pointerMove",i=>{const s=this.axis,l=this.mode,c=this.object;let u=this.space;if(l==="scale"?u="local":(s==="E"||s==="XYZE"||s==="XYZ")&&(u="world"),c===void 0||s===null||this.dragging===!1||i.button!==-1)return;this.raycaster.setFromCamera(i,this.camera);const h=this.intersectObjectWithRay(this.plane,this.raycaster,!0);if(h){if(this.pointEnd.copy(h.point).sub(this.worldPositionStart),l==="translate")this.offset.copy(this.pointEnd).sub(this.pointStart),u==="local"&&s!=="XYZ"&&this.offset.applyQuaternion(this.worldQuaternionInv),s.indexOf("X")===-1&&(this.offset.x=0),s.indexOf("Y")===-1&&(this.offset.y=0),s.indexOf("Z")===-1&&(this.offset.z=0),u==="local"&&s!=="XYZ"?this.offset.applyQuaternion(this.quaternionStart).divide(this.parentScale):this.offset.applyQuaternion(this.parentQuaternionInv).divide(this.parentScale),c.position.copy(this.offset).add(this.positionStart),this.translationSnap&&(u==="local"&&(c.position.applyQuaternion(this.tempQuaternion.copy(this.quaternionStart).invert()),s.search("X")!==-1&&(c.position.x=Math.round(c.position.x/this.translationSnap)*this.translationSnap),s.search("Y")!==-1&&(c.position.y=Math.round(c.position.y/this.translationSnap)*this.translationSnap),s.search("Z")!==-1&&(c.position.z=Math.round(c.position.z/this.translationSnap)*this.translationSnap),c.position.applyQuaternion(this.quaternionStart)),u==="world"&&(c.parent&&c.position.add(this.tempVector.setFromMatrixPosition(c.parent.matrixWorld)),s.search("X")!==-1&&(c.position.x=Math.round(c.position.x/this.translationSnap)*this.translationSnap),s.search("Y")!==-1&&(c.position.y=Math.round(c.position.y/this.translationSnap)*this.translationSnap),s.search("Z")!==-1&&(c.position.z=Math.round(c.position.z/this.translationSnap)*this.translationSnap),c.parent&&c.position.sub(this.tempVector.setFromMatrixPosition(c.parent.matrixWorld))));else if(l==="scale"){if(s.search("XYZ")!==-1){let f=this.pointEnd.length()/this.pointStart.length();this.pointEnd.dot(this.pointStart)<0&&(f*=-1),this.tempVector2.set(f,f,f)}else this.tempVector.copy(this.pointStart),this.tempVector2.copy(this.pointEnd),this.tempVector.applyQuaternion(this.worldQuaternionInv),this.tempVector2.applyQuaternion(this.worldQuaternionInv),this.tempVector2.divide(this.tempVector),s.search("X")===-1&&(this.tempVector2.x=1),s.search("Y")===-1&&(this.tempVector2.y=1),s.search("Z")===-1&&(this.tempVector2.z=1);c.scale.copy(this.scaleStart).multiply(this.tempVector2),this.scaleSnap&&this.object&&(s.search("X")!==-1&&(this.object.scale.x=Math.round(c.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),s.search("Y")!==-1&&(c.scale.y=Math.round(c.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),s.search("Z")!==-1&&(c.scale.z=Math.round(c.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if(l==="rotate"){this.offset.copy(this.pointEnd).sub(this.pointStart);const f=20/this.worldPosition.distanceTo(this.tempVector.setFromMatrixPosition(this.camera.matrixWorld));s==="E"?(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this.startNorm.copy(this.pointStart).normalize(),this.endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=this.endNorm.cross(this.startNorm).dot(this.eye)<0?1:-1):s==="XYZE"?(this.rotationAxis.copy(this.offset).cross(this.eye).normalize(),this.rotationAngle=this.offset.dot(this.tempVector.copy(this.rotationAxis).cross(this.eye))*f):(s==="X"||s==="Y"||s==="Z")&&(this.rotationAxis.copy(this.unit[s]),this.tempVector.copy(this.unit[s]),u==="local"&&this.tempVector.applyQuaternion(this.worldQuaternion),this.rotationAngle=this.offset.dot(this.tempVector.cross(this.eye).normalize())*f),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),u==="local"&&s!=="E"&&s!=="XYZE"?(c.quaternion.copy(this.quaternionStart),c.quaternion.multiply(this.tempQuaternion.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this.parentQuaternionInv),c.quaternion.copy(this.tempQuaternion.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),c.quaternion.multiply(this.quaternionStart).normalize())}this.dispatchEvent(this.changeEvent),this.dispatchEvent(this.objectChangeEvent)}}),he(this,"pointerUp",i=>{i.button===0&&(this.dragging&&this.axis!==null&&(this.mouseUpEvent.mode=this.mode,this.dispatchEvent(this.mouseUpEvent)),this.dragging=!1,this.axis=null)}),he(this,"getPointer",i=>{var s;if(this.domElement&&((s=this.domElement.ownerDocument)!=null&&s.pointerLockElement))return{x:0,y:0,button:i.button};{const l=i.changedTouches?i.changedTouches[0]:i,c=this.domElement.getBoundingClientRect();return{x:(l.clientX-c.left)/c.width*2-1,y:-(l.clientY-c.top)/c.height*2+1,button:i.button}}}),he(this,"onPointerHover",i=>{if(this.enabled)switch(i.pointerType){case"mouse":case"pen":this.pointerHover(this.getPointer(i));break}}),he(this,"onPointerDown",i=>{!this.enabled||!this.domElement||(this.domElement.style.touchAction="none",this.domElement.ownerDocument.addEventListener("pointermove",this.onPointerMove),this.pointerHover(this.getPointer(i)),this.pointerDown(this.getPointer(i)))}),he(this,"onPointerMove",i=>{this.enabled&&this.pointerMove(this.getPointer(i))}),he(this,"onPointerUp",i=>{!this.enabled||!this.domElement||(this.domElement.style.touchAction="",this.domElement.ownerDocument.removeEventListener("pointermove",this.onPointerMove),this.pointerUp(this.getPointer(i)))}),he(this,"getMode",()=>this.mode),he(this,"setMode",i=>{this.mode=i}),he(this,"setTranslationSnap",i=>{this.translationSnap=i}),he(this,"setRotationSnap",i=>{this.rotationSnap=i}),he(this,"setScaleSnap",i=>{this.scaleSnap=i}),he(this,"setSize",i=>{this.size=i}),he(this,"setSpace",i=>{this.space=i}),he(this,"update",()=>{console.warn("THREE.TransformControls: update function has no more functionality and therefore has been deprecated.")}),he(this,"connect",i=>{i===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.domElement=i,this.domElement.addEventListener("pointerdown",this.onPointerDown),this.domElement.addEventListener("pointermove",this.onPointerHover),this.domElement.ownerDocument.addEventListener("pointerup",this.onPointerUp)}),he(this,"dispose",()=>{var i,s,l,c,u,h;(i=this.domElement)==null||i.removeEventListener("pointerdown",this.onPointerDown),(s=this.domElement)==null||s.removeEventListener("pointermove",this.onPointerHover),(c=(l=this.domElement)==null?void 0:l.ownerDocument)==null||c.removeEventListener("pointermove",this.onPointerMove),(h=(u=this.domElement)==null?void 0:u.ownerDocument)==null||h.removeEventListener("pointerup",this.onPointerUp),this.traverse(f=>{const p=f;p.geometry&&p.geometry.dispose(),p.material&&p.material.dispose()})}),this.domElement=t,this.camera=e,this.gizmo=new nR,this.add(this.gizmo),this.plane=new iR,this.add(this.plane);const n=(i,s)=>{let l=s;Object.defineProperty(this,i,{get:function(){return l!==void 0?l:s},set:function(c){l!==c&&(l=c,this.plane[i]=c,this.gizmo[i]=c,this.dispatchEvent({type:i+"-changed",value:c}),this.dispatchEvent(this.changeEvent))}}),this[i]=s,this.plane[i]=s,this.gizmo[i]=s};n("camera",this.camera),n("object",this.object),n("enabled",this.enabled),n("axis",this.axis),n("mode",this.mode),n("translationSnap",this.translationSnap),n("rotationSnap",this.rotationSnap),n("scaleSnap",this.scaleSnap),n("space",this.space),n("size",this.size),n("dragging",this.dragging),n("showX",this.showX),n("showY",this.showY),n("showZ",this.showZ),n("worldPosition",this.worldPosition),n("worldPositionStart",this.worldPositionStart),n("worldQuaternion",this.worldQuaternion),n("worldQuaternionStart",this.worldQuaternionStart),n("cameraPosition",this.cameraPosition),n("cameraQuaternion",this.cameraQuaternion),n("pointStart",this.pointStart),n("pointEnd",this.pointEnd),n("rotationAxis",this.rotationAxis),n("rotationAngle",this.rotationAngle),n("eye",this.eye),t!==void 0&&this.connect(t)}};class nR extends bt{constructor(){super(),he(this,"isTransformControlsGizmo",!0),he(this,"type","TransformControlsGizmo"),he(this,"tempVector",new D(0,0,0)),he(this,"tempEuler",new Ro),he(this,"alignVector",new D(0,1,0)),he(this,"zeroVector",new D(0,0,0)),he(this,"lookAtMatrix",new dt),he(this,"tempQuaternion",new Nt),he(this,"tempQuaternion2",new Nt),he(this,"identityQuaternion",new Nt),he(this,"unitX",new D(1,0,0)),he(this,"unitY",new D(0,1,0)),he(this,"unitZ",new D(0,0,1)),he(this,"gizmo"),he(this,"picker"),he(this,"helper"),he(this,"rotationAxis",new D),he(this,"cameraPosition",new D),he(this,"worldPositionStart",new D),he(this,"worldQuaternionStart",new Nt),he(this,"worldPosition",new D),he(this,"worldQuaternion",new Nt),he(this,"eye",new D),he(this,"camera",null),he(this,"enabled",!0),he(this,"axis",null),he(this,"mode","translate"),he(this,"space","world"),he(this,"size",1),he(this,"dragging",!1),he(this,"showX",!0),he(this,"showY",!0),he(this,"showZ",!0),he(this,"updateMatrixWorld",()=>{let X=this.space;this.mode==="scale"&&(X="local");const U=X==="local"?this.worldQuaternion:this.identityQuaternion;this.gizmo.translate.visible=this.mode==="translate",this.gizmo.rotate.visible=this.mode==="rotate",this.gizmo.scale.visible=this.mode==="scale",this.helper.translate.visible=this.mode==="translate",this.helper.rotate.visible=this.mode==="rotate",this.helper.scale.visible=this.mode==="scale";let Z=[];Z=Z.concat(this.picker[this.mode].children),Z=Z.concat(this.gizmo[this.mode].children),Z=Z.concat(this.helper[this.mode].children);for(let ce=0;ce<Z.length;ce++){const H=Z[ce];H.visible=!0,H.rotation.set(0,0,0),H.position.copy(this.worldPosition);let xe;if(this.camera.isOrthographicCamera?xe=(this.camera.top-this.camera.bottom)/this.camera.zoom:xe=this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),H.scale.set(1,1,1).multiplyScalar(xe*this.size/7),H.tag==="helper"){H.visible=!1,H.name==="AXIS"?(H.position.copy(this.worldPositionStart),H.visible=!!this.axis,this.axis==="X"&&(this.tempQuaternion.setFromEuler(this.tempEuler.set(0,0,0)),H.quaternion.copy(U).multiply(this.tempQuaternion),Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(U).dot(this.eye))>.9&&(H.visible=!1)),this.axis==="Y"&&(this.tempQuaternion.setFromEuler(this.tempEuler.set(0,0,Math.PI/2)),H.quaternion.copy(U).multiply(this.tempQuaternion),Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(U).dot(this.eye))>.9&&(H.visible=!1)),this.axis==="Z"&&(this.tempQuaternion.setFromEuler(this.tempEuler.set(0,Math.PI/2,0)),H.quaternion.copy(U).multiply(this.tempQuaternion),Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(U).dot(this.eye))>.9&&(H.visible=!1)),this.axis==="XYZE"&&(this.tempQuaternion.setFromEuler(this.tempEuler.set(0,Math.PI/2,0)),this.alignVector.copy(this.rotationAxis),H.quaternion.setFromRotationMatrix(this.lookAtMatrix.lookAt(this.zeroVector,this.alignVector,this.unitY)),H.quaternion.multiply(this.tempQuaternion),H.visible=this.dragging),this.axis==="E"&&(H.visible=!1)):H.name==="START"?(H.position.copy(this.worldPositionStart),H.visible=this.dragging):H.name==="END"?(H.position.copy(this.worldPosition),H.visible=this.dragging):H.name==="DELTA"?(H.position.copy(this.worldPositionStart),H.quaternion.copy(this.worldQuaternionStart),this.tempVector.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),this.tempVector.applyQuaternion(this.worldQuaternionStart.clone().invert()),H.scale.copy(this.tempVector),H.visible=this.dragging):(H.quaternion.copy(U),this.dragging?H.position.copy(this.worldPositionStart):H.position.copy(this.worldPosition),this.axis&&(H.visible=this.axis.search(H.name)!==-1));continue}H.quaternion.copy(U),this.mode==="translate"||this.mode==="scale"?((H.name==="X"||H.name==="XYZX")&&Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(U).dot(this.eye))>.99&&(H.scale.set(1e-10,1e-10,1e-10),H.visible=!1),(H.name==="Y"||H.name==="XYZY")&&Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(U).dot(this.eye))>.99&&(H.scale.set(1e-10,1e-10,1e-10),H.visible=!1),(H.name==="Z"||H.name==="XYZZ")&&Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(U).dot(this.eye))>.99&&(H.scale.set(1e-10,1e-10,1e-10),H.visible=!1),H.name==="XY"&&Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(U).dot(this.eye))<.2&&(H.scale.set(1e-10,1e-10,1e-10),H.visible=!1),H.name==="YZ"&&Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(U).dot(this.eye))<.2&&(H.scale.set(1e-10,1e-10,1e-10),H.visible=!1),H.name==="XZ"&&Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(U).dot(this.eye))<.2&&(H.scale.set(1e-10,1e-10,1e-10),H.visible=!1),H.name.search("X")!==-1&&(this.alignVector.copy(this.unitX).applyQuaternion(U).dot(this.eye)<0?H.tag==="fwd"?H.visible=!1:H.scale.x*=-1:H.tag==="bwd"&&(H.visible=!1)),H.name.search("Y")!==-1&&(this.alignVector.copy(this.unitY).applyQuaternion(U).dot(this.eye)<0?H.tag==="fwd"?H.visible=!1:H.scale.y*=-1:H.tag==="bwd"&&(H.visible=!1)),H.name.search("Z")!==-1&&(this.alignVector.copy(this.unitZ).applyQuaternion(U).dot(this.eye)<0?H.tag==="fwd"?H.visible=!1:H.scale.z*=-1:H.tag==="bwd"&&(H.visible=!1))):this.mode==="rotate"&&(this.tempQuaternion2.copy(U),this.alignVector.copy(this.eye).applyQuaternion(this.tempQuaternion.copy(U).invert()),H.name.search("E")!==-1&&H.quaternion.setFromRotationMatrix(this.lookAtMatrix.lookAt(this.eye,this.zeroVector,this.unitY)),H.name==="X"&&(this.tempQuaternion.setFromAxisAngle(this.unitX,Math.atan2(-this.alignVector.y,this.alignVector.z)),this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2,this.tempQuaternion),H.quaternion.copy(this.tempQuaternion)),H.name==="Y"&&(this.tempQuaternion.setFromAxisAngle(this.unitY,Math.atan2(this.alignVector.x,this.alignVector.z)),this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2,this.tempQuaternion),H.quaternion.copy(this.tempQuaternion)),H.name==="Z"&&(this.tempQuaternion.setFromAxisAngle(this.unitZ,Math.atan2(this.alignVector.y,this.alignVector.x)),this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2,this.tempQuaternion),H.quaternion.copy(this.tempQuaternion))),H.visible=H.visible&&(H.name.indexOf("X")===-1||this.showX),H.visible=H.visible&&(H.name.indexOf("Y")===-1||this.showY),H.visible=H.visible&&(H.name.indexOf("Z")===-1||this.showZ),H.visible=H.visible&&(H.name.indexOf("E")===-1||this.showX&&this.showY&&this.showZ),H.material.tempOpacity=H.material.tempOpacity||H.material.opacity,H.material.tempColor=H.material.tempColor||H.material.color.clone(),H.material.color.copy(H.material.tempColor),H.material.opacity=H.material.tempOpacity,this.enabled?this.axis&&(H.name===this.axis?(H.material.opacity=1,H.material.color.lerp(new Be(1,1,1),.5)):this.axis.split("").some(function(Fe){return H.name===Fe})?(H.material.opacity=1,H.material.color.lerp(new Be(1,1,1),.5)):(H.material.opacity*=.25,H.material.color.lerp(new Be(1,1,1),.5))):(H.material.opacity*=.5,H.material.color.lerp(new Be(1,1,1),.5))}super.updateMatrixWorld()});const e=new ji({depthTest:!1,depthWrite:!1,transparent:!0,side:ni,fog:!1,toneMapped:!1}),t=new Nn({depthTest:!1,depthWrite:!1,transparent:!0,linewidth:1,fog:!1,toneMapped:!1}),n=e.clone();n.opacity=.15;const i=e.clone();i.opacity=.33;const s=e.clone();s.color.set(16711680);const l=e.clone();l.color.set(65280);const c=e.clone();c.color.set(255);const u=e.clone();u.opacity=.25;const h=u.clone();h.color.set(16776960);const f=u.clone();f.color.set(65535);const p=u.clone();p.color.set(16711935),e.clone().color.set(16776960);const v=t.clone();v.color.set(16711680);const y=t.clone();y.color.set(65280);const w=t.clone();w.color.set(255);const x=t.clone();x.color.set(65535);const _=t.clone();_.color.set(16711935);const E=t.clone();E.color.set(16776960);const M=t.clone();M.color.set(7895160);const b=E.clone();b.opacity=.25;const R=new En(0,.05,.2,12,1,!1),P=new Wn(.125,.125,.125),I=new vt;I.setAttribute("position",new Xe([0,0,0,1,0,0],3));const z=(X,U)=>{const Z=new vt,ce=[];for(let H=0;H<=64*U;++H)ce.push(0,Math.cos(H/32*Math.PI)*X,Math.sin(H/32*Math.PI)*X);return Z.setAttribute("position",new Xe(ce,3)),Z},A=()=>{const X=new vt;return X.setAttribute("position",new Xe([0,0,0,1,1,1],3)),X},C={X:[[new Ve(R,s),[1,0,0],[0,0,-Math.PI/2],null,"fwd"],[new Ve(R,s),[1,0,0],[0,0,Math.PI/2],null,"bwd"],[new Et(I,v)]],Y:[[new Ve(R,l),[0,1,0],null,null,"fwd"],[new Ve(R,l),[0,1,0],[Math.PI,0,0],null,"bwd"],[new Et(I,y),null,[0,0,Math.PI/2]]],Z:[[new Ve(R,c),[0,0,1],[Math.PI/2,0,0],null,"fwd"],[new Ve(R,c),[0,0,1],[-Math.PI/2,0,0],null,"bwd"],[new Et(I,w),null,[0,-Math.PI/2,0]]],XYZ:[[new Ve(new vi(.1,0),u.clone()),[0,0,0],[0,0,0]]],XY:[[new Ve(new _i(.295,.295),h.clone()),[.15,.15,0]],[new Et(I,E),[.18,.3,0],null,[.125,1,1]],[new Et(I,E),[.3,.18,0],[0,0,Math.PI/2],[.125,1,1]]],YZ:[[new Ve(new _i(.295,.295),f.clone()),[0,.15,.15],[0,Math.PI/2,0]],[new Et(I,x),[0,.18,.3],[0,0,Math.PI/2],[.125,1,1]],[new Et(I,x),[0,.3,.18],[0,-Math.PI/2,0],[.125,1,1]]],XZ:[[new Ve(new _i(.295,.295),p.clone()),[.15,0,.15],[-Math.PI/2,0,0]],[new Et(I,_),[.18,0,.3],null,[.125,1,1]],[new Et(I,_),[.3,0,.18],[0,-Math.PI/2,0],[.125,1,1]]]},B={X:[[new Ve(new En(.2,0,1,4,1,!1),n),[.6,0,0],[0,0,-Math.PI/2]]],Y:[[new Ve(new En(.2,0,1,4,1,!1),n),[0,.6,0]]],Z:[[new Ve(new En(.2,0,1,4,1,!1),n),[0,0,.6],[Math.PI/2,0,0]]],XYZ:[[new Ve(new vi(.2,0),n)]],XY:[[new Ve(new _i(.4,.4),n),[.2,.2,0]]],YZ:[[new Ve(new _i(.4,.4),n),[0,.2,.2],[0,Math.PI/2,0]]],XZ:[[new Ve(new _i(.4,.4),n),[.2,0,.2],[-Math.PI/2,0,0]]]},$={START:[[new Ve(new vi(.01,2),i),null,null,null,"helper"]],END:[[new Ve(new vi(.01,2),i),null,null,null,"helper"]],DELTA:[[new Et(A(),i),null,null,null,"helper"]],X:[[new Et(I,i.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new Et(I,i.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new Et(I,i.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},oe={X:[[new Et(z(1,.5),v)],[new Ve(new vi(.04,0),s),[0,0,.99],null,[1,3,1]]],Y:[[new Et(z(1,.5),y),null,[0,0,-Math.PI/2]],[new Ve(new vi(.04,0),l),[0,0,.99],null,[3,1,1]]],Z:[[new Et(z(1,.5),w),null,[0,Math.PI/2,0]],[new Ve(new vi(.04,0),c),[.99,0,0],null,[1,3,1]]],E:[[new Et(z(1.25,1),b),null,[0,Math.PI/2,0]],[new Ve(new En(.03,0,.15,4,1,!1),b),[1.17,0,0],[0,0,-Math.PI/2],[1,1,.001]],[new Ve(new En(.03,0,.15,4,1,!1),b),[-1.17,0,0],[0,0,Math.PI/2],[1,1,.001]],[new Ve(new En(.03,0,.15,4,1,!1),b),[0,-1.17,0],[Math.PI,0,0],[1,1,.001]],[new Ve(new En(.03,0,.15,4,1,!1),b),[0,1.17,0],[0,0,0],[1,1,.001]]],XYZE:[[new Et(z(1,1),M),null,[0,Math.PI/2,0]]]},G={AXIS:[[new Et(I,i.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]]},q={X:[[new Ve(new Dr(1,.1,4,24),n),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new Ve(new Dr(1,.1,4,24),n),[0,0,0],[Math.PI/2,0,0]]],Z:[[new Ve(new Dr(1,.1,4,24),n),[0,0,0],[0,0,-Math.PI/2]]],E:[[new Ve(new Dr(1.25,.1,2,24),n)]],XYZE:[[new Ve(new Co(.7,10,8),n)]]},ie={X:[[new Ve(P,s),[.8,0,0],[0,0,-Math.PI/2]],[new Et(I,v),null,null,[.8,1,1]]],Y:[[new Ve(P,l),[0,.8,0]],[new Et(I,y),null,[0,0,Math.PI/2],[.8,1,1]]],Z:[[new Ve(P,c),[0,0,.8],[Math.PI/2,0,0]],[new Et(I,w),null,[0,-Math.PI/2,0],[.8,1,1]]],XY:[[new Ve(P,h),[.85,.85,0],null,[2,2,.2]],[new Et(I,E),[.855,.98,0],null,[.125,1,1]],[new Et(I,E),[.98,.855,0],[0,0,Math.PI/2],[.125,1,1]]],YZ:[[new Ve(P,f),[0,.85,.85],null,[.2,2,2]],[new Et(I,x),[0,.855,.98],[0,0,Math.PI/2],[.125,1,1]],[new Et(I,x),[0,.98,.855],[0,-Math.PI/2,0],[.125,1,1]]],XZ:[[new Ve(P,p),[.85,0,.85],null,[2,.2,2]],[new Et(I,_),[.855,0,.98],null,[.125,1,1]],[new Et(I,_),[.98,0,.855],[0,-Math.PI/2,0],[.125,1,1]]],XYZX:[[new Ve(new Wn(.125,.125,.125),u.clone()),[1.1,0,0]]],XYZY:[[new Ve(new Wn(.125,.125,.125),u.clone()),[0,1.1,0]]],XYZZ:[[new Ve(new Wn(.125,.125,.125),u.clone()),[0,0,1.1]]]},te={X:[[new Ve(new En(.2,0,.8,4,1,!1),n),[.5,0,0],[0,0,-Math.PI/2]]],Y:[[new Ve(new En(.2,0,.8,4,1,!1),n),[0,.5,0]]],Z:[[new Ve(new En(.2,0,.8,4,1,!1),n),[0,0,.5],[Math.PI/2,0,0]]],XY:[[new Ve(P,n),[.85,.85,0],null,[3,3,.2]]],YZ:[[new Ve(P,n),[0,.85,.85],null,[.2,3,3]]],XZ:[[new Ve(P,n),[.85,0,.85],null,[3,.2,3]]],XYZX:[[new Ve(new Wn(.2,.2,.2),n),[1.1,0,0]]],XYZY:[[new Ve(new Wn(.2,.2,.2),n),[0,1.1,0]]],XYZZ:[[new Ve(new Wn(.2,.2,.2),n),[0,0,1.1]]]},Q={X:[[new Et(I,i.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new Et(I,i.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new Et(I,i.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},j=X=>{const U=new bt;for(let Z in X)for(let ce=X[Z].length;ce--;){const H=X[Z][ce][0].clone(),xe=X[Z][ce][1],Fe=X[Z][ce][2],Ye=X[Z][ce][3],Ze=X[Z][ce][4];H.name=Z,H.tag=Ze,xe&&H.position.set(xe[0],xe[1],xe[2]),Fe&&H.rotation.set(Fe[0],Fe[1],Fe[2]),Ye&&H.scale.set(Ye[0],Ye[1],Ye[2]),H.updateMatrix();const tt=H.geometry.clone();tt.applyMatrix4(H.matrix),H.geometry=tt,H.renderOrder=1/0,H.position.set(0,0,0),H.rotation.set(0,0,0),H.scale.set(1,1,1),U.add(H)}return U};this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=j(C)),this.add(this.gizmo.rotate=j(oe)),this.add(this.gizmo.scale=j(ie)),this.add(this.picker.translate=j(B)),this.add(this.picker.rotate=j(q)),this.add(this.picker.scale=j(te)),this.add(this.helper.translate=j($)),this.add(this.helper.rotate=j(G)),this.add(this.helper.scale=j(Q)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1}}class iR extends Ve{constructor(){super(new _i(1e5,1e5,2,2),new ji({visible:!1,wireframe:!0,side:ni,transparent:!0,opacity:.1,toneMapped:!1})),he(this,"isTransformControlsPlane",!0),he(this,"type","TransformControlsPlane"),he(this,"unitX",new D(1,0,0)),he(this,"unitY",new D(0,1,0)),he(this,"unitZ",new D(0,0,1)),he(this,"tempVector",new D),he(this,"dirVector",new D),he(this,"alignVector",new D),he(this,"tempMatrix",new dt),he(this,"identityQuaternion",new Nt),he(this,"cameraQuaternion",new Nt),he(this,"worldPosition",new D),he(this,"worldQuaternion",new Nt),he(this,"eye",new D),he(this,"axis",null),he(this,"mode","translate"),he(this,"space","world"),he(this,"updateMatrixWorld",()=>{let e=this.space;switch(this.position.copy(this.worldPosition),this.mode==="scale"&&(e="local"),this.unitX.set(1,0,0).applyQuaternion(e==="local"?this.worldQuaternion:this.identityQuaternion),this.unitY.set(0,1,0).applyQuaternion(e==="local"?this.worldQuaternion:this.identityQuaternion),this.unitZ.set(0,0,1).applyQuaternion(e==="local"?this.worldQuaternion:this.identityQuaternion),this.alignVector.copy(this.unitY),this.mode){case"translate":case"scale":switch(this.axis){case"X":this.alignVector.copy(this.eye).cross(this.unitX),this.dirVector.copy(this.unitX).cross(this.alignVector);break;case"Y":this.alignVector.copy(this.eye).cross(this.unitY),this.dirVector.copy(this.unitY).cross(this.alignVector);break;case"Z":this.alignVector.copy(this.eye).cross(this.unitZ),this.dirVector.copy(this.unitZ).cross(this.alignVector);break;case"XY":this.dirVector.copy(this.unitZ);break;case"YZ":this.dirVector.copy(this.unitX);break;case"XZ":this.alignVector.copy(this.unitZ),this.dirVector.copy(this.unitY);break;case"XYZ":case"E":this.dirVector.set(0,0,0);break}break;case"rotate":default:this.dirVector.set(0,0,0)}this.dirVector.length()===0?this.quaternion.copy(this.cameraQuaternion):(this.tempMatrix.lookAt(this.tempVector.set(0,0,0),this.dirVector,this.alignVector),this.quaternion.setFromRotationMatrix(this.tempMatrix)),super.updateMatrixWorld()})}}var rR=Object.defineProperty,sR=(r,e,t)=>e in r?rR(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,st=(r,e,t)=>(sR(r,typeof e!="symbol"?e+"":e,t),t);const Oc=new ws,L0=new cr,oR=Math.cos(70*(Math.PI/180)),I0=(r,e)=>(r%e+e)%e;let aR=class extends KA{constructor(e,t){super(),st(this,"object"),st(this,"domElement"),st(this,"enabled",!0),st(this,"target",new D),st(this,"minDistance",0),st(this,"maxDistance",1/0),st(this,"minZoom",0),st(this,"maxZoom",1/0),st(this,"minPolarAngle",0),st(this,"maxPolarAngle",Math.PI),st(this,"minAzimuthAngle",-1/0),st(this,"maxAzimuthAngle",1/0),st(this,"enableDamping",!1),st(this,"dampingFactor",.05),st(this,"enableZoom",!0),st(this,"zoomSpeed",1),st(this,"enableRotate",!0),st(this,"rotateSpeed",1),st(this,"enablePan",!0),st(this,"panSpeed",1),st(this,"screenSpacePanning",!0),st(this,"keyPanSpeed",7),st(this,"zoomToCursor",!1),st(this,"autoRotate",!1),st(this,"autoRotateSpeed",2),st(this,"reverseOrbit",!1),st(this,"reverseHorizontalOrbit",!1),st(this,"reverseVerticalOrbit",!1),st(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),st(this,"mouseButtons",{LEFT:os.ROTATE,MIDDLE:os.DOLLY,RIGHT:os.PAN}),st(this,"touches",{ONE:as.ROTATE,TWO:as.DOLLY_PAN}),st(this,"target0"),st(this,"position0"),st(this,"zoom0"),st(this,"_domElementKeyEvents",null),st(this,"getPolarAngle"),st(this,"getAzimuthalAngle"),st(this,"setPolarAngle"),st(this,"setAzimuthalAngle"),st(this,"getDistance"),st(this,"getZoomScale"),st(this,"listenToKeyEvents"),st(this,"stopListenToKeyEvents"),st(this,"saveState"),st(this,"reset"),st(this,"update"),st(this,"connect"),st(this,"dispose"),st(this,"dollyIn"),st(this,"dollyOut"),st(this,"getScale"),st(this,"setScale"),this.object=e,this.domElement=t,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=()=>f.phi,this.getAzimuthalAngle=()=>f.theta,this.setPolarAngle=V=>{let fe=I0(V,2*Math.PI),Me=f.phi;Me<0&&(Me+=2*Math.PI),fe<0&&(fe+=2*Math.PI);let Se=Math.abs(fe-Me);2*Math.PI-Se<Se&&(fe<Me?fe+=2*Math.PI:Me+=2*Math.PI),p.phi=fe-Me,n.update()},this.setAzimuthalAngle=V=>{let fe=I0(V,2*Math.PI),Me=f.theta;Me<0&&(Me+=2*Math.PI),fe<0&&(fe+=2*Math.PI);let Se=Math.abs(fe-Me);2*Math.PI-Se<Se&&(fe<Me?fe+=2*Math.PI:Me+=2*Math.PI),p.theta=fe-Me,n.update()},this.getDistance=()=>n.object.position.distanceTo(n.target),this.listenToKeyEvents=V=>{V.addEventListener("keydown",be),this._domElementKeyEvents=V},this.stopListenToKeyEvents=()=>{this._domElementKeyEvents.removeEventListener("keydown",be),this._domElementKeyEvents=null},this.saveState=()=>{n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=()=>{n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),u=c.NONE},this.update=(()=>{const V=new D,fe=new D(0,1,0),Me=new Nt().setFromUnitVectors(e.up,fe),Se=Me.clone().invert(),et=new D,W=new Nt,Ie=2*Math.PI;return function(){const pe=n.object.position;Me.setFromUnitVectors(e.up,fe),Se.copy(Me).invert(),V.copy(pe).sub(n.target),V.applyQuaternion(Me),f.setFromVector3(V),n.autoRotate&&u===c.NONE&&G($()),n.enableDamping?(f.theta+=p.theta*n.dampingFactor,f.phi+=p.phi*n.dampingFactor):(f.theta+=p.theta,f.phi+=p.phi);let Te=n.minAzimuthAngle,Qe=n.maxAzimuthAngle;isFinite(Te)&&isFinite(Qe)&&(Te<-Math.PI?Te+=Ie:Te>Math.PI&&(Te-=Ie),Qe<-Math.PI?Qe+=Ie:Qe>Math.PI&&(Qe-=Ie),Te<=Qe?f.theta=Math.max(Te,Math.min(Qe,f.theta)):f.theta=f.theta>(Te+Qe)/2?Math.max(Te,f.theta):Math.min(Qe,f.theta)),f.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,f.phi)),f.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(v,n.dampingFactor):n.target.add(v),n.zoomToCursor&&A||n.object.isOrthographicCamera?f.radius=ce(f.radius):f.radius=ce(f.radius*m),V.setFromSpherical(f),V.applyQuaternion(Se),pe.copy(n.target).add(V),n.object.matrixAutoUpdate||n.object.updateMatrix(),n.object.lookAt(n.target),n.enableDamping===!0?(p.theta*=1-n.dampingFactor,p.phi*=1-n.dampingFactor,v.multiplyScalar(1-n.dampingFactor)):(p.set(0,0,0),v.set(0,0,0));let xt=!1;if(n.zoomToCursor&&A){let Ot=null;if(n.object instanceof qt&&n.object.isPerspectiveCamera){const $t=V.length();Ot=ce($t*m);const Pt=$t-Ot;n.object.position.addScaledVector(I,Pt),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const $t=new D(z.x,z.y,0);$t.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/m)),n.object.updateProjectionMatrix(),xt=!0;const Pt=new D(z.x,z.y,0);Pt.unproject(n.object),n.object.position.sub(Pt).add($t),n.object.updateMatrixWorld(),Ot=V.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;Ot!==null&&(n.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(Ot).add(n.object.position):(Oc.origin.copy(n.object.position),Oc.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(Oc.direction))<oR?e.lookAt(n.target):(L0.setFromNormalAndCoplanarPoint(n.object.up,n.target),Oc.intersectPlane(L0,n.target))))}else n.object instanceof Wi&&n.object.isOrthographicCamera&&(xt=m!==1,xt&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/m)),n.object.updateProjectionMatrix()));return m=1,A=!1,xt||et.distanceToSquared(n.object.position)>h||8*(1-W.dot(n.object.quaternion))>h?(n.dispatchEvent(i),et.copy(n.object.position),W.copy(n.object.quaternion),xt=!1,!0):!1}})(),this.connect=V=>{n.domElement=V,n.domElement.style.touchAction="none",n.domElement.addEventListener("contextmenu",Ue),n.domElement.addEventListener("pointerdown",Ut),n.domElement.addEventListener("pointercancel",L),n.domElement.addEventListener("wheel",_e)},this.dispose=()=>{var V,fe,Me,Se,et,W;n.domElement&&(n.domElement.style.touchAction="auto"),(V=n.domElement)==null||V.removeEventListener("contextmenu",Ue),(fe=n.domElement)==null||fe.removeEventListener("pointerdown",Ut),(Me=n.domElement)==null||Me.removeEventListener("pointercancel",L),(Se=n.domElement)==null||Se.removeEventListener("wheel",_e),(et=n.domElement)==null||et.ownerDocument.removeEventListener("pointermove",F),(W=n.domElement)==null||W.ownerDocument.removeEventListener("pointerup",L),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",be)};const n=this,i={type:"change"},s={type:"start"},l={type:"end"},c={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let u=c.NONE;const h=1e-6,f=new dd,p=new dd;let m=1;const v=new D,y=new me,w=new me,x=new me,_=new me,E=new me,M=new me,b=new me,R=new me,P=new me,I=new D,z=new me;let A=!1;const C=[],B={};function $(){return 2*Math.PI/60/60*n.autoRotateSpeed}function oe(){return Math.pow(.95,n.zoomSpeed)}function G(V){n.reverseOrbit||n.reverseHorizontalOrbit?p.theta+=V:p.theta-=V}function q(V){n.reverseOrbit||n.reverseVerticalOrbit?p.phi+=V:p.phi-=V}const ie=(()=>{const V=new D;return function(Me,Se){V.setFromMatrixColumn(Se,0),V.multiplyScalar(-Me),v.add(V)}})(),te=(()=>{const V=new D;return function(Me,Se){n.screenSpacePanning===!0?V.setFromMatrixColumn(Se,1):(V.setFromMatrixColumn(Se,0),V.crossVectors(n.object.up,V)),V.multiplyScalar(Me),v.add(V)}})(),Q=(()=>{const V=new D;return function(Me,Se){const et=n.domElement;if(et&&n.object instanceof qt&&n.object.isPerspectiveCamera){const W=n.object.position;V.copy(W).sub(n.target);let Ie=V.length();Ie*=Math.tan(n.object.fov/2*Math.PI/180),ie(2*Me*Ie/et.clientHeight,n.object.matrix),te(2*Se*Ie/et.clientHeight,n.object.matrix)}else et&&n.object instanceof Wi&&n.object.isOrthographicCamera?(ie(Me*(n.object.right-n.object.left)/n.object.zoom/et.clientWidth,n.object.matrix),te(Se*(n.object.top-n.object.bottom)/n.object.zoom/et.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}})();function j(V){n.object instanceof qt&&n.object.isPerspectiveCamera||n.object instanceof Wi&&n.object.isOrthographicCamera?m=V:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function X(V){j(m/V)}function U(V){j(m*V)}function Z(V){if(!n.zoomToCursor||!n.domElement)return;A=!0;const fe=n.domElement.getBoundingClientRect(),Me=V.clientX-fe.left,Se=V.clientY-fe.top,et=fe.width,W=fe.height;z.x=Me/et*2-1,z.y=-(Se/W)*2+1,I.set(z.x,z.y,1).unproject(n.object).sub(n.object.position).normalize()}function ce(V){return Math.max(n.minDistance,Math.min(n.maxDistance,V))}function H(V){y.set(V.clientX,V.clientY)}function xe(V){Z(V),b.set(V.clientX,V.clientY)}function Fe(V){_.set(V.clientX,V.clientY)}function Ye(V){w.set(V.clientX,V.clientY),x.subVectors(w,y).multiplyScalar(n.rotateSpeed);const fe=n.domElement;fe&&(G(2*Math.PI*x.x/fe.clientHeight),q(2*Math.PI*x.y/fe.clientHeight)),y.copy(w),n.update()}function Ze(V){R.set(V.clientX,V.clientY),P.subVectors(R,b),P.y>0?X(oe()):P.y<0&&U(oe()),b.copy(R),n.update()}function tt(V){E.set(V.clientX,V.clientY),M.subVectors(E,_).multiplyScalar(n.panSpeed),Q(M.x,M.y),_.copy(E),n.update()}function it(V){Z(V),V.deltaY<0?U(oe()):V.deltaY>0&&X(oe()),n.update()}function Re(V){let fe=!1;switch(V.code){case n.keys.UP:Q(0,n.keyPanSpeed),fe=!0;break;case n.keys.BOTTOM:Q(0,-n.keyPanSpeed),fe=!0;break;case n.keys.LEFT:Q(n.keyPanSpeed,0),fe=!0;break;case n.keys.RIGHT:Q(-n.keyPanSpeed,0),fe=!0;break}fe&&(V.preventDefault(),n.update())}function k(){if(C.length==1)y.set(C[0].pageX,C[0].pageY);else{const V=.5*(C[0].pageX+C[1].pageX),fe=.5*(C[0].pageY+C[1].pageY);y.set(V,fe)}}function ye(){if(C.length==1)_.set(C[0].pageX,C[0].pageY);else{const V=.5*(C[0].pageX+C[1].pageX),fe=.5*(C[0].pageY+C[1].pageY);_.set(V,fe)}}function de(){const V=C[0].pageX-C[1].pageX,fe=C[0].pageY-C[1].pageY,Me=Math.sqrt(V*V+fe*fe);b.set(0,Me)}function we(){n.enableZoom&&de(),n.enablePan&&ye()}function ve(){n.enableZoom&&de(),n.enableRotate&&k()}function Ge(V){if(C.length==1)w.set(V.pageX,V.pageY);else{const Me=Rt(V),Se=.5*(V.pageX+Me.x),et=.5*(V.pageY+Me.y);w.set(Se,et)}x.subVectors(w,y).multiplyScalar(n.rotateSpeed);const fe=n.domElement;fe&&(G(2*Math.PI*x.x/fe.clientHeight),q(2*Math.PI*x.y/fe.clientHeight)),y.copy(w)}function Ne(V){if(C.length==1)E.set(V.pageX,V.pageY);else{const fe=Rt(V),Me=.5*(V.pageX+fe.x),Se=.5*(V.pageY+fe.y);E.set(Me,Se)}M.subVectors(E,_).multiplyScalar(n.panSpeed),Q(M.x,M.y),_.copy(E)}function ke(V){const fe=Rt(V),Me=V.pageX-fe.x,Se=V.pageY-fe.y,et=Math.sqrt(Me*Me+Se*Se);R.set(0,et),P.set(0,Math.pow(R.y/b.y,n.zoomSpeed)),X(P.y),b.copy(R)}function nt(V){n.enableZoom&&ke(V),n.enablePan&&Ne(V)}function gt(V){n.enableZoom&&ke(V),n.enableRotate&&Ge(V)}function Ut(V){var fe,Me;n.enabled!==!1&&(C.length===0&&((fe=n.domElement)==null||fe.ownerDocument.addEventListener("pointermove",F),(Me=n.domElement)==null||Me.ownerDocument.addEventListener("pointerup",L)),at(V),V.pointerType==="touch"?je(V):ne(V))}function F(V){n.enabled!==!1&&(V.pointerType==="touch"?Ce(V):Ee(V))}function L(V){var fe,Me,Se;At(V),C.length===0&&((fe=n.domElement)==null||fe.releasePointerCapture(V.pointerId),(Me=n.domElement)==null||Me.ownerDocument.removeEventListener("pointermove",F),(Se=n.domElement)==null||Se.ownerDocument.removeEventListener("pointerup",L)),n.dispatchEvent(l),u=c.NONE}function ne(V){let fe;switch(V.button){case 0:fe=n.mouseButtons.LEFT;break;case 1:fe=n.mouseButtons.MIDDLE;break;case 2:fe=n.mouseButtons.RIGHT;break;default:fe=-1}switch(fe){case os.DOLLY:if(n.enableZoom===!1)return;xe(V),u=c.DOLLY;break;case os.ROTATE:if(V.ctrlKey||V.metaKey||V.shiftKey){if(n.enablePan===!1)return;Fe(V),u=c.PAN}else{if(n.enableRotate===!1)return;H(V),u=c.ROTATE}break;case os.PAN:if(V.ctrlKey||V.metaKey||V.shiftKey){if(n.enableRotate===!1)return;H(V),u=c.ROTATE}else{if(n.enablePan===!1)return;Fe(V),u=c.PAN}break;default:u=c.NONE}u!==c.NONE&&n.dispatchEvent(s)}function Ee(V){if(n.enabled!==!1)switch(u){case c.ROTATE:if(n.enableRotate===!1)return;Ye(V);break;case c.DOLLY:if(n.enableZoom===!1)return;Ze(V);break;case c.PAN:if(n.enablePan===!1)return;tt(V);break}}function _e(V){n.enabled===!1||n.enableZoom===!1||u!==c.NONE&&u!==c.ROTATE||(V.preventDefault(),n.dispatchEvent(s),it(V),n.dispatchEvent(l))}function be(V){n.enabled===!1||n.enablePan===!1||Re(V)}function je(V){switch(Ae(V),C.length){case 1:switch(n.touches.ONE){case as.ROTATE:if(n.enableRotate===!1)return;k(),u=c.TOUCH_ROTATE;break;case as.PAN:if(n.enablePan===!1)return;ye(),u=c.TOUCH_PAN;break;default:u=c.NONE}break;case 2:switch(n.touches.TWO){case as.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;we(),u=c.TOUCH_DOLLY_PAN;break;case as.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;ve(),u=c.TOUCH_DOLLY_ROTATE;break;default:u=c.NONE}break;default:u=c.NONE}u!==c.NONE&&n.dispatchEvent(s)}function Ce(V){switch(Ae(V),u){case c.TOUCH_ROTATE:if(n.enableRotate===!1)return;Ge(V),n.update();break;case c.TOUCH_PAN:if(n.enablePan===!1)return;Ne(V),n.update();break;case c.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;nt(V),n.update();break;case c.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;gt(V),n.update();break;default:u=c.NONE}}function Ue(V){n.enabled!==!1&&V.preventDefault()}function at(V){C.push(V)}function At(V){delete B[V.pointerId];for(let fe=0;fe<C.length;fe++)if(C[fe].pointerId==V.pointerId){C.splice(fe,1);return}}function Ae(V){let fe=B[V.pointerId];fe===void 0&&(fe=new me,B[V.pointerId]=fe),fe.set(V.pageX,V.pageY)}function Rt(V){const fe=V.pointerId===C[0].pointerId?C[1]:C[0];return B[fe.pointerId]}this.dollyIn=(V=oe())=>{U(V),n.update()},this.dollyOut=(V=oe())=>{X(V),n.update()},this.getScale=()=>m,this.setScale=V=>{j(V),n.update()},this.getZoomScale=()=>oe(),t!==void 0&&this.connect(t),this.update()}};const vR=ge.forwardRef(({makeDefault:r,camera:e,regress:t,domElement:n,enableDamping:i=!0,keyEvents:s=!1,onChange:l,onStart:c,onEnd:u,...h},f)=>{const p=Ln(P=>P.invalidate),m=Ln(P=>P.camera),v=Ln(P=>P.gl),y=Ln(P=>P.events),w=Ln(P=>P.setEvents),x=Ln(P=>P.set),_=Ln(P=>P.get),E=Ln(P=>P.performance),M=e||m,b=n||y.connected||v.domElement,R=ge.useMemo(()=>new aR(M),[M]);return cy(()=>{R.enabled&&R.update()},-1),ge.useEffect(()=>(s&&R.connect(s===!0?b:s),R.connect(b),()=>void R.dispose()),[s,b,t,R,p]),ge.useEffect(()=>{const P=A=>{p(),t&&E.regress(),l&&l(A)},I=A=>{c&&c(A)},z=A=>{u&&u(A)};return R.addEventListener("change",P),R.addEventListener("start",I),R.addEventListener("end",z),()=>{R.removeEventListener("start",I),R.removeEventListener("end",z),R.removeEventListener("change",P)}},[l,c,u,R,p,w]),ge.useEffect(()=>{if(r){const P=_().controls;return x({controls:R}),()=>x({controls:P})}},[r,R]),ge.createElement("primitive",bo({ref:f,object:R,enableDamping:i},h))}),_R=ge.forwardRef(({children:r,domElement:e,onChange:t,onMouseDown:n,onMouseUp:i,onObjectChange:s,object:l,makeDefault:c,camera:u,enabled:h,axis:f,mode:p,translationSnap:m,rotationSnap:v,scaleSnap:y,space:w,size:x,showX:_,showY:E,showZ:M,...b},R)=>{const P=Ln(U=>U.controls),I=Ln(U=>U.gl),z=Ln(U=>U.events),A=Ln(U=>U.camera),C=Ln(U=>U.invalidate),B=Ln(U=>U.get),$=Ln(U=>U.set),oe=u||A,G=e||z.connected||I.domElement,q=ge.useMemo(()=>new tR(oe,G),[oe,G]),ie=ge.useRef(null);ge.useLayoutEffect(()=>(l?q.attach(l instanceof bt?l:l.current):ie.current instanceof bt&&q.attach(ie.current),()=>void q.detach()),[l,r,q]),ge.useEffect(()=>{if(P){const U=Z=>P.enabled=!Z.value;return q.addEventListener("dragging-changed",U),()=>q.removeEventListener("dragging-changed",U)}},[q,P]);const te=ge.useRef(),Q=ge.useRef(),j=ge.useRef(),X=ge.useRef();return ge.useLayoutEffect(()=>void(te.current=t),[t]),ge.useLayoutEffect(()=>void(Q.current=n),[n]),ge.useLayoutEffect(()=>void(j.current=i),[i]),ge.useLayoutEffect(()=>void(X.current=s),[s]),ge.useEffect(()=>{const U=xe=>{C(),te.current==null||te.current(xe)},Z=xe=>Q.current==null?void 0:Q.current(xe),ce=xe=>j.current==null?void 0:j.current(xe),H=xe=>X.current==null?void 0:X.current(xe);return q.addEventListener("change",U),q.addEventListener("mouseDown",Z),q.addEventListener("mouseUp",ce),q.addEventListener("objectChange",H),()=>{q.removeEventListener("change",U),q.removeEventListener("mouseDown",Z),q.removeEventListener("mouseUp",ce),q.removeEventListener("objectChange",H)}},[C,q]),ge.useEffect(()=>{if(c){const U=B().controls;return $({controls:q}),()=>$({controls:U})}},[c,q]),ge.createElement(ge.Fragment,null,ge.createElement("primitive",{ref:R,object:q,enabled:h,axis:f,mode:p,translationSnap:m,rotationSnap:v,scaleSnap:y,space:w,size:x,showX:_,showY:E,showZ:M}),ge.createElement("group",bo({ref:ie},b),r))});function lR(r,e){const t=r+"Geometry";return ge.forwardRef(({args:n,children:i,...s},l)=>{const c=ge.useRef(null);return ge.useImperativeHandle(l,()=>c.current),ge.useLayoutEffect(()=>void e?.(c.current)),ge.createElement("mesh",bo({ref:c},s),ge.createElement(t,{attach:"geometry",args:n}),i)})}const yR=lR("sphere");export{z_ as A,Bn as B,xT as C,F_ as D,pR as H,aS as M,vR as O,O_ as P,yR as S,_R as T,D as V,uR as _,dR as a,vt as b,kt as c,kd as d,Tf as e,l_ as f,cy as g,Be as h,u_ as i,Ti as j,Tu as k,Bm as l,Ln as u};
